Version 4.0 HI-TECH Software Intermediate Code
"2700 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2700: extern volatile unsigned char FVRCON __attribute__((address(0x117)));
[v _FVRCON `Vuc ~T0 @X0 0 e@279 ]
"2706
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2706:     struct {
[s S139 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S139 . ADFVR0 ADFVR1 CDAFVR0 CDAFVR1 TSRNG TSEN FVRRDY FVREN ]
"2716
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2716:     struct {
[s S140 :2 `uc 1 :2 `uc 1 ]
[n S140 . ADFVR CDAFVR ]
"2705
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2705: typedef union {
[u S138 `S139 1 `S140 1 ]
[n S138 . . . ]
"2721
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2721: extern volatile FVRCONbits_t FVRCONbits __attribute__((address(0x117)));
[v _FVRCONbits `VS138 ~T0 @X0 0 e@279 ]
"158 ./cross_compiler.h
[; ;./cross_compiler.h: 158:     unsigned int ADC_Get_Sample(char channel);
[v _ADC_Get_Sample `(ui ~T0 @X0 0 ef1`uc ]
"55 ./main.h
[; ;./main.h: 55: void show_pwr(int, int);
[v _show_pwr `(v ~T0 @X0 0 ef2`i`i ]
"160 ./cross_compiler.h
[; ;./cross_compiler.h: 160:     char Button(volatile unsigned char *port, char pin, char time, char active_state);
[v _Button `(uc ~T0 @X0 0 ef4`*Vuc`uc`uc`uc ]
"492 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 492: extern volatile unsigned char PORTB __attribute__((address(0x00D)));
[v _PORTB `Vuc ~T0 @X0 0 e@13 ]
"57 ./main.h
[; ;./main.h: 57: void show_reset(void);
[v _show_reset `(v ~T0 @X0 0 ef ]
"42 ./cross_compiler.h
[; ;./cross_compiler.h: 42:         struct {
[s S2 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S2 . B0 B1 B2 B3 B4 B5 B6 B7 ]
"39
[; ;./cross_compiler.h: 39:     typedef union {
[u S1 `uc 1 `S2 1 ]
[n S1 . bytes bits ]
"2262 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2262:     struct {
[s S119 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S119 . LATB0 LATB1 LATB2 LATB3 LATB4 LATB5 LATB6 LATB7 ]
"2261
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2261: typedef union {
[u S118 `S119 1 ]
[n S118 . . ]
"2273
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2273: extern volatile LATBbits_t LATBbits __attribute__((address(0x10D)));
[v _LATBbits `VS118 ~T0 @X0 0 e@269 ]
"2200
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2200:     struct {
[s S117 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S117 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
"2199
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2199: typedef union {
[u S116 `S117 1 ]
[n S116 . . ]
"2211
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2211: extern volatile LATAbits_t LATAbits __attribute__((address(0x10C)));
[v _LATAbits `VS116 ~T0 @X0 0 e@268 ]
"166 ./cross_compiler.h
[; ;./cross_compiler.h: 166:     void Vdelay_ms(int time_in_ms);
[v _Vdelay_ms `(v ~T0 @X0 0 ef1`i ]
"2324 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2324:     struct {
[s S121 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S121 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"2323
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2323: typedef union {
[u S120 `S121 1 ]
[n S120 . . ]
"2335
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2335: extern volatile LATCbits_t LATCbits __attribute__((address(0x10E)));
[v _LATCbits `VS120 ~T0 @X0 0 e@270 ]
"156 ./cross_compiler.h
[; ;./cross_compiler.h: 156:     void Delay_ms(const unsigned int time_in_ms);
[v _Delay_ms `(v ~T0 @X0 0 ef1`Cui ]
"56 ./main.h
[; ;./main.h: 56: void lcd_ind(void);
[v _lcd_ind `(v ~T0 @X0 0 ef ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"8785 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 8785: extern volatile __bit TMR0IE __attribute__((address(0x5D)));
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"8788
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 8788: extern volatile __bit TMR0IF __attribute__((address(0x5A)));
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"802
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 802: extern volatile unsigned char TMR0 __attribute__((address(0x015)));
[v _TMR0 `Vuc ~T0 @X0 0 e@21 ]
"3 ./uart.h
[; ;./uart.h: 3: void uartProcessInput(void);
[v _uartProcessInput `(v ~T0 @X0 0 ef ]
"4
[; ;./uart.h: 4: void uartProcessOutput(void);
[v _uartProcessOutput `(v ~T0 @X0 0 ef ]
"1607 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1607:     struct {
[s S89 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S89 . PS0 PS1 PS2 PSA TMR0SE TMR0CS INTEDG nWPUEN ]
"1617
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1617:     struct {
[s S90 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S90 . PS . T0SE T0CS ]
"1606
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1606: typedef union {
[u S88 `S89 1 `S90 1 ]
[n S88 . . . ]
"1624
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1624: extern volatile OPTION_REGbits_t OPTION_REGbits __attribute__((address(0x095)));
[v _OPTION_REGbits `VS88 ~T0 @X0 0 e@149 ]
"358
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 358:     struct {
[s S33 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S33 . IOCIF INTF TMR0IF IOCIE INTE TMR0IE PEIE GIE ]
"368
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 368:     struct {
[s S34 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S34 . . T0IF . T0IE ]
"357
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 357: typedef union {
[u S32 `S33 1 `S34 1 ]
[n S32 . . . ]
"375
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 375: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS32 ~T0 @X0 0 e@11 ]
[p mainexit ]
"119
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 119:     struct {
[s S15 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S15 . C DC Z nPD nTO ]
"126
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 126:     struct {
[s S16 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S16 . CARRY . ZERO ]
"118
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 118: typedef union {
[u S14 `S15 1 `S16 1 ]
[n S14 . . . ]
"132
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 132: extern volatile STATUSbits_t STATUSbits __attribute__((address(0x003)));
[v _STATUSbits `VS14 ~T0 @X0 0 e@3 ]
"49 ./main.h
[; ;./main.h: 49: void pic_init(void);
[v _pic_init `(v ~T0 @X0 0 ef ]
"58
[; ;./main.h: 58: void cells_init(void);
[v _cells_init `(v ~T0 @X0 0 ef ]
"115 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\eeprom_routines.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
"52 ./main.h
[; ;./main.h: 52: void lcd_prep(void);
[v _lcd_prep `(v ~T0 @X0 0 ef ]
"174 ./cross_compiler.h
[; ;./cross_compiler.h: 174:     void Test_init(void);
[v _Test_init `(v ~T0 @X0 0 ef ]
"54 ./main.h
[; ;./main.h: 54: void lcd_pwr(void);
[v _lcd_pwr `(v ~T0 @X0 0 ef ]
"60
[; ;./main.h: 60: void button_proc(void);
[v _button_proc `(v ~T0 @X0 0 ef ]
"61
[; ;./main.h: 61: void button_proc_test(void);
[v _button_proc_test `(v ~T0 @X0 0 ef ]
"8 ./uart.h
[; ;./uart.h: 8: void uart_wr_str(char, char, char *, char);
[v _uart_wr_str `(v ~T0 @X0 0 ef4`uc`uc`*uc`uc ]
"6
[; ;./uart.h: 6: char uartGetChar(void);
[v _uartGetChar `(uc ~T0 @X0 0 ef ]
"51 ./main.h
[; ;./main.h: 51: void tune_btn_push(void);
[v _tune_btn_push `(v ~T0 @X0 0 ef ]
"114 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\eeprom_routines.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"170 ./cross_compiler.h
[; ;./cross_compiler.h: 170:     void IntToStr(int number, char *output);
[v _IntToStr `(v ~T0 @X0 0 ef2`i`*uc ]
"162
[; ;./cross_compiler.h: 162:     unsigned char Bcd2Dec(unsigned char bcdnum);
[v _Bcd2Dec `(uc ~T0 @X0 0 ef1`uc ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 55: __asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
"75
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 75: __asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
"95
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 95: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"115
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 115: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"178
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 178: __asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
"198
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 198: __asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
"222
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 222: __asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
"242
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 242: __asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
"262
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 262: __asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
"314
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 314: __asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
"334
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 334: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"354
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 354: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"432
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 432: __asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
"494
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 494: __asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
"556
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 556: __asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
"618
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 618: __asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
"639
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 639: __asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
"701
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 701: __asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
"758
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 758: __asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
"804
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 804: __asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
"824
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 824: __asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
"831
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 831: __asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
"851
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 851: __asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
"871
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 871: __asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
"943
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 943: __asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
"1020
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1020: __asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
"1040
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1040: __asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
"1060
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1060: __asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
"1131
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1131: __asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
"1191
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1191: __asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
"1231
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1231: __asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
"1293
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1293: __asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
"1355
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1355: __asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
"1417
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1417: __asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
"1438
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1438: __asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
"1500
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1500: __asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
"1557
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1557: __asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
"1603
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1603: __asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
"1686
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1686: __asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
"1737
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1737: __asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
"1796
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1796: __asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
"1854
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1854: __asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
"1926
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1926: __asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
"1988
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1988: __asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
"1995
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 1995: __asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
"2015
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2015: __asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
"2035
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2035: __asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
"2124
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2124: __asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
"2196
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2196: __asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
"2258
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2258: __asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
"2320
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2320: __asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
"2382
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2382: __asm("LATE equ 0110h");
[; <" LATE equ 0110h ;# ">
"2403
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2403: __asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
"2460
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2460: __asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
"2526
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2526: __asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
"2583
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2583: __asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
"2649
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2649: __asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
"2675
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2675: __asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
"2702
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2702: __asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
"2778
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2778: __asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
"2839
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2839: __asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
"2891
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2891: __asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
"2962
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 2962: __asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
"3024
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3024: __asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
"3080
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3080: __asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
"3138
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3138: __asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
"3196
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3196: __asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
"3203
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3203: __asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
"3223
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3223: __asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
"3243
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3243: __asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
"3250
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3250: __asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
"3255
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3255: __asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
"3288
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3288: __asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
"3308
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3308: __asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
"3370
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3370: __asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
"3390
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3390: __asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
"3410
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3410: __asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
"3430
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3430: __asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
"3437
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3437: __asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
"3442
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3442: __asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
"3446
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3446: __asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
"3491
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3491: __asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
"3496
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3496: __asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
"3529
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3529: __asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
"3591
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3591: __asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
"3653
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3653: __asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
"3705
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3705: __asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
"3775
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3775: __asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
"3796
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3796: __asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
"3816
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3816: __asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
"3836
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3836: __asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
"3856
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3856: __asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
"3918
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3918: __asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
"3923
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 3923: __asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
"4056
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4056: __asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
"4118
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4118: __asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
"4180
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4180: __asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
"4187
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4187: __asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
"4207
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4207: __asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
"4227
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4227: __asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
"4309
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4309: __asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
"4371
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4371: __asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
"4376
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4376: __asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
"4493
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4493: __asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
"4537
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4537: __asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
"4544
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4544: __asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
"4564
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4564: __asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
"4584
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4584: __asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
"4666
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4666: __asm("PWM2CON equ 029Bh");
[; <" PWM2CON equ 029Bh ;# ">
"4728
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4728: __asm("CCP2AS equ 029Ch");
[; <" CCP2AS equ 029Ch ;# ">
"4733
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4733: __asm("ECCP2AS equ 029Ch");
[; <" ECCP2AS equ 029Ch ;# ">
"4850
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4850: __asm("PSTR2CON equ 029Dh");
[; <" PSTR2CON equ 029Dh ;# ">
"4894
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4894: __asm("CCPTMRS0 equ 029Eh");
[; <" CCPTMRS0 equ 029Eh ;# ">
"4982
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 4982: __asm("CCPTMRS1 equ 029Fh");
[; <" CCPTMRS1 equ 029Fh ;# ">
"5016
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5016: __asm("CCPR3 equ 0311h");
[; <" CCPR3 equ 0311h ;# ">
"5023
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5023: __asm("CCPR3L equ 0311h");
[; <" CCPR3L equ 0311h ;# ">
"5043
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5043: __asm("CCPR3H equ 0312h");
[; <" CCPR3H equ 0312h ;# ">
"5063
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5063: __asm("CCP3CON equ 0313h");
[; <" CCP3CON equ 0313h ;# ">
"5125
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5125: __asm("PWM3CON equ 0314h");
[; <" PWM3CON equ 0314h ;# ">
"5187
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5187: __asm("CCP3AS equ 0315h");
[; <" CCP3AS equ 0315h ;# ">
"5192
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5192: __asm("ECCP3AS equ 0315h");
[; <" ECCP3AS equ 0315h ;# ">
"5309
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5309: __asm("PSTR3CON equ 0316h");
[; <" PSTR3CON equ 0316h ;# ">
"5353
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5353: __asm("CCPR4 equ 0318h");
[; <" CCPR4 equ 0318h ;# ">
"5360
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5360: __asm("CCPR4L equ 0318h");
[; <" CCPR4L equ 0318h ;# ">
"5380
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5380: __asm("CCPR4H equ 0319h");
[; <" CCPR4H equ 0319h ;# ">
"5400
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5400: __asm("CCP4CON equ 031Ah");
[; <" CCP4CON equ 031Ah ;# ">
"5450
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5450: __asm("CCPR5 equ 031Ch");
[; <" CCPR5 equ 031Ch ;# ">
"5457
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5457: __asm("CCPR5L equ 031Ch");
[; <" CCPR5L equ 031Ch ;# ">
"5477
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5477: __asm("CCPR5H equ 031Dh");
[; <" CCPR5H equ 031Dh ;# ">
"5497
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5497: __asm("CCP5CON equ 031Eh");
[; <" CCP5CON equ 031Eh ;# ">
"5547
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5547: __asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
"5617
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5617: __asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
"5687
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5687: __asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
"5757
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5757: __asm("TMR4 equ 0415h");
[; <" TMR4 equ 0415h ;# ">
"5777
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5777: __asm("PR4 equ 0416h");
[; <" PR4 equ 0416h ;# ">
"5797
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5797: __asm("T4CON equ 0417h");
[; <" T4CON equ 0417h ;# ">
"5868
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5868: __asm("TMR6 equ 041Ch");
[; <" TMR6 equ 041Ch ;# ">
"5888
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5888: __asm("PR6 equ 041Dh");
[; <" PR6 equ 041Dh ;# ">
"5908
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5908: __asm("T6CON equ 041Eh");
[; <" T6CON equ 041Eh ;# ">
"5979
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 5979: __asm("LCDCON equ 0791h");
[; <" LCDCON equ 0791h ;# ">
"6050
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6050: __asm("LCDPS equ 0792h");
[; <" LCDPS equ 0792h ;# ">
"6120
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6120: __asm("LCDREF equ 0793h");
[; <" LCDREF equ 0793h ;# ">
"6172
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6172: __asm("LCDCST equ 0794h");
[; <" LCDCST equ 0794h ;# ">
"6212
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6212: __asm("LCDRL equ 0795h");
[; <" LCDRL equ 0795h ;# ">
"6290
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6290: __asm("LCDSE0 equ 0798h");
[; <" LCDSE0 equ 0798h ;# ">
"6352
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6352: __asm("LCDSE1 equ 0799h");
[; <" LCDSE1 equ 0799h ;# ">
"6414
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6414: __asm("LCDDATA0 equ 07A0h");
[; <" LCDDATA0 equ 07A0h ;# ">
"6476
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6476: __asm("LCDDATA1 equ 07A1h");
[; <" LCDDATA1 equ 07A1h ;# ">
"6538
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6538: __asm("LCDDATA3 equ 07A3h");
[; <" LCDDATA3 equ 07A3h ;# ">
"6600
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6600: __asm("LCDDATA4 equ 07A4h");
[; <" LCDDATA4 equ 07A4h ;# ">
"6662
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6662: __asm("LCDDATA6 equ 07A6h");
[; <" LCDDATA6 equ 07A6h ;# ">
"6724
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6724: __asm("LCDDATA7 equ 07A7h");
[; <" LCDDATA7 equ 07A7h ;# ">
"6786
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6786: __asm("LCDDATA9 equ 07A9h");
[; <" LCDDATA9 equ 07A9h ;# ">
"6848
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6848: __asm("LCDDATA10 equ 07AAh");
[; <" LCDDATA10 equ 07AAh ;# ">
"6910
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6910: __asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
"6942
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6942: __asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
"6962
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6962: __asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
"6982
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 6982: __asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
"7002
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7002: __asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
"7022
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7022: __asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
"7042
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7042: __asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
"7062
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7062: __asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
"7082
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7082: __asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
"7102
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7102: __asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
"7122
[; ;C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC12-16F1xxx_DFP/1.3.90/xc8\pic\include\proc\pic16f1938.h: 7122: __asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
"9 ./main.h
[; ;./main.h: 9: static char g_c_ind = 0, g_c_cap = 0;
[v _g_c_ind `uc ~T0 @X0 1 s ]
[i _g_c_ind
-> -> 0 `i `uc
]
[v _g_c_cap `uc ~T0 @X0 1 s ]
[i _g_c_cap
-> -> 0 `i `uc
]
"10
[; ;./main.h: 10: static char g_c_SW = 0;
[v _g_c_SW `uc ~T0 @X0 1 s ]
[i _g_c_SW
-> -> 0 `i `uc
]
"11
[; ;./main.h: 11: static char g_c_step_cap = 0, g_c_step_ind = 0;
[v _g_c_step_cap `uc ~T0 @X0 1 s ]
[i _g_c_step_cap
-> -> 0 `i `uc
]
[v _g_c_step_ind `uc ~T0 @X0 1 s ]
[i _g_c_step_ind
-> -> 0 `i `uc
]
"12
[; ;./main.h: 12: static char g_c_L_mult = 1, g_c_C_mult = 1;
[v _g_c_L_mult `uc ~T0 @X0 1 s ]
[i _g_c_L_mult
-> -> 1 `i `uc
]
[v _g_c_C_mult `uc ~T0 @X0 1 s ]
[i _g_c_C_mult
-> -> 1 `i `uc
]
"13
[; ;./main.h: 13: int g_i_SWR, g_i_PWR, g_i_P_max, g_i_swr_a;
[v _g_i_SWR `i ~T0 @X0 1 e ]
[v _g_i_PWR `i ~T0 @X0 1 e ]
[v _g_i_P_max `i ~T0 @X0 1 e ]
[v _g_i_swr_a `i ~T0 @X0 1 e ]
"14
[; ;./main.h: 14: static char g_b_rready = 0, g_char_p_cnt = 0;
[v _g_b_rready `uc ~T0 @X0 1 s ]
[i _g_b_rready
-> -> 0 `i `uc
]
[v _g_char_p_cnt `uc ~T0 @X0 1 s ]
[i _g_char_p_cnt
-> -> 0 `i `uc
]
"16
[; ;./main.h: 16: static char g_b_Overload = 0;
[v _g_b_Overload `uc ~T0 @X0 1 s ]
[i _g_b_Overload
-> -> 0 `i `uc
]
"18
[; ;./main.h: 18: static int e_i_Cap1, e_i_Cap2, e_i_Cap3, e_i_Cap4, e_i_Cap5, e_i_Cap6, e_i_Cap7;
[v _e_i_Cap1 `i ~T0 @X0 1 s ]
[v _e_i_Cap2 `i ~T0 @X0 1 s ]
[v _e_i_Cap3 `i ~T0 @X0 1 s ]
[v _e_i_Cap4 `i ~T0 @X0 1 s ]
[v _e_i_Cap5 `i ~T0 @X0 1 s ]
[v _e_i_Cap6 `i ~T0 @X0 1 s ]
[v _e_i_Cap7 `i ~T0 @X0 1 s ]
"19
[; ;./main.h: 19: static int e_i_Ind1, e_i_Ind2, e_i_Ind3, e_i_Ind4, e_i_Ind5, e_i_Ind6, e_i_Ind7;
[v _e_i_Ind1 `i ~T0 @X0 1 s ]
[v _e_i_Ind2 `i ~T0 @X0 1 s ]
[v _e_i_Ind3 `i ~T0 @X0 1 s ]
[v _e_i_Ind4 `i ~T0 @X0 1 s ]
[v _e_i_Ind5 `i ~T0 @X0 1 s ]
[v _e_i_Ind6 `i ~T0 @X0 1 s ]
[v _e_i_Ind7 `i ~T0 @X0 1 s ]
"21
[; ;./main.h: 21: static char e_c_b_L_linear = 0, e_c_b_C_linear = 0;
[v _e_c_b_L_linear `uc ~T0 @X0 1 s ]
[i _e_c_b_L_linear
-> -> 0 `i `uc
]
[v _e_c_b_C_linear `uc ~T0 @X0 1 s ]
[i _e_c_b_C_linear
-> -> 0 `i `uc
]
"23
[; ;./main.h: 23: static char e_c_num_L_q = 7, e_c_num_C_q = 7;
[v _e_c_num_L_q `uc ~T0 @X0 1 s ]
[i _e_c_num_L_q
-> -> 7 `i `uc
]
[v _e_c_num_C_q `uc ~T0 @X0 1 s ]
[i _e_c_num_C_q
-> -> 7 `i `uc
]
"25
[; ;./main.h: 25: static char e_c_b_D_correction = 1;
[v _e_c_b_D_correction `uc ~T0 @X0 1 s ]
[i _e_c_b_D_correction
-> -> 1 `i `uc
]
"27
[; ;./main.h: 27: static char e_c_b_L_invert = 0;
[v _e_c_b_L_invert `uc ~T0 @X0 1 s ]
[i _e_c_b_L_invert
-> -> 0 `i `uc
]
"30
[; ;./main.h: 30: static int e_i_tenths_SWR_Auto_delta;
[v _e_i_tenths_SWR_Auto_delta `i ~T0 @X0 1 s ]
"32
[; ;./main.h: 32: static char e_c_tenths_Fid_loss;
[v _e_c_tenths_Fid_loss `uc ~T0 @X0 1 s ]
"34
[; ;./main.h: 34: static int e_i_ms_Rel_Del;
[v _e_i_ms_Rel_Del `i ~T0 @X0 1 s ]
"36
[; ;./main.h: 36: static int e_i_watts_min_for_start, e_i_watts_max_for_start;
[v _e_i_watts_min_for_start `i ~T0 @X0 1 s ]
[v _e_i_watts_max_for_start `i ~T0 @X0 1 s ]
"38
[; ;./main.h: 38: static int e_i_tenths_init_max_swr;
[v _e_i_tenths_init_max_swr `i ~T0 @X0 1 s ]
"40
[; ;./main.h: 40: static char e_c_b_P_High = 0;
[v _e_c_b_P_High `uc ~T0 @X0 1 s ]
[i _e_c_b_P_High
-> -> 0 `i `uc
]
"42
[; ;./main.h: 42: static char e_c_K_Mult = 32;
[v _e_c_K_Mult `uc ~T0 @X0 1 s ]
[i _e_c_K_Mult
-> -> 32 `i `uc
]
"44
[; ;./main.h: 44: static char e_c_b_Loss_ind = 0;
[v _e_c_b_Loss_ind `uc ~T0 @X0 1 s ]
[i _e_c_b_Loss_ind
-> -> 0 `i `uc
]
"46
[; ;./main.h: 46: static char e_c_b_Relay_off = 0;
[v _e_c_b_Relay_off `uc ~T0 @X0 1 s ]
[i _e_c_b_Relay_off
-> -> 0 `i `uc
]
"80
[; ;./main.h: 80: int correction(int input) {
[v _correction `(i ~T0 @X0 1 ef1`i ]
{
[e :U _correction ]
[v _input `i ~T0 @X0 1 r1 ]
[f ]
"82
[; ;./main.h: 82:     if (input <= 80)
[e $ ! <= _input -> 80 `i 359  ]
"83
[; ;./main.h: 83:         return 0;
[e ) -> 0 `i ]
[e $UE 358  ]
[e :U 359 ]
"84
[; ;./main.h: 84:     if (input <= 171)
[e $ ! <= _input -> 171 `i 360  ]
"85
[; ;./main.h: 85:         input += 244;
[e =+ _input -> 244 `i ]
[e $U 361  ]
"86
[; ;./main.h: 86:     else if (input <= 328)
[e :U 360 ]
[e $ ! <= _input -> 328 `i 362  ]
"87
[; ;./main.h: 87:         input += 254;
[e =+ _input -> 254 `i ]
[e $U 363  ]
"88
[; ;./main.h: 88:     else if (input <= 582)
[e :U 362 ]
[e $ ! <= _input -> 582 `i 364  ]
"89
[; ;./main.h: 89:         input += 280;
[e =+ _input -> 280 `i ]
[e $U 365  ]
"90
[; ;./main.h: 90:     else if (input <= 820)
[e :U 364 ]
[e $ ! <= _input -> 820 `i 366  ]
"91
[; ;./main.h: 91:         input += 297;
[e =+ _input -> 297 `i ]
[e $U 367  ]
"92
[; ;./main.h: 92:     else if (input <= 1100)
[e :U 366 ]
[e $ ! <= _input -> 1100 `i 368  ]
"93
[; ;./main.h: 93:         input += 310;
[e =+ _input -> 310 `i ]
[e $U 369  ]
"94
[; ;./main.h: 94:     else if (input <= 2181)
[e :U 368 ]
[e $ ! <= _input -> 2181 `i 370  ]
"95
[; ;./main.h: 95:         input += 430;
[e =+ _input -> 430 `i ]
[e $U 371  ]
"96
[; ;./main.h: 96:     else if (input <= 3322)
[e :U 370 ]
[e $ ! <= _input -> 3322 `i 372  ]
"97
[; ;./main.h: 97:         input += 484;
[e =+ _input -> 484 `i ]
[e $U 373  ]
"98
[; ;./main.h: 98:     else if (input <= 4623)
[e :U 372 ]
[e $ ! <= _input -> 4623 `i 374  ]
"99
[; ;./main.h: 99:         input += 530;
[e =+ _input -> 530 `i ]
[e $U 375  ]
"100
[; ;./main.h: 100:     else if (input <= 5862)
[e :U 374 ]
[e $ ! <= _input -> 5862 `i 376  ]
"101
[; ;./main.h: 101:         input += 648;
[e =+ _input -> 648 `i ]
[e $U 377  ]
"102
[; ;./main.h: 102:     else if (input <= 7146)
[e :U 376 ]
[e $ ! <= _input -> 7146 `i 378  ]
"103
[; ;./main.h: 103:         input += 743;
[e =+ _input -> 743 `i ]
[e $U 379  ]
"104
[; ;./main.h: 104:     else if (input <= 8502)
[e :U 378 ]
[e $ ! <= _input -> 8502 `i 380  ]
"105
[; ;./main.h: 105:         input += 800;
[e =+ _input -> 800 `i ]
[e $U 381  ]
"106
[; ;./main.h: 106:     else if (input <= 10500)
[e :U 380 ]
[e $ ! <= _input -> 10500 `i 382  ]
"107
[; ;./main.h: 107:         input += 840;
[e =+ _input -> 840 `i ]
[e $U 383  ]
"108
[; ;./main.h: 108:     else
[e :U 382 ]
"109
[; ;./main.h: 109:         input += 860;
[e =+ _input -> 860 `i ]
[e :U 383 ]
[e :U 381 ]
[e :U 379 ]
[e :U 377 ]
[e :U 375 ]
[e :U 373 ]
[e :U 371 ]
[e :U 369 ]
[e :U 367 ]
[e :U 365 ]
[e :U 363 ]
[e :U 361 ]
"111
[; ;./main.h: 111:     return input;
[e ) _input ]
[e $UE 358  ]
"112
[; ;./main.h: 112: }
[e :UE 358 ]
}
"116
[; ;./main.h: 116: unsigned int get_reverse() {
[v _get_reverse `(ui ~T0 @X0 1 ef ]
{
[e :U _get_reverse ]
[f ]
"117
[; ;./main.h: 117:     unsigned int returnReverse;
[v _returnReverse `ui ~T0 @X0 1 a ]
"118
[; ;./main.h: 118:     FVRCON = 0b10000001;
[e = _FVRCON -> -> 129 `i `uc ]
"120
[; ;./main.h: 120:     while (FVRCONbits.FVRRDY == 0);
[e $U 385  ]
[e :U 386 ]
[e :U 385 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 386  ]
[e :U 387 ]
"122
[; ;./main.h: 122:     returnReverse = ADC_Get_Sample(0);
[e = _returnReverse ( _ADC_Get_Sample (1 -> -> 0 `i `uc ]
"123
[; ;./main.h: 123:     if (returnReverse <= 1000)
[e $ ! <= _returnReverse -> -> 1000 `i `ui 388  ]
"124
[; ;./main.h: 124:         return returnReverse;
[e ) _returnReverse ]
[e $UE 384  ]
[e :U 388 ]
"125
[; ;./main.h: 125:     FVRCON = 0b10000010;
[e = _FVRCON -> -> 130 `i `uc ]
"127
[; ;./main.h: 127:     while (FVRCONbits.FVRRDY == 0);
[e $U 389  ]
[e :U 390 ]
[e :U 389 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 390  ]
[e :U 391 ]
"129
[; ;./main.h: 129:     returnReverse = ADC_Get_Sample(0);
[e = _returnReverse ( _ADC_Get_Sample (1 -> -> 0 `i `uc ]
"130
[; ;./main.h: 130:     if (returnReverse <= 1000)
[e $ ! <= _returnReverse -> -> 1000 `i `ui 392  ]
"131
[; ;./main.h: 131:         return returnReverse * 2;
[e ) * _returnReverse -> -> 2 `i `ui ]
[e $UE 384  ]
[e :U 392 ]
"132
[; ;./main.h: 132:     FVRCON = 0b10000011;
[e = _FVRCON -> -> 131 `i `uc ]
"134
[; ;./main.h: 134:     while (FVRCONbits.FVRRDY == 0);
[e $U 393  ]
[e :U 394 ]
[e :U 393 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 394  ]
[e :U 395 ]
"136
[; ;./main.h: 136:     returnReverse = ADC_Get_Sample(0);
[e = _returnReverse ( _ADC_Get_Sample (1 -> -> 0 `i `uc ]
"137
[; ;./main.h: 137:     return returnReverse * 4;
[e ) * _returnReverse -> -> 4 `i `ui ]
[e $UE 384  ]
"138
[; ;./main.h: 138: }
[e :UE 384 ]
}
"141
[; ;./main.h: 141: unsigned int get_forward() {
[v _get_forward `(ui ~T0 @X0 1 ef ]
{
[e :U _get_forward ]
[f ]
"142
[; ;./main.h: 142:     unsigned int returnUIntValue;
[v _returnUIntValue `ui ~T0 @X0 1 a ]
"143
[; ;./main.h: 143:     FVRCON = 0b10000001;
[e = _FVRCON -> -> 129 `i `uc ]
"145
[; ;./main.h: 145:     while (FVRCONbits.FVRRDY == 0);
[e $U 397  ]
[e :U 398 ]
[e :U 397 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 398  ]
[e :U 399 ]
"147
[; ;./main.h: 147:     returnUIntValue = ADC_Get_Sample(1);
[e = _returnUIntValue ( _ADC_Get_Sample (1 -> -> 1 `i `uc ]
"148
[; ;./main.h: 148:     if (returnUIntValue <= 1000) {
[e $ ! <= _returnUIntValue -> -> 1000 `i `ui 400  ]
{
"149
[; ;./main.h: 149:         g_b_Overload = 0;
[e = _g_b_Overload -> -> 0 `i `uc ]
"150
[; ;./main.h: 150:         return returnUIntValue;
[e ) _returnUIntValue ]
[e $UE 396  ]
"151
[; ;./main.h: 151:     }
}
[e :U 400 ]
"152
[; ;./main.h: 152:     FVRCON = 0b10000010;
[e = _FVRCON -> -> 130 `i `uc ]
"154
[; ;./main.h: 154:     while (FVRCONbits.FVRRDY == 0);
[e $U 401  ]
[e :U 402 ]
[e :U 401 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 402  ]
[e :U 403 ]
"156
[; ;./main.h: 156:     returnUIntValue = ADC_Get_Sample(1);
[e = _returnUIntValue ( _ADC_Get_Sample (1 -> -> 1 `i `uc ]
"157
[; ;./main.h: 157:     if (returnUIntValue <= 1000) {
[e $ ! <= _returnUIntValue -> -> 1000 `i `ui 404  ]
{
"158
[; ;./main.h: 158:         g_b_Overload = 0;
[e = _g_b_Overload -> -> 0 `i `uc ]
"159
[; ;./main.h: 159:         return returnUIntValue * 2;
[e ) * _returnUIntValue -> -> 2 `i `ui ]
[e $UE 396  ]
"160
[; ;./main.h: 160:     }
}
[e :U 404 ]
"161
[; ;./main.h: 161:     FVRCON = 0b10000011;
[e = _FVRCON -> -> 131 `i `uc ]
"163
[; ;./main.h: 163:     while (FVRCONbits.FVRRDY == 0);
[e $U 405  ]
[e :U 406 ]
[e :U 405 ]
[e $ == -> . . _FVRCONbits 0 6 `i -> 0 `i 406  ]
[e :U 407 ]
"165
[; ;./main.h: 165:     returnUIntValue = ADC_Get_Sample(1);
[e = _returnUIntValue ( _ADC_Get_Sample (1 -> -> 1 `i `uc ]
"166
[; ;./main.h: 166:     if (returnUIntValue > 1000)
[e $ ! > _returnUIntValue -> -> 1000 `i `ui 408  ]
"167
[; ;./main.h: 167:         g_b_Overload = 1;
[e = _g_b_Overload -> -> 1 `i `uc ]
[e $U 409  ]
"168
[; ;./main.h: 168:     else
[e :U 408 ]
"169
[; ;./main.h: 169:         g_b_Overload = 0;
[e = _g_b_Overload -> -> 0 `i `uc ]
[e :U 409 ]
"170
[; ;./main.h: 170:     return returnUIntValue * 4;
[e ) * _returnUIntValue -> -> 4 `i `ui ]
[e $UE 396  ]
"171
[; ;./main.h: 171: }
[e :UE 396 ]
}
"173
[; ;./main.h: 173: void get_pwr() {
[v _get_pwr `(v ~T0 @X0 1 ef ]
{
[e :U _get_pwr ]
[f ]
"174
[; ;./main.h: 174:     long l_Forward, l_Reverse;
[v _l_Forward `l ~T0 @X0 1 a ]
[v _l_Reverse `l ~T0 @X0 1 a ]
"175
[; ;./main.h: 175:     double l_doub_pwr;
[v _l_doub_pwr `d ~T0 @X0 1 a ]
"176
[; ;./main.h: 176:     __asm("clrwdt");
[; <" clrwdt ;# ">
"178
[; ;./main.h: 178:     l_Forward = get_forward();
[e = _l_Forward -> ( _get_forward ..  `l ]
"179
[; ;./main.h: 179:     l_Reverse = get_reverse();
[e = _l_Reverse -> ( _get_reverse ..  `l ]
"180
[; ;./main.h: 180:     if (e_c_b_D_correction == 1)
[e $ ! == -> _e_c_b_D_correction `i -> 1 `i 411  ]
"181
[; ;./main.h: 181:         l_doub_pwr = correction((int) (l_Forward * 3));
[e = _l_doub_pwr -> ( _correction (1 -> * _l_Forward -> -> 3 `i `l `i `d ]
[e $U 412  ]
"182
[; ;./main.h: 182:     else
[e :U 411 ]
"183
[; ;./main.h: 183:         l_doub_pwr = l_Forward * 3;
[e = _l_doub_pwr -> * _l_Forward -> -> 3 `i `l `d ]
[e :U 412 ]
"185
[; ;./main.h: 185:     if (l_Reverse >= l_Forward)
[e $ ! >= _l_Reverse _l_Forward 413  ]
"186
[; ;./main.h: 186:         l_Forward = 999;
[e = _l_Forward -> -> 999 `i `l ]
[e $U 414  ]
"187
[; ;./main.h: 187:     else {
[e :U 413 ]
{
"188
[; ;./main.h: 188:         l_Forward = ((l_Forward + l_Reverse) * 100) / (l_Forward - l_Reverse);
[e = _l_Forward / * + _l_Forward _l_Reverse -> -> 100 `i `l - _l_Forward _l_Reverse ]
"189
[; ;./main.h: 189:         if (l_Forward > 999)
[e $ ! > _l_Forward -> -> 999 `i `l 415  ]
"190
[; ;./main.h: 190:             l_Forward = 999;
[e = _l_Forward -> -> 999 `i `l ]
[e :U 415 ]
"191
[; ;./main.h: 191:     }
}
[e :U 414 ]
"193
[; ;./main.h: 193:     l_doub_pwr = l_doub_pwr * e_c_K_Mult / 1000.0;
[e = _l_doub_pwr / * _l_doub_pwr -> -> _e_c_K_Mult `i `d .1000.0 ]
"194
[; ;./main.h: 194:     l_doub_pwr = l_doub_pwr / 1.414;
[e = _l_doub_pwr / _l_doub_pwr .1.414 ]
"195
[; ;./main.h: 195:     if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 416  ]
"196
[; ;./main.h: 196:         l_doub_pwr = l_doub_pwr * l_doub_pwr / 50;
[e = _l_doub_pwr / * _l_doub_pwr _l_doub_pwr -> -> 50 `i `d ]
[e $U 417  ]
"197
[; ;./main.h: 197:     else
[e :U 416 ]
"198
[; ;./main.h: 198:         l_doub_pwr = l_doub_pwr * l_doub_pwr / 5;
[e = _l_doub_pwr / * _l_doub_pwr _l_doub_pwr -> -> 5 `i `d ]
[e :U 417 ]
"199
[; ;./main.h: 199:     l_doub_pwr = l_doub_pwr + 0.5;
[e = _l_doub_pwr + _l_doub_pwr .0.5 ]
"201
[; ;./main.h: 201:     g_i_PWR = (int) (l_doub_pwr);
[e = _g_i_PWR -> _l_doub_pwr `i ]
"202
[; ;./main.h: 202:     if (l_Forward < 100)
[e $ ! < _l_Forward -> -> 100 `i `l 418  ]
"203
[; ;./main.h: 203:         g_i_SWR = 999;
[e = _g_i_SWR -> 999 `i ]
[e $U 419  ]
"204
[; ;./main.h: 204:     else
[e :U 418 ]
"205
[; ;./main.h: 205:         g_i_SWR = (int) (l_Forward);
[e = _g_i_SWR -> _l_Forward `i ]
[e :U 419 ]
"206
[; ;./main.h: 206:     return;
[e $UE 410  ]
"207
[; ;./main.h: 207: }
[e :UE 410 ]
}
"209
[; ;./main.h: 209: void get_swr() {
[v _get_swr `(v ~T0 @X0 1 ef ]
{
[e :U _get_swr ]
[f ]
"210
[; ;./main.h: 210:     get_pwr();
[e ( _get_pwr ..  ]
"211
[; ;./main.h: 211:     if (g_char_p_cnt != 100) {
[e $ ! != -> _g_char_p_cnt `i -> 100 `i 421  ]
{
"212
[; ;./main.h: 212:         g_char_p_cnt += 1;
[e =+ _g_char_p_cnt -> -> 1 `i `uc ]
"213
[; ;./main.h: 213:         if (g_i_PWR > g_i_P_max)
[e $ ! > _g_i_PWR _g_i_P_max 422  ]
"214
[; ;./main.h: 214:             g_i_P_max = g_i_PWR;
[e = _g_i_P_max _g_i_PWR ]
[e :U 422 ]
"215
[; ;./main.h: 215:     } else {
}
[e $U 423  ]
[e :U 421 ]
{
"216
[; ;./main.h: 216:         g_char_p_cnt = 0;
[e = _g_char_p_cnt -> -> 0 `i `uc ]
"217
[; ;./main.h: 217:         show_pwr(g_i_P_max, g_i_SWR);
[e ( _show_pwr (2 , _g_i_P_max _g_i_SWR ]
"218
[; ;./main.h: 218:         g_i_P_max = 0;
[e = _g_i_P_max -> 0 `i ]
"219
[; ;./main.h: 219:     }
}
[e :U 423 ]
"220
[; ;./main.h: 220:     while ((g_i_PWR < e_i_watts_min_for_start) | (g_i_PWR > e_i_watts_max_for_start & e_i_watts_max_for_start > 0)) {
[e $U 424  ]
[e :U 425 ]
{
"221
[; ;./main.h: 221:         __asm("clrwdt");
[; <" clrwdt ;# ">
"222
[; ;./main.h: 222:         get_pwr();
[e ( _get_pwr ..  ]
"223
[; ;./main.h: 223:         if (g_char_p_cnt != 100) {
[e $ ! != -> _g_char_p_cnt `i -> 100 `i 427  ]
{
"224
[; ;./main.h: 224:             g_char_p_cnt += 1;
[e =+ _g_char_p_cnt -> -> 1 `i `uc ]
"225
[; ;./main.h: 225:             if (g_i_PWR > g_i_P_max)
[e $ ! > _g_i_PWR _g_i_P_max 428  ]
"226
[; ;./main.h: 226:                 g_i_P_max = g_i_PWR;
[e = _g_i_P_max _g_i_PWR ]
[e :U 428 ]
"227
[; ;./main.h: 227:         } else {
}
[e $U 429  ]
[e :U 427 ]
{
"228
[; ;./main.h: 228:             g_char_p_cnt = 0;
[e = _g_char_p_cnt -> -> 0 `i `uc ]
"229
[; ;./main.h: 229:             show_pwr(g_i_P_max, g_i_SWR);
[e ( _show_pwr (2 , _g_i_P_max _g_i_SWR ]
"230
[; ;./main.h: 230:             g_i_P_max = 0;
[e = _g_i_P_max -> 0 `i ]
"231
[; ;./main.h: 231:         }
}
[e :U 429 ]
"233
[; ;./main.h: 233:         if (Button(&PORTB, 0, 5, 1))
[e $ ! != -> ( _Button (4 , , , &U _PORTB -> -> 0 `i `uc -> -> 5 `i `uc -> -> 1 `i `uc `i -> 0 `i 430  ]
"234
[; ;./main.h: 234:             g_b_rready = 1;
[e = _g_b_rready -> -> 1 `i `uc ]
[e :U 430 ]
"235
[; ;./main.h: 235:         if ((g_b_rready == 1) & Button(&PORTB, 0, 5, 0)) {
[e $ ! != & -> == -> _g_b_rready `i -> 1 `i `i -> ( _Button (4 , , , &U _PORTB -> -> 0 `i `uc -> -> 5 `i `uc -> -> 0 `i `uc `i -> 0 `i 431  ]
{
"236
[; ;./main.h: 236:             show_reset();
[e ( _show_reset ..  ]
"237
[; ;./main.h: 237:             g_i_SWR = 0;
[e = _g_i_SWR -> 0 `i ]
"238
[; ;./main.h: 238:             return;
[e $UE 420  ]
"239
[; ;./main.h: 239:         }
}
[e :U 431 ]
"240
[; ;./main.h: 240:     }
}
[e :U 424 ]
"220
[; ;./main.h: 220:     while ((g_i_PWR < e_i_watts_min_for_start) | (g_i_PWR > e_i_watts_max_for_start & e_i_watts_max_for_start > 0)) {
[e $ | < _g_i_PWR _e_i_watts_min_for_start & > _g_i_PWR _e_i_watts_max_for_start > _e_i_watts_max_for_start -> 0 `i 425  ]
[e :U 426 ]
"241
[; ;./main.h: 241:     return;
[e $UE 420  ]
"242
[; ;./main.h: 242: }
[e :UE 420 ]
}
"244
[; ;./main.h: 244: void set_ind(char Ind) {
[v _set_ind `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _set_ind ]
[v _Ind `uc ~T0 @X0 1 r1 ]
[f ]
"245
[; ;./main.h: 245:     charbits Indbits;
[v _Indbits `S1 ~T0 @X0 1 a ]
"246
[; ;./main.h: 246:     Indbits.bytes = Ind;
[e = . _Indbits 0 -> _Ind `uc ]
"248
[; ;./main.h: 248:     if (e_c_b_L_invert == 0) {
[e $ ! == -> _e_c_b_L_invert `i -> 0 `i 433  ]
{
"249
[; ;./main.h: 249:         LATBbits.LATB3 = Indbits.bits.B0;
[e = . . _LATBbits 0 3 . . _Indbits 1 0 ]
"250
[; ;./main.h: 250:         LATAbits.LATA2 = Indbits.bits.B1;
[e = . . _LATAbits 0 2 . . _Indbits 1 1 ]
"251
[; ;./main.h: 251:         LATBbits.LATB4 = Indbits.bits.B2;
[e = . . _LATBbits 0 4 . . _Indbits 1 2 ]
"252
[; ;./main.h: 252:         LATAbits.LATA3 = Indbits.bits.B3;
[e = . . _LATAbits 0 3 . . _Indbits 1 3 ]
"253
[; ;./main.h: 253:         LATBbits.LATB5 = Indbits.bits.B4;
[e = . . _LATBbits 0 5 . . _Indbits 1 4 ]
"254
[; ;./main.h: 254:         LATAbits.LATA5 = Indbits.bits.B5;
[e = . . _LATAbits 0 5 . . _Indbits 1 5 ]
"255
[; ;./main.h: 255:         LATAbits.LATA4 = Indbits.bits.B6;
[e = . . _LATAbits 0 4 . . _Indbits 1 6 ]
"257
[; ;./main.h: 257:     } else {
}
[e $U 434  ]
[e :U 433 ]
{
"258
[; ;./main.h: 258:         LATBbits.LATB3 = ~Indbits.bits.B0;
[e = . . _LATBbits 0 3 -> ~ -> . . _Indbits 1 0 `i `uc ]
"259
[; ;./main.h: 259:         LATAbits.LATA2 = ~Indbits.bits.B1;
[e = . . _LATAbits 0 2 -> ~ -> . . _Indbits 1 1 `i `uc ]
"260
[; ;./main.h: 260:         LATBbits.LATB4 = ~Indbits.bits.B2;
[e = . . _LATBbits 0 4 -> ~ -> . . _Indbits 1 2 `i `uc ]
"261
[; ;./main.h: 261:         LATAbits.LATA3 = ~Indbits.bits.B3;
[e = . . _LATAbits 0 3 -> ~ -> . . _Indbits 1 3 `i `uc ]
"262
[; ;./main.h: 262:         LATBbits.LATB5 = ~Indbits.bits.B4;
[e = . . _LATBbits 0 5 -> ~ -> . . _Indbits 1 4 `i `uc ]
"263
[; ;./main.h: 263:         LATAbits.LATA5 = ~Indbits.bits.B5;
[e = . . _LATAbits 0 5 -> ~ -> . . _Indbits 1 5 `i `uc ]
"264
[; ;./main.h: 264:         LATAbits.LATA4 = ~Indbits.bits.B6;
[e = . . _LATAbits 0 4 -> ~ -> . . _Indbits 1 6 `i `uc ]
"266
[; ;./main.h: 266:     }
}
[e :U 434 ]
"267
[; ;./main.h: 267:     Vdelay_ms(e_i_ms_Rel_Del);
[e ( _Vdelay_ms (1 _e_i_ms_Rel_Del ]
"268
[; ;./main.h: 268: }
[e :UE 432 ]
}
"270
[; ;./main.h: 270: void set_cap(char Cap) {
[v _set_cap `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _set_cap ]
[v _Cap `uc ~T0 @X0 1 r1 ]
[f ]
"271
[; ;./main.h: 271:     charbits Capbits;
[v _Capbits `S1 ~T0 @X0 1 a ]
"272
[; ;./main.h: 272:     Capbits.bytes = Cap;
[e = . _Capbits 0 -> _Cap `uc ]
"274
[; ;./main.h: 274:     LATCbits.LATC7 = Capbits.bits.B0;
[e = . . _LATCbits 0 7 . . _Capbits 1 0 ]
"275
[; ;./main.h: 275:     LATCbits.LATC3 = Capbits.bits.B1;
[e = . . _LATCbits 0 3 . . _Capbits 1 1 ]
"276
[; ;./main.h: 276:     LATCbits.LATC6 = Capbits.bits.B2;
[e = . . _LATCbits 0 6 . . _Capbits 1 2 ]
"277
[; ;./main.h: 277:     LATCbits.LATC2 = Capbits.bits.B3;
[e = . . _LATCbits 0 2 . . _Capbits 1 3 ]
"278
[; ;./main.h: 278:     LATCbits.LATC5 = Capbits.bits.B4;
[e = . . _LATCbits 0 5 . . _Capbits 1 4 ]
"279
[; ;./main.h: 279:     LATCbits.LATC1 = Capbits.bits.B5;
[e = . . _LATCbits 0 1 . . _Capbits 1 5 ]
"280
[; ;./main.h: 280:     LATCbits.LATC4 = Capbits.bits.B6;
[e = . . _LATCbits 0 4 . . _Capbits 1 6 ]
"282
[; ;./main.h: 282:     Vdelay_ms(e_i_ms_Rel_Del);
[e ( _Vdelay_ms (1 _e_i_ms_Rel_Del ]
"283
[; ;./main.h: 283: }
[e :UE 435 ]
}
"285
[; ;./main.h: 285: void set_sw(char g_c_SW) {
[v _set_sw `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _set_sw ]
[v _g_c_SW `uc ~T0 @X0 1 r1 ]
[f ]
"286
[; ;./main.h: 286:     LATCbits.LATC0 = g_c_SW;
[e = . . _LATCbits 0 0 -> _g_c_SW `uc ]
"287
[; ;./main.h: 287:     Vdelay_ms(e_i_ms_Rel_Del);
[e ( _Vdelay_ms (1 _e_i_ms_Rel_Del ]
"288
[; ;./main.h: 288: }
[e :UE 436 ]
}
"290
[; ;./main.h: 290: void atu_reset() {
[v _atu_reset `(v ~T0 @X0 1 ef ]
{
[e :U _atu_reset ]
[f ]
"291
[; ;./main.h: 291:     g_c_ind = 0;
[e = _g_c_ind -> -> 0 `i `uc ]
"292
[; ;./main.h: 292:     g_c_cap = 0;
[e = _g_c_cap -> -> 0 `i `uc ]
"293
[; ;./main.h: 293:     set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"294
[; ;./main.h: 294:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"295
[; ;./main.h: 295:     Vdelay_ms(e_i_ms_Rel_Del);
[e ( _Vdelay_ms (1 _e_i_ms_Rel_Del ]
"296
[; ;./main.h: 296: }
[e :UE 437 ]
}
"298
[; ;./main.h: 298: void coarse_cap() {
[v _coarse_cap `(v ~T0 @X0 1 ef ]
{
[e :U _coarse_cap ]
[f ]
"299
[; ;./main.h: 299:     char l_coarse_cap_step = 3;
[v _l_coarse_cap_step `uc ~T0 @X0 1 a ]
[e = _l_coarse_cap_step -> -> 3 `i `uc ]
"300
[; ;./main.h: 300:     char l_coarse_cap_count;
[v _l_coarse_cap_count `uc ~T0 @X0 1 a ]
"301
[; ;./main.h: 301:     int l_coarse_cap_min_swr;
[v _l_coarse_cap_min_swr `i ~T0 @X0 1 a ]
"303
[; ;./main.h: 303:     g_c_cap = 0;
[e = _g_c_cap -> -> 0 `i `uc ]
"304
[; ;./main.h: 304:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"305
[; ;./main.h: 305:     g_c_step_cap = l_coarse_cap_step;
[e = _g_c_step_cap _l_coarse_cap_step ]
"306
[; ;./main.h: 306:     get_swr();
[e ( _get_swr ..  ]
"307
[; ;./main.h: 307:     if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 439  ]
"308
[; ;./main.h: 308:         return;
[e $UE 438  ]
[e :U 439 ]
"309
[; ;./main.h: 309:     l_coarse_cap_min_swr = g_i_SWR + g_i_SWR / 20;
[e = _l_coarse_cap_min_swr + _g_i_SWR / _g_i_SWR -> 20 `i ]
"310
[; ;./main.h: 310:     for (l_coarse_cap_count = l_coarse_cap_step; l_coarse_cap_count <= 31;) {
{
[e = _l_coarse_cap_count _l_coarse_cap_step ]
[e $ <= -> _l_coarse_cap_count `i -> 31 `i 440  ]
[e $U 441  ]
[e :U 440 ]
{
"311
[; ;./main.h: 311:         set_cap(l_coarse_cap_count * g_c_C_mult);
[e ( _set_cap (1 -> * -> _l_coarse_cap_count `i -> _g_c_C_mult `i `uc ]
"312
[; ;./main.h: 312:         get_swr();
[e ( _get_swr ..  ]
"313
[; ;./main.h: 313:         if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 443  ]
"314
[; ;./main.h: 314:             return;
[e $UE 438  ]
[e :U 443 ]
"315
[; ;./main.h: 315:         if (g_i_SWR < l_coarse_cap_min_swr) {
[e $ ! < _g_i_SWR _l_coarse_cap_min_swr 444  ]
{
"316
[; ;./main.h: 316:             l_coarse_cap_min_swr = g_i_SWR + g_i_SWR / 20;
[e = _l_coarse_cap_min_swr + _g_i_SWR / _g_i_SWR -> 20 `i ]
"317
[; ;./main.h: 317:             g_c_cap = l_coarse_cap_count * g_c_C_mult;
[e = _g_c_cap -> * -> _l_coarse_cap_count `i -> _g_c_C_mult `i `uc ]
"318
[; ;./main.h: 318:             g_c_step_cap = l_coarse_cap_step;
[e = _g_c_step_cap _l_coarse_cap_step ]
"319
[; ;./main.h: 319:             if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 445  ]
"320
[; ;./main.h: 320:                 break;
[e $U 441  ]
[e :U 445 ]
"321
[; ;./main.h: 321:             l_coarse_cap_count += l_coarse_cap_step;
[e =+ _l_coarse_cap_count -> _l_coarse_cap_step `uc ]
"322
[; ;./main.h: 322:             if (e_c_b_C_linear == 0 & l_coarse_cap_count == 9)
[e $ ! & == -> _e_c_b_C_linear `i -> 0 `i == -> _l_coarse_cap_count `i -> 9 `i 446  ]
"323
[; ;./main.h: 323:                 l_coarse_cap_count = 8;
[e = _l_coarse_cap_count -> -> 8 `i `uc ]
[e $U 447  ]
"324
[; ;./main.h: 324:             else if (e_c_b_C_linear == 0 & l_coarse_cap_count == 17) {
[e :U 446 ]
[e $ ! & == -> _e_c_b_C_linear `i -> 0 `i == -> _l_coarse_cap_count `i -> 17 `i 448  ]
{
"325
[; ;./main.h: 325:                 l_coarse_cap_count = 16;
[e = _l_coarse_cap_count -> -> 16 `i `uc ]
"326
[; ;./main.h: 326:                 l_coarse_cap_step = 4;
[e = _l_coarse_cap_step -> -> 4 `i `uc ]
"327
[; ;./main.h: 327:             }
}
[e :U 448 ]
[e :U 447 ]
"328
[; ;./main.h: 328:         } else
}
[e $U 449  ]
[e :U 444 ]
"329
[; ;./main.h: 329:             break;
[e $U 441  ]
[e :U 449 ]
"330
[; ;./main.h: 330:     }
}
[e $ <= -> _l_coarse_cap_count `i -> 31 `i 440  ]
[e :U 441 ]
}
"331
[; ;./main.h: 331:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"332
[; ;./main.h: 332:     return;
[e $UE 438  ]
"333
[; ;./main.h: 333: }
[e :UE 438 ]
}
"335
[; ;./main.h: 335: void coarse_tune() {
[v _coarse_tune `(v ~T0 @X0 1 ef ]
{
[e :U _coarse_tune ]
[f ]
"336
[; ;./main.h: 336:     char l_coarse_tune_step = 3;
[v _l_coarse_tune_step `uc ~T0 @X0 1 a ]
[e = _l_coarse_tune_step -> -> 3 `i `uc ]
"337
[; ;./main.h: 337:     char l_coarse_tune_count;
[v _l_coarse_tune_count `uc ~T0 @X0 1 a ]
"338
[; ;./main.h: 338:     char l_coarse_tune_mem_cap, l_coarse_tune_mem_step_cap;
[v _l_coarse_tune_mem_cap `uc ~T0 @X0 1 a ]
[v _l_coarse_tune_mem_step_cap `uc ~T0 @X0 1 a ]
"339
[; ;./main.h: 339:     int l_coarse_tune_min_swr;
[v _l_coarse_tune_min_swr `i ~T0 @X0 1 a ]
"341
[; ;./main.h: 341:     l_coarse_tune_mem_cap = 0;
[e = _l_coarse_tune_mem_cap -> -> 0 `i `uc ]
"342
[; ;./main.h: 342:     g_c_step_ind = l_coarse_tune_step;
[e = _g_c_step_ind _l_coarse_tune_step ]
"343
[; ;./main.h: 343:     l_coarse_tune_mem_step_cap = 3;
[e = _l_coarse_tune_mem_step_cap -> -> 3 `i `uc ]
"344
[; ;./main.h: 344:     l_coarse_tune_min_swr = g_i_SWR + g_i_SWR / 20;
[e = _l_coarse_tune_min_swr + _g_i_SWR / _g_i_SWR -> 20 `i ]
"345
[; ;./main.h: 345:     for (l_coarse_tune_count = 0; l_coarse_tune_count <= 31;) {
{
[e = _l_coarse_tune_count -> -> 0 `i `uc ]
[e $ <= -> _l_coarse_tune_count `i -> 31 `i 451  ]
[e $U 452  ]
[e :U 451 ]
{
"346
[; ;./main.h: 346:         set_ind(l_coarse_tune_count * g_c_L_mult);
[e ( _set_ind (1 -> * -> _l_coarse_tune_count `i -> _g_c_L_mult `i `uc ]
"347
[; ;./main.h: 347:         coarse_cap();
[e ( _coarse_cap ..  ]
"348
[; ;./main.h: 348:         get_swr();
[e ( _get_swr ..  ]
"349
[; ;./main.h: 349:         if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 454  ]
"350
[; ;./main.h: 350:             return;
[e $UE 450  ]
[e :U 454 ]
"351
[; ;./main.h: 351:         if (g_i_SWR < l_coarse_tune_min_swr) {
[e $ ! < _g_i_SWR _l_coarse_tune_min_swr 455  ]
{
"352
[; ;./main.h: 352:             l_coarse_tune_min_swr = g_i_SWR + g_i_SWR / 20;
[e = _l_coarse_tune_min_swr + _g_i_SWR / _g_i_SWR -> 20 `i ]
"353
[; ;./main.h: 353:             g_c_ind = l_coarse_tune_count * g_c_L_mult;
[e = _g_c_ind -> * -> _l_coarse_tune_count `i -> _g_c_L_mult `i `uc ]
"354
[; ;./main.h: 354:             l_coarse_tune_mem_cap = g_c_cap;
[e = _l_coarse_tune_mem_cap _g_c_cap ]
"355
[; ;./main.h: 355:             g_c_step_ind = l_coarse_tune_step;
[e = _g_c_step_ind _l_coarse_tune_step ]
"356
[; ;./main.h: 356:             l_coarse_tune_mem_step_cap = g_c_step_cap;
[e = _l_coarse_tune_mem_step_cap _g_c_step_cap ]
"357
[; ;./main.h: 357:             if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 456  ]
"358
[; ;./main.h: 358:                 break;
[e $U 452  ]
[e :U 456 ]
"359
[; ;./main.h: 359:             l_coarse_tune_count += l_coarse_tune_step;
[e =+ _l_coarse_tune_count -> _l_coarse_tune_step `uc ]
"360
[; ;./main.h: 360:             if (e_c_b_L_linear == 0 & l_coarse_tune_count == 9)
[e $ ! & == -> _e_c_b_L_linear `i -> 0 `i == -> _l_coarse_tune_count `i -> 9 `i 457  ]
"361
[; ;./main.h: 361:                 l_coarse_tune_count = 8;
[e = _l_coarse_tune_count -> -> 8 `i `uc ]
[e $U 458  ]
"362
[; ;./main.h: 362:             else if (e_c_b_L_linear == 0 & l_coarse_tune_count == 17) {
[e :U 457 ]
[e $ ! & == -> _e_c_b_L_linear `i -> 0 `i == -> _l_coarse_tune_count `i -> 17 `i 459  ]
{
"363
[; ;./main.h: 363:                 l_coarse_tune_count = 16;
[e = _l_coarse_tune_count -> -> 16 `i `uc ]
"364
[; ;./main.h: 364:                 l_coarse_tune_step = 4;
[e = _l_coarse_tune_step -> -> 4 `i `uc ]
"365
[; ;./main.h: 365:             }
}
[e :U 459 ]
[e :U 458 ]
"366
[; ;./main.h: 366:         } else
}
[e $U 460  ]
[e :U 455 ]
"367
[; ;./main.h: 367:             break;
[e $U 452  ]
[e :U 460 ]
"368
[; ;./main.h: 368:     }
}
[e $ <= -> _l_coarse_tune_count `i -> 31 `i 451  ]
[e :U 452 ]
}
"369
[; ;./main.h: 369:     g_c_cap = l_coarse_tune_mem_cap;
[e = _g_c_cap _l_coarse_tune_mem_cap ]
"370
[; ;./main.h: 370:     set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"371
[; ;./main.h: 371:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"372
[; ;./main.h: 372:     g_c_step_cap = l_coarse_tune_mem_step_cap;
[e = _g_c_step_cap _l_coarse_tune_mem_step_cap ]
"373
[; ;./main.h: 373:     Delay_ms(10);
[e ( _Delay_ms (1 -> -> 10 `i `ui ]
"374
[; ;./main.h: 374:     return;
[e $UE 450  ]
"375
[; ;./main.h: 375: }
[e :UE 450 ]
}
"377
[; ;./main.h: 377: void sharp_cap() {
[v _sharp_cap `(v ~T0 @X0 1 ef ]
{
[e :U _sharp_cap ]
[f ]
"378
[; ;./main.h: 378:     char l_sharp_cap_range, l_sharp_cap_count, l_sharp_cap_max_range, l_sharp_cap_min_range;
[v _l_sharp_cap_range `uc ~T0 @X0 1 a ]
[v _l_sharp_cap_count `uc ~T0 @X0 1 a ]
[v _l_sharp_cap_max_range `uc ~T0 @X0 1 a ]
[v _l_sharp_cap_min_range `uc ~T0 @X0 1 a ]
"379
[; ;./main.h: 379:     int l_sharp_cap_min_SWR;
[v _l_sharp_cap_min_SWR `i ~T0 @X0 1 a ]
"380
[; ;./main.h: 380:     l_sharp_cap_range = g_c_step_cap * g_c_C_mult;
[e = _l_sharp_cap_range -> * -> _g_c_step_cap `i -> _g_c_C_mult `i `uc ]
"382
[; ;./main.h: 382:     l_sharp_cap_max_range = g_c_cap + l_sharp_cap_range;
[e = _l_sharp_cap_max_range -> + -> _g_c_cap `i -> _l_sharp_cap_range `i `uc ]
"383
[; ;./main.h: 383:     if (l_sharp_cap_max_range > 32 * g_c_C_mult - 1)
[e $ ! > -> _l_sharp_cap_max_range `i - * -> 32 `i -> _g_c_C_mult `i -> 1 `i 462  ]
"384
[; ;./main.h: 384:         l_sharp_cap_max_range = 32 * g_c_C_mult - 1;
[e = _l_sharp_cap_max_range -> - * -> 32 `i -> _g_c_C_mult `i -> 1 `i `uc ]
[e :U 462 ]
"385
[; ;./main.h: 385:     if (g_c_cap > l_sharp_cap_range)
[e $ ! > -> _g_c_cap `i -> _l_sharp_cap_range `i 463  ]
"386
[; ;./main.h: 386:         l_sharp_cap_min_range = g_c_cap - l_sharp_cap_range;
[e = _l_sharp_cap_min_range -> - -> _g_c_cap `i -> _l_sharp_cap_range `i `uc ]
[e $U 464  ]
"387
[; ;./main.h: 387:     else
[e :U 463 ]
"388
[; ;./main.h: 388:         l_sharp_cap_min_range = 0;
[e = _l_sharp_cap_min_range -> -> 0 `i `uc ]
[e :U 464 ]
"389
[; ;./main.h: 389:     g_c_cap = l_sharp_cap_min_range;
[e = _g_c_cap _l_sharp_cap_min_range ]
"390
[; ;./main.h: 390:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"391
[; ;./main.h: 391:     get_swr();
[e ( _get_swr ..  ]
"392
[; ;./main.h: 392:     if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 465  ]
"393
[; ;./main.h: 393:         return;
[e $UE 461  ]
[e :U 465 ]
"394
[; ;./main.h: 394:     l_sharp_cap_min_SWR = g_i_SWR;
[e = _l_sharp_cap_min_SWR _g_i_SWR ]
"395
[; ;./main.h: 395:     for (l_sharp_cap_count = l_sharp_cap_min_range + g_c_C_mult; l_sharp_cap_count <= l_sharp_cap_max_range; l_sharp_cap_count += g_c_C_mult) {
{
[e = _l_sharp_cap_count -> + -> _l_sharp_cap_min_range `i -> _g_c_C_mult `i `uc ]
[e $U 469  ]
[e :U 466 ]
{
"396
[; ;./main.h: 396:         set_cap(l_sharp_cap_count);
[e ( _set_cap (1 _l_sharp_cap_count ]
"397
[; ;./main.h: 397:         get_swr();
[e ( _get_swr ..  ]
"398
[; ;./main.h: 398:         if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 470  ]
"399
[; ;./main.h: 399:             return;
[e $UE 461  ]
[e :U 470 ]
"400
[; ;./main.h: 400:         if (g_i_SWR >= l_sharp_cap_min_SWR) {
[e $ ! >= _g_i_SWR _l_sharp_cap_min_SWR 471  ]
{
"401
[; ;./main.h: 401:             Delay_ms(10);
[e ( _Delay_ms (1 -> -> 10 `i `ui ]
"402
[; ;./main.h: 402:             get_swr();
[e ( _get_swr ..  ]
"403
[; ;./main.h: 403:         }
}
[e :U 471 ]
"404
[; ;./main.h: 404:         if (g_i_SWR >= l_sharp_cap_min_SWR) {
[e $ ! >= _g_i_SWR _l_sharp_cap_min_SWR 472  ]
{
"405
[; ;./main.h: 405:             Delay_ms(10);
[e ( _Delay_ms (1 -> -> 10 `i `ui ]
"406
[; ;./main.h: 406:             get_swr();
[e ( _get_swr ..  ]
"407
[; ;./main.h: 407:         }
}
[e :U 472 ]
"408
[; ;./main.h: 408:         if (g_i_SWR < l_sharp_cap_min_SWR) {
[e $ ! < _g_i_SWR _l_sharp_cap_min_SWR 473  ]
{
"409
[; ;./main.h: 409:             l_sharp_cap_min_SWR = g_i_SWR;
[e = _l_sharp_cap_min_SWR _g_i_SWR ]
"410
[; ;./main.h: 410:             g_c_cap = l_sharp_cap_count;
[e = _g_c_cap _l_sharp_cap_count ]
"411
[; ;./main.h: 411:             if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 474  ]
"412
[; ;./main.h: 412:                 break;
[e $U 467  ]
[e :U 474 ]
"413
[; ;./main.h: 413:         } else
}
[e $U 475  ]
[e :U 473 ]
"414
[; ;./main.h: 414:             break;
[e $U 467  ]
[e :U 475 ]
"415
[; ;./main.h: 415:     }
}
[e =+ _l_sharp_cap_count -> _g_c_C_mult `uc ]
[e :U 469 ]
[e $ <= -> _l_sharp_cap_count `i -> _l_sharp_cap_max_range `i 466  ]
[e :U 467 ]
}
"416
[; ;./main.h: 416:     set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"417
[; ;./main.h: 417:     return;
[e $UE 461  ]
"418
[; ;./main.h: 418: }
[e :UE 461 ]
}
"420
[; ;./main.h: 420: void sharp_ind() {
[v _sharp_ind `(v ~T0 @X0 1 ef ]
{
[e :U _sharp_ind ]
[f ]
"421
[; ;./main.h: 421:     char l_sharp_ind_range, l_sharp_ind_count, l_sharp_ind_max_range, l_sharp_ind_min_range;
[v _l_sharp_ind_range `uc ~T0 @X0 1 a ]
[v _l_sharp_ind_count `uc ~T0 @X0 1 a ]
[v _l_sharp_ind_max_range `uc ~T0 @X0 1 a ]
[v _l_sharp_ind_min_range `uc ~T0 @X0 1 a ]
"422
[; ;./main.h: 422:     int l_sharp_ind_min_SWR;
[v _l_sharp_ind_min_SWR `i ~T0 @X0 1 a ]
"423
[; ;./main.h: 423:     l_sharp_ind_range = g_c_step_ind * g_c_L_mult;
[e = _l_sharp_ind_range -> * -> _g_c_step_ind `i -> _g_c_L_mult `i `uc ]
"425
[; ;./main.h: 425:     l_sharp_ind_max_range = g_c_ind + l_sharp_ind_range;
[e = _l_sharp_ind_max_range -> + -> _g_c_ind `i -> _l_sharp_ind_range `i `uc ]
"426
[; ;./main.h: 426:     if (l_sharp_ind_max_range > 32 * g_c_L_mult - 1)
[e $ ! > -> _l_sharp_ind_max_range `i - * -> 32 `i -> _g_c_L_mult `i -> 1 `i 477  ]
"427
[; ;./main.h: 427:         l_sharp_ind_max_range = 32 * g_c_L_mult - 1;
[e = _l_sharp_ind_max_range -> - * -> 32 `i -> _g_c_L_mult `i -> 1 `i `uc ]
[e :U 477 ]
"428
[; ;./main.h: 428:     if (g_c_ind > l_sharp_ind_range)
[e $ ! > -> _g_c_ind `i -> _l_sharp_ind_range `i 478  ]
"429
[; ;./main.h: 429:         l_sharp_ind_min_range = g_c_ind - l_sharp_ind_range;
[e = _l_sharp_ind_min_range -> - -> _g_c_ind `i -> _l_sharp_ind_range `i `uc ]
[e $U 479  ]
"430
[; ;./main.h: 430:     else
[e :U 478 ]
"431
[; ;./main.h: 431:         l_sharp_ind_min_range = 0;
[e = _l_sharp_ind_min_range -> -> 0 `i `uc ]
[e :U 479 ]
"432
[; ;./main.h: 432:     g_c_ind = l_sharp_ind_min_range;
[e = _g_c_ind _l_sharp_ind_min_range ]
"433
[; ;./main.h: 433:     set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"434
[; ;./main.h: 434:     get_swr();
[e ( _get_swr ..  ]
"435
[; ;./main.h: 435:     if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 480  ]
"436
[; ;./main.h: 436:         return;
[e $UE 476  ]
[e :U 480 ]
"437
[; ;./main.h: 437:     l_sharp_ind_min_SWR = g_i_SWR;
[e = _l_sharp_ind_min_SWR _g_i_SWR ]
"438
[; ;./main.h: 438:     for (l_sharp_ind_count = l_sharp_ind_min_range + g_c_L_mult; l_sharp_ind_count <= l_sharp_ind_max_range; l_sharp_ind_count += g_c_L_mult) {
{
[e = _l_sharp_ind_count -> + -> _l_sharp_ind_min_range `i -> _g_c_L_mult `i `uc ]
[e $U 484  ]
[e :U 481 ]
{
"439
[; ;./main.h: 439:         set_ind(l_sharp_ind_count);
[e ( _set_ind (1 _l_sharp_ind_count ]
"440
[; ;./main.h: 440:         get_swr();
[e ( _get_swr ..  ]
"441
[; ;./main.h: 441:         if (g_i_SWR == 0)
[e $ ! == _g_i_SWR -> 0 `i 485  ]
"442
[; ;./main.h: 442:             return;
[e $UE 476  ]
[e :U 485 ]
"443
[; ;./main.h: 443:         if (g_i_SWR >= l_sharp_ind_min_SWR) {
[e $ ! >= _g_i_SWR _l_sharp_ind_min_SWR 486  ]
{
"444
[; ;./main.h: 444:             Delay_ms(10);
[e ( _Delay_ms (1 -> -> 10 `i `ui ]
"445
[; ;./main.h: 445:             get_swr();
[e ( _get_swr ..  ]
"446
[; ;./main.h: 446:         }
}
[e :U 486 ]
"447
[; ;./main.h: 447:         if (g_i_SWR >= l_sharp_ind_min_SWR) {
[e $ ! >= _g_i_SWR _l_sharp_ind_min_SWR 487  ]
{
"448
[; ;./main.h: 448:             Delay_ms(10);
[e ( _Delay_ms (1 -> -> 10 `i `ui ]
"449
[; ;./main.h: 449:             get_swr();
[e ( _get_swr ..  ]
"450
[; ;./main.h: 450:         }
}
[e :U 487 ]
"451
[; ;./main.h: 451:         if (g_i_SWR < l_sharp_ind_min_SWR) {
[e $ ! < _g_i_SWR _l_sharp_ind_min_SWR 488  ]
{
"452
[; ;./main.h: 452:             l_sharp_ind_min_SWR = g_i_SWR;
[e = _l_sharp_ind_min_SWR _g_i_SWR ]
"453
[; ;./main.h: 453:             g_c_ind = l_sharp_ind_count;
[e = _g_c_ind _l_sharp_ind_count ]
"454
[; ;./main.h: 454:             if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 489  ]
"455
[; ;./main.h: 455:                 break;
[e $U 482  ]
[e :U 489 ]
"456
[; ;./main.h: 456:         } else
}
[e $U 490  ]
[e :U 488 ]
"457
[; ;./main.h: 457:             break;
[e $U 482  ]
[e :U 490 ]
"458
[; ;./main.h: 458:     }
}
[e =+ _l_sharp_ind_count -> _g_c_L_mult `uc ]
[e :U 484 ]
[e $ <= -> _l_sharp_ind_count `i -> _l_sharp_ind_max_range `i 481  ]
[e :U 482 ]
}
"459
[; ;./main.h: 459:     set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"460
[; ;./main.h: 460:     return;
[e $UE 476  ]
"461
[; ;./main.h: 461: }
[e :UE 476 ]
}
"463
[; ;./main.h: 463: void sub_tune() {
[v _sub_tune `(v ~T0 @X0 1 ef ]
{
[e :U _sub_tune ]
[f ]
"464
[; ;./main.h: 464:     int l_int_swr_mem, l_int_ind_mem, l_int_cap_mem;
[v _l_int_swr_mem `i ~T0 @X0 1 a ]
[v _l_int_ind_mem `i ~T0 @X0 1 a ]
[v _l_int_cap_mem `i ~T0 @X0 1 a ]
"466
[; ;./main.h: 466:     l_int_swr_mem = g_i_SWR;
[e = _l_int_swr_mem _g_i_SWR ]
"467
[; ;./main.h: 467:     coarse_tune();
[e ( _coarse_tune ..  ]
"468
[; ;./main.h: 468:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 492  ]
{
"469
[; ;./main.h: 469:         atu_reset();
[e ( _atu_reset ..  ]
"470
[; ;./main.h: 470:         return;
[e $UE 491  ]
"471
[; ;./main.h: 471:     }
}
[e :U 492 ]
"472
[; ;./main.h: 472:     get_swr();
[e ( _get_swr ..  ]
"473
[; ;./main.h: 473:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 493  ]
"474
[; ;./main.h: 474:         return;
[e $UE 491  ]
[e :U 493 ]
"475
[; ;./main.h: 475:     sharp_ind();
[e ( _sharp_ind ..  ]
"476
[; ;./main.h: 476:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 494  ]
{
"477
[; ;./main.h: 477:         atu_reset();
[e ( _atu_reset ..  ]
"478
[; ;./main.h: 478:         return;
[e $UE 491  ]
"479
[; ;./main.h: 479:     }
}
[e :U 494 ]
"480
[; ;./main.h: 480:     get_swr();
[e ( _get_swr ..  ]
"481
[; ;./main.h: 481:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 495  ]
"482
[; ;./main.h: 482:         return;
[e $UE 491  ]
[e :U 495 ]
"483
[; ;./main.h: 483:     sharp_cap();
[e ( _sharp_cap ..  ]
"484
[; ;./main.h: 484:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 496  ]
{
"485
[; ;./main.h: 485:         atu_reset();
[e ( _atu_reset ..  ]
"486
[; ;./main.h: 486:         return;
[e $UE 491  ]
"487
[; ;./main.h: 487:     }
}
[e :U 496 ]
"488
[; ;./main.h: 488:     get_swr();
[e ( _get_swr ..  ]
"489
[; ;./main.h: 489:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 497  ]
"490
[; ;./main.h: 490:         return;
[e $UE 491  ]
[e :U 497 ]
"492
[; ;./main.h: 492:     if (g_i_SWR < 200 & g_i_SWR < l_int_swr_mem & (l_int_swr_mem - g_i_SWR) > 100)
[e $ ! & & < _g_i_SWR -> 200 `i < _g_i_SWR _l_int_swr_mem > - _l_int_swr_mem _g_i_SWR -> 100 `i 498  ]
"493
[; ;./main.h: 493:         return;
[e $UE 491  ]
[e :U 498 ]
"494
[; ;./main.h: 494:     l_int_swr_mem = g_i_SWR;
[e = _l_int_swr_mem _g_i_SWR ]
"495
[; ;./main.h: 495:     l_int_ind_mem = g_c_ind;
[e = _l_int_ind_mem -> _g_c_ind `i ]
"496
[; ;./main.h: 496:     l_int_cap_mem = g_c_cap;
[e = _l_int_cap_mem -> _g_c_cap `i ]
"498
[; ;./main.h: 498:     if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 499  ]
"499
[; ;./main.h: 499:         g_c_SW = 0;
[e = _g_c_SW -> -> 0 `i `uc ]
[e $U 500  ]
"500
[; ;./main.h: 500:     else
[e :U 499 ]
"501
[; ;./main.h: 501:         g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
[e :U 500 ]
"502
[; ;./main.h: 502:     atu_reset();
[e ( _atu_reset ..  ]
"503
[; ;./main.h: 503:     set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"504
[; ;./main.h: 504:     Delay_ms(50);
[e ( _Delay_ms (1 -> -> 50 `i `ui ]
"505
[; ;./main.h: 505:     get_swr();
[e ( _get_swr ..  ]
"506
[; ;./main.h: 506:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 501  ]
"507
[; ;./main.h: 507:         return;
[e $UE 491  ]
[e :U 501 ]
"509
[; ;./main.h: 509:     coarse_tune();
[e ( _coarse_tune ..  ]
"510
[; ;./main.h: 510:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 502  ]
{
"511
[; ;./main.h: 511:         atu_reset();
[e ( _atu_reset ..  ]
"512
[; ;./main.h: 512:         return;
[e $UE 491  ]
"513
[; ;./main.h: 513:     }
}
[e :U 502 ]
"514
[; ;./main.h: 514:     get_swr();
[e ( _get_swr ..  ]
"515
[; ;./main.h: 515:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 503  ]
"516
[; ;./main.h: 516:         return;
[e $UE 491  ]
[e :U 503 ]
"517
[; ;./main.h: 517:     sharp_ind();
[e ( _sharp_ind ..  ]
"518
[; ;./main.h: 518:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 504  ]
{
"519
[; ;./main.h: 519:         atu_reset();
[e ( _atu_reset ..  ]
"520
[; ;./main.h: 520:         return;
[e $UE 491  ]
"521
[; ;./main.h: 521:     }
}
[e :U 504 ]
"522
[; ;./main.h: 522:     get_swr();
[e ( _get_swr ..  ]
"523
[; ;./main.h: 523:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 505  ]
"524
[; ;./main.h: 524:         return;
[e $UE 491  ]
[e :U 505 ]
"525
[; ;./main.h: 525:     sharp_cap();
[e ( _sharp_cap ..  ]
"526
[; ;./main.h: 526:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 506  ]
{
"527
[; ;./main.h: 527:         atu_reset();
[e ( _atu_reset ..  ]
"528
[; ;./main.h: 528:         return;
[e $UE 491  ]
"529
[; ;./main.h: 529:     }
}
[e :U 506 ]
"530
[; ;./main.h: 530:     get_swr();
[e ( _get_swr ..  ]
"531
[; ;./main.h: 531:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 507  ]
"532
[; ;./main.h: 532:         return;
[e $UE 491  ]
[e :U 507 ]
"534
[; ;./main.h: 534:     if (g_i_SWR > l_int_swr_mem) {
[e $ ! > _g_i_SWR _l_int_swr_mem 508  ]
{
"535
[; ;./main.h: 535:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 509  ]
"536
[; ;./main.h: 536:             g_c_SW = 0;
[e = _g_c_SW -> -> 0 `i `uc ]
[e $U 510  ]
"537
[; ;./main.h: 537:         else
[e :U 509 ]
"538
[; ;./main.h: 538:             g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
[e :U 510 ]
"539
[; ;./main.h: 539:         set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"540
[; ;./main.h: 540:         g_c_ind = (char) (l_int_ind_mem);
[e = _g_c_ind -> _l_int_ind_mem `uc ]
"541
[; ;./main.h: 541:         g_c_cap = (char) (l_int_cap_mem);
[e = _g_c_cap -> _l_int_cap_mem `uc ]
"542
[; ;./main.h: 542:         set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"543
[; ;./main.h: 543:         set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"544
[; ;./main.h: 544:         g_i_SWR = l_int_swr_mem;
[e = _g_i_SWR _l_int_swr_mem ]
"545
[; ;./main.h: 545:     }
}
[e :U 508 ]
"547
[; ;./main.h: 547:     __asm("clrwdt");
[; <" clrwdt ;# ">
"548
[; ;./main.h: 548:     return;
[e $UE 491  ]
"549
[; ;./main.h: 549: }
[e :UE 491 ]
}
"551
[; ;./main.h: 551: void tune() {
[v _tune `(v ~T0 @X0 1 ef ]
{
[e :U _tune ]
[f ]
"552
[; ;./main.h: 552:     __asm("clrwdt");
[; <" clrwdt ;# ">
"554
[; ;./main.h: 554:     g_char_p_cnt = 0;
[e = _g_char_p_cnt -> -> 0 `i `uc ]
"555
[; ;./main.h: 555:     g_i_P_max = 0;
[e = _g_i_P_max -> 0 `i ]
"557
[; ;./main.h: 557:     g_b_rready = 0;
[e = _g_b_rready -> -> 0 `i `uc ]
"558
[; ;./main.h: 558:     get_swr();
[e ( _get_swr ..  ]
"559
[; ;./main.h: 559:     if (g_i_SWR < 110)
[e $ ! < _g_i_SWR -> 110 `i 512  ]
"560
[; ;./main.h: 560:         return;
[e $UE 511  ]
[e :U 512 ]
"561
[; ;./main.h: 561:     atu_reset();
[e ( _atu_reset ..  ]
"562
[; ;./main.h: 562:     if (e_c_b_Loss_ind == 0)
[e $ ! == -> _e_c_b_Loss_ind `i -> 0 `i 513  ]
"563
[; ;./main.h: 563:         lcd_ind();
[e ( _lcd_ind ..  ]
[e :U 513 ]
"564
[; ;./main.h: 564:     Delay_ms(50);
[e ( _Delay_ms (1 -> -> 50 `i `ui ]
"565
[; ;./main.h: 565:     get_swr();
[e ( _get_swr ..  ]
"566
[; ;./main.h: 566:     g_i_swr_a = g_i_SWR;
[e = _g_i_swr_a _g_i_SWR ]
"567
[; ;./main.h: 567:     if (g_i_SWR < 110)
[e $ ! < _g_i_SWR -> 110 `i 514  ]
"568
[; ;./main.h: 568:         return;
[e $UE 511  ]
[e :U 514 ]
"569
[; ;./main.h: 569:     if (e_i_tenths_init_max_swr > 110 & g_i_SWR > e_i_tenths_init_max_swr)
[e $ ! & > _e_i_tenths_init_max_swr -> 110 `i > _g_i_SWR _e_i_tenths_init_max_swr 515  ]
"570
[; ;./main.h: 570:         return;
[e $UE 511  ]
[e :U 515 ]
"572
[; ;./main.h: 572:     sub_tune();
[e ( _sub_tune ..  ]
"573
[; ;./main.h: 573:     if (g_i_SWR == 0) {
[e $ ! == _g_i_SWR -> 0 `i 516  ]
{
"574
[; ;./main.h: 574:         atu_reset();
[e ( _atu_reset ..  ]
"575
[; ;./main.h: 575:         return;
[e $UE 511  ]
"576
[; ;./main.h: 576:     }
}
[e :U 516 ]
"577
[; ;./main.h: 577:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 517  ]
"578
[; ;./main.h: 578:         return;
[e $UE 511  ]
[e :U 517 ]
"579
[; ;./main.h: 579:     if (e_c_num_C_q == 5 & e_c_num_L_q == 5)
[e $ ! & == -> _e_c_num_C_q `i -> 5 `i == -> _e_c_num_L_q `i -> 5 `i 518  ]
"580
[; ;./main.h: 580:         return;
[e $UE 511  ]
[e :U 518 ]
"582
[; ;./main.h: 582:     if (e_c_num_L_q > 5) {
[e $ ! > -> _e_c_num_L_q `i -> 5 `i 519  ]
{
"583
[; ;./main.h: 583:         g_c_step_ind = g_c_L_mult;
[e = _g_c_step_ind _g_c_L_mult ]
"584
[; ;./main.h: 584:         g_c_L_mult = 1;
[e = _g_c_L_mult -> -> 1 `i `uc ]
"585
[; ;./main.h: 585:         sharp_ind();
[e ( _sharp_ind ..  ]
"586
[; ;./main.h: 586:     }
}
[e :U 519 ]
"587
[; ;./main.h: 587:     if (g_i_SWR < 120)
[e $ ! < _g_i_SWR -> 120 `i 520  ]
"588
[; ;./main.h: 588:         return;
[e $UE 511  ]
[e :U 520 ]
"589
[; ;./main.h: 589:     if (e_c_num_C_q > 5) {
[e $ ! > -> _e_c_num_C_q `i -> 5 `i 521  ]
{
"590
[; ;./main.h: 590:         g_c_step_cap = g_c_C_mult;
[e = _g_c_step_cap _g_c_C_mult ]
"591
[; ;./main.h: 591:         g_c_C_mult = 1;
[e = _g_c_C_mult -> -> 1 `i `uc ]
"592
[; ;./main.h: 592:         sharp_cap();
[e ( _sharp_cap ..  ]
"593
[; ;./main.h: 593:     }
}
[e :U 521 ]
"594
[; ;./main.h: 594:     if (e_c_num_L_q == 5)
[e $ ! == -> _e_c_num_L_q `i -> 5 `i 522  ]
"595
[; ;./main.h: 595:         g_c_L_mult = 1;
[e = _g_c_L_mult -> -> 1 `i `uc ]
[e $U 523  ]
"596
[; ;./main.h: 596:     else if (e_c_num_L_q == 6)
[e :U 522 ]
[e $ ! == -> _e_c_num_L_q `i -> 6 `i 524  ]
"597
[; ;./main.h: 597:         g_c_L_mult = 2;
[e = _g_c_L_mult -> -> 2 `i `uc ]
[e $U 525  ]
"598
[; ;./main.h: 598:     else if (e_c_num_L_q == 7)
[e :U 524 ]
[e $ ! == -> _e_c_num_L_q `i -> 7 `i 526  ]
"599
[; ;./main.h: 599:         g_c_L_mult = 4;
[e = _g_c_L_mult -> -> 4 `i `uc ]
[e :U 526 ]
[e :U 525 ]
[e :U 523 ]
"600
[; ;./main.h: 600:     if (e_c_num_C_q == 5)
[e $ ! == -> _e_c_num_C_q `i -> 5 `i 527  ]
"601
[; ;./main.h: 601:         g_c_C_mult = 1;
[e = _g_c_C_mult -> -> 1 `i `uc ]
[e $U 528  ]
"602
[; ;./main.h: 602:     else if (e_c_num_C_q == 6)
[e :U 527 ]
[e $ ! == -> _e_c_num_C_q `i -> 6 `i 529  ]
"603
[; ;./main.h: 603:         g_c_C_mult = 2;
[e = _g_c_C_mult -> -> 2 `i `uc ]
[e $U 530  ]
"604
[; ;./main.h: 604:     else if (e_c_num_C_q == 7)
[e :U 529 ]
[e $ ! == -> _e_c_num_C_q `i -> 7 `i 531  ]
"605
[; ;./main.h: 605:         g_c_C_mult = 4;
[e = _g_c_C_mult -> -> 4 `i `uc ]
[e :U 531 ]
[e :U 530 ]
[e :U 528 ]
"606
[; ;./main.h: 606:     __asm("clrwdt");
[; <" clrwdt ;# ">
"607
[; ;./main.h: 607:     return;
[e $UE 511  ]
"608
[; ;./main.h: 608: }
[e :UE 511 ]
}
"9 main.c
[; ;main.c: 9: _Bool out_dummy;
[v _out_dummy `a ~T0 @X0 1 e ]
"10
[; ;main.c: 10: _Bool in_dummy = 1;
[v _in_dummy `a ~T0 @X0 1 e ]
[i _in_dummy
-> -> 1 `i `a
]
"19
[; ;main.c: 19: int g_i_SWR_fixed_old = 0;
[v _g_i_SWR_fixed_old `i ~T0 @X0 1 e ]
[i _g_i_SWR_fixed_old
-> 0 `i
]
"20
[; ;main.c: 20: char g_work_str[7], g_work_str_2[7];
[v _g_work_str `uc ~T0 @X0 -> 7 `i e ]
[v _g_work_str_2 `uc ~T0 @X0 -> 7 `i e ]
"21
[; ;main.c: 21: int g_i_Power = 0, g_i_Power_old = 10000;
[v _g_i_Power `i ~T0 @X0 1 e ]
[i _g_i_Power
-> 0 `i
]
[v _g_i_Power_old `i ~T0 @X0 1 e ]
[i _g_i_Power_old
-> 10000 `i
]
"22
[; ;main.c: 22: int g_i_SWR_old = 10000;
[v _g_i_SWR_old `i ~T0 @X0 1 e ]
[i _g_i_SWR_old
-> 10000 `i
]
"23
[; ;main.c: 23: char e_c_ledtype, g_b_Soft_tune = 0;
[v _e_c_ledtype `uc ~T0 @X0 1 e ]
[v _g_b_Soft_tune `uc ~T0 @X0 1 e ]
[i _g_b_Soft_tune
-> -> 0 `i `uc
]
"24
[; ;main.c: 24: char g_b_Auto_mode = 0;
[v _g_b_Auto_mode `uc ~T0 @X0 1 e ]
[i _g_b_Auto_mode
-> -> 0 `i `uc
]
"26
[; ;main.c: 26: char g_b_Bypas_mode = 0;
[v _g_b_Bypas_mode `uc ~T0 @X0 1 e ]
[i _g_b_Bypas_mode
-> -> 0 `i `uc
]
"27
[; ;main.c: 27: char g_c_cap_mem = 0, g_c_ind_mem = 0, g_c_SW_mem = 0, g_c_Auto_mem = 0;
[v _g_c_cap_mem `uc ~T0 @X0 1 e ]
[i _g_c_cap_mem
-> -> 0 `i `uc
]
[v _g_c_ind_mem `uc ~T0 @X0 1 e ]
[i _g_c_ind_mem
-> -> 0 `i `uc
]
[v _g_c_SW_mem `uc ~T0 @X0 1 e ]
[i _g_c_SW_mem
-> -> 0 `i `uc
]
[v _g_c_Auto_mem `uc ~T0 @X0 1 e ]
[i _g_c_Auto_mem
-> -> 0 `i `uc
]
"29
[; ;main.c: 29: char g_b_Restart = 0;
[v _g_b_Restart `uc ~T0 @X0 1 e ]
[i _g_b_Restart
-> -> 0 `i `uc
]
"30
[; ;main.c: 30: char g_b_Test_mode = 0;
[v _g_b_Test_mode `uc ~T0 @X0 1 e ]
[i _g_b_Test_mode
-> -> 0 `i `uc
]
"31
[; ;main.c: 31: char g_b_lcd_prep_short = 0;
[v _g_b_lcd_prep_short `uc ~T0 @X0 1 e ]
[i _g_b_lcd_prep_short
-> -> 0 `i `uc
]
"32
[; ;main.c: 32: char g_b_L = 1;
[v _g_b_L `uc ~T0 @X0 1 e ]
[i _g_b_L
-> -> 1 `i `uc
]
"34
[; ;main.c: 34: char g_b_Loss_mode = 0;
[v _g_b_Loss_mode `uc ~T0 @X0 1 e ]
[i _g_b_Loss_mode
-> -> 0 `i `uc
]
"37
[; ;main.c: 37: __eeprom unsigned char initial_eeprom[256] = {
[v _initial_eeprom `Euc ~T0 @X0 -> 256 `i e ]
[i _initial_eeprom
:U ..
-> -> 120 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 21 `i `uc
-> -> 19 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 2 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
-> -> 7 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 80 `i `uc
-> -> 1 `i `uc
-> -> 16 `i `uc
-> -> 2 `i `uc
-> -> 32 `i `uc
-> -> 4 `i `uc
-> -> 80 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 34 `i `uc
-> -> 0 `i `uc
-> -> 69 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 34 `i `uc
-> -> 0 `i `uc
-> -> 71 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 2 `i `uc
-> -> 32 `i `uc
-> -> 4 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 0 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v $root$_isr `(v ~T0 @X0 0 e ]
"56
[; ;main.c: 56: void __attribute__((picinterrupt(("")))) isr(void) {
[v _isr `(v ~T1 @X0 1 ef ]
{
[e :U _isr ]
[f ]
"57
[; ;main.c: 57:     if (TMR0IE && TMR0IF) {
[e $ ! && _TMR0IE _TMR0IF 533  ]
{
"58
[; ;main.c: 58:         TMR0 = 256 - (4000000 / 9600 / 2) + 7;
[e = _TMR0 -> + - -> -> 256 `i `l / / -> 4000000 `l -> -> 9600 `i `l -> -> 2 `i `l -> -> 7 `i `l `uc ]
"59
[; ;main.c: 59:         TMR0IF = 0;
[e = _TMR0IF -> -> 0 `i `b ]
"60
[; ;main.c: 60:         uartProcessInput();
[e ( _uartProcessInput ..  ]
"61
[; ;main.c: 61:         uartProcessOutput();
[e ( _uartProcessOutput ..  ]
"62
[; ;main.c: 62:     }
}
[e :U 533 ]
"63
[; ;main.c: 63: }
[e :UE 532 ]
}
"65
[; ;main.c: 65: void interrupt_init(void) {
[v _interrupt_init `(v ~T0 @X0 1 ef ]
{
[e :U _interrupt_init ]
[f ]
"66
[; ;main.c: 66:     OPTION_REGbits.PS = 0b000;
[e = . . _OPTION_REGbits 1 0 -> -> 0 `i `uc ]
"67
[; ;main.c: 67:     OPTION_REGbits.PSA = 0;
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
"68
[; ;main.c: 68:     OPTION_REGbits.T0CS = 0;
[e = . . _OPTION_REGbits 1 3 -> -> 0 `i `uc ]
"69
[; ;main.c: 69:     INTCONbits.T0IE = 1;
[e = . . _INTCONbits 1 3 -> -> 1 `i `uc ]
"70
[; ;main.c: 70:     INTCONbits.PEIE = 1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"71
[; ;main.c: 71:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"72
[; ;main.c: 72: }
[e :UE 534 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"74
[; ;main.c: 74: void main() {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"76
[; ;main.c: 76:     if (STATUSbits.nTO == 0)
[e $ ! == -> . . _STATUSbits 0 4 `i -> 0 `i 536  ]
"77
[; ;main.c: 77:         g_b_Restart = 1;
[e = _g_b_Restart -> -> 1 `i `uc ]
[e :U 536 ]
"79
[; ;main.c: 79:     pic_init();
[e ( _pic_init ..  ]
"81
[; ;main.c: 81:     interrupt_init();
[e ( _interrupt_init ..  ]
"84
[; ;main.c: 84:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"85
[; ;main.c: 85:     __asm("clrwdt");
[; <" clrwdt ;# ">
"86
[; ;main.c: 86:     cells_init();
[e ( _cells_init ..  ]
"88
[; ;main.c: 88:     if (e_c_ledtype == 0) {
[e $ ! == -> _e_c_ledtype `i -> 0 `i 537  ]
{
"89
[; ;main.c: 89:         LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"90
[; ;main.c: 90:         LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"91
[; ;main.c: 91:     }
}
[e :U 537 ]
"94
[; ;main.c: 94:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"95
[; ;main.c: 95:     __asm("clrwdt");
[; <" clrwdt ;# ">
"97
[; ;main.c: 97:     if (e_c_num_L_q == 5)
[e $ ! == -> _e_c_num_L_q `i -> 5 `i 538  ]
"98
[; ;main.c: 98:         g_c_L_mult = 1;
[e = _g_c_L_mult -> -> 1 `i `uc ]
[e $U 539  ]
"99
[; ;main.c: 99:     else if (e_c_num_L_q == 6)
[e :U 538 ]
[e $ ! == -> _e_c_num_L_q `i -> 6 `i 540  ]
"100
[; ;main.c: 100:         g_c_L_mult = 2;
[e = _g_c_L_mult -> -> 2 `i `uc ]
[e $U 541  ]
"101
[; ;main.c: 101:     else if (e_c_num_L_q == 7)
[e :U 540 ]
[e $ ! == -> _e_c_num_L_q `i -> 7 `i 542  ]
"102
[; ;main.c: 102:         g_c_L_mult = 4;
[e = _g_c_L_mult -> -> 4 `i `uc ]
[e :U 542 ]
[e :U 541 ]
[e :U 539 ]
"103
[; ;main.c: 103:     if (e_c_num_C_q == 5)
[e $ ! == -> _e_c_num_C_q `i -> 5 `i 543  ]
"104
[; ;main.c: 104:         g_c_C_mult = 1;
[e = _g_c_C_mult -> -> 1 `i `uc ]
[e $U 544  ]
"105
[; ;main.c: 105:     else if (e_c_num_C_q == 6)
[e :U 543 ]
[e $ ! == -> _e_c_num_C_q `i -> 6 `i 545  ]
"106
[; ;main.c: 106:         g_c_C_mult = 2;
[e = _g_c_C_mult -> -> 2 `i `uc ]
[e $U 546  ]
"107
[; ;main.c: 107:     else if (e_c_num_C_q == 7)
[e :U 545 ]
[e $ ! == -> _e_c_num_C_q `i -> 7 `i 547  ]
"108
[; ;main.c: 108:         g_c_C_mult = 4;
[e = _g_c_C_mult -> -> 4 `i `uc ]
[e :U 547 ]
[e :U 546 ]
[e :U 544 ]
"110
[; ;main.c: 110:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"111
[; ;main.c: 111:     __asm("clrwdt");
[; <" clrwdt ;# ">
"112
[; ;main.c: 112:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"113
[; ;main.c: 113:     __asm("clrwdt");
[; <" clrwdt ;# ">
"114
[; ;main.c: 114:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"115
[; ;main.c: 115:     __asm("clrwdt");
[; <" clrwdt ;# ">
"116
[; ;main.c: 116:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"117
[; ;main.c: 117:     __asm("clrwdt");
[; <" clrwdt ;# ">
"118
[; ;main.c: 118:     Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"119
[; ;main.c: 119:     __asm("clrwdt");
[; <" clrwdt ;# ">
"122
[; ;main.c: 122:     if (g_b_Test_mode == 0) {
[e $ ! == -> _g_b_Test_mode `i -> 0 `i 548  ]
{
"123
[; ;main.c: 123:         g_c_cap = eeprom_read(255);
[e = _g_c_cap -> ( _eeprom_read (1 -> -> 255 `i `uc `uc ]
"124
[; ;main.c: 124:         g_c_ind = eeprom_read(254);
[e = _g_c_ind -> ( _eeprom_read (1 -> -> 254 `i `uc `uc ]
"125
[; ;main.c: 125:         g_c_SW = eeprom_read(253);
[e = _g_c_SW -> ( _eeprom_read (1 -> -> 253 `i `uc `uc ]
"126
[; ;main.c: 126:         g_i_swr_a = eeprom_read(252) * 256;
[e = _g_i_swr_a * -> ( _eeprom_read (1 -> -> 252 `i `uc `i -> 256 `i ]
"127
[; ;main.c: 127:         g_i_swr_a += eeprom_read(251);
[e =+ _g_i_swr_a -> ( _eeprom_read (1 -> -> 251 `i `uc `i ]
"128
[; ;main.c: 128:         set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"129
[; ;main.c: 129:         set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"130
[; ;main.c: 130:         set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"131
[; ;main.c: 131:         if (g_b_Restart == 1)
[e $ ! == -> _g_b_Restart `i -> 1 `i 549  ]
"132
[; ;main.c: 132:             g_b_lcd_prep_short = 1;
[e = _g_b_lcd_prep_short -> -> 1 `i `uc ]
[e :U 549 ]
"133
[; ;main.c: 133:         lcd_prep();
[e ( _lcd_prep ..  ]
"134
[; ;main.c: 134:     } else
}
[e $U 550  ]
[e :U 548 ]
"135
[; ;main.c: 135:         Test_init();
[e ( _Test_init ..  ]
[e :U 550 ]
"137
[; ;main.c: 137:     lcd_ind();
[e ( _lcd_ind ..  ]
"141
[; ;main.c: 141:     while (1) {
[e :U 552 ]
{
"142
[; ;main.c: 142:         __asm("clrwdt");
[; <" clrwdt ;# ">
"143
[; ;main.c: 143:         lcd_pwr();
[e ( _lcd_pwr ..  ]
"145
[; ;main.c: 145:         if (g_b_Test_mode == 0)
[e $ ! == -> _g_b_Test_mode `i -> 0 `i 554  ]
"146
[; ;main.c: 146:             button_proc();
[e ( _button_proc ..  ]
[e $U 555  ]
"147
[; ;main.c: 147:         else
[e :U 554 ]
"148
[; ;main.c: 148:             button_proc_test();
[e ( _button_proc_test ..  ]
[e :U 555 ]
"160
[; ;main.c: 160:     }
}
[e :U 551 ]
[e $U 552  ]
[e :U 553 ]
"161
[; ;main.c: 161: }
[e :UE 535 ]
}
"165
[; ;main.c: 165: void button_proc_test(void) {
[v _button_proc_test `(v ~T0 @X0 1 ef ]
{
[e :U _button_proc_test ]
[f ]
"166
[; ;main.c: 166:     if (Button(&PORTB, 0, 50, 0)) {
[e $ ! != -> ( _Button (4 , , , &U _PORTB -> -> 0 `i `uc -> -> 50 `i `uc -> -> 0 `i `uc `i -> 0 `i 557  ]
{
"167
[; ;main.c: 167:         Delay_ms(250);
[e ( _Delay_ms (1 -> -> 250 `i `ui ]
"168
[; ;main.c: 168:         __asm("clrwdt");
[; <" clrwdt ;# ">
"169
[; ;main.c: 169:         if (in_dummy == 1) {
[e $ ! == -> _in_dummy `i -> 1 `i 558  ]
{
"170
[; ;main.c: 170:             if (g_c_SW == 0)
[e $ ! == -> _g_c_SW `i -> 0 `i 559  ]
"171
[; ;main.c: 171:                 g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
[e $U 560  ]
"172
[; ;main.c: 172:             else
[e :U 559 ]
"173
[; ;main.c: 173:                 g_c_SW = 0;
[e = _g_c_SW -> -> 0 `i `uc ]
[e :U 560 ]
"174
[; ;main.c: 174:             set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"175
[; ;main.c: 175:             lcd_ind();
[e ( _lcd_ind ..  ]
"176
[; ;main.c: 176:         } else {
}
[e $U 561  ]
[e :U 558 ]
{
"177
[; ;main.c: 177:             if (g_b_L == 1)
[e $ ! == -> _g_b_L `i -> 1 `i 562  ]
"178
[; ;main.c: 178:                 g_b_L = 0;
[e = _g_b_L -> -> 0 `i `uc ]
[e $U 563  ]
"179
[; ;main.c: 179:             else
[e :U 562 ]
"180
[; ;main.c: 180:                 g_b_L = 1;
[e = _g_b_L -> -> 1 `i `uc ]
[e :U 563 ]
"181
[; ;main.c: 181:             if (g_b_L == 1) {
[e $ ! == -> _g_b_L `i -> 1 `i 564  ]
{
"182
[; ;main.c: 182:                 if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 565  ]
"183
[; ;main.c: 183:                     uart_wr_str(0, 16 + 12 * 8, "l", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 12 `i -> 8 `i `uc :s 1C -> -> 1 `i `uc ]
[e $U 566  ]
"184
[; ;main.c: 184:                 else if (e_c_ledtype != 0)
[e :U 565 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 567  ]
"185
[; ;main.c: 185:                     uart_wr_str(0, 8, "l", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 2C -> -> 1 `i `uc ]
[e :U 567 ]
[e :U 566 ]
"186
[; ;main.c: 186:             } else {
}
[e $U 568  ]
[e :U 564 ]
{
"187
[; ;main.c: 187:                 if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 569  ]
"188
[; ;main.c: 188:                     uart_wr_str(0, 16 + 12 * 8, "c", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 12 `i -> 8 `i `uc :s 3C -> -> 1 `i `uc ]
[e $U 570  ]
"189
[; ;main.c: 189:                 else if (e_c_ledtype != 0)
[e :U 569 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 571  ]
"190
[; ;main.c: 190:                     uart_wr_str(0, 8, "c", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 4C -> -> 1 `i `uc ]
[e :U 571 ]
[e :U 570 ]
"191
[; ;main.c: 191:             }
}
[e :U 568 ]
"192
[; ;main.c: 192:         }
}
[e :U 561 ]
"193
[; ;main.c: 193:         while (Button(&PORTB, 0, 50, 0)) {
[e $U 572  ]
[e :U 573 ]
{
"194
[; ;main.c: 194:             lcd_pwr();
[e ( _lcd_pwr ..  ]
"195
[; ;main.c: 195:             __asm("clrwdt");
[; <" clrwdt ;# ">
"196
[; ;main.c: 196:         }
}
[e :U 572 ]
"193
[; ;main.c: 193:         while (Button(&PORTB, 0, 50, 0)) {
[e $ != -> ( _Button (4 , , , &U _PORTB -> -> 0 `i `uc -> -> 50 `i `uc -> -> 0 `i `uc `i -> 0 `i 573  ]
[e :U 574 ]
"197
[; ;main.c: 197:     }
}
[e :U 557 ]
"199
[; ;main.c: 199:     if (Button(&PORTB, 2, 50, 0)) {
[e $ ! != -> ( _Button (4 , , , &U _PORTB -> -> 2 `i `uc -> -> 50 `i `uc -> -> 0 `i `uc `i -> 0 `i 575  ]
{
"200
[; ;main.c: 200:         __asm("clrwdt");
[; <" clrwdt ;# ">
"201
[; ;main.c: 201:         while (in_dummy == 0) {
[e $U 576  ]
[e :U 577 ]
{
"202
[; ;main.c: 202:             if (g_b_L & (g_c_ind < 32 * g_c_L_mult - 1)) {
[e $ ! != & -> _g_b_L `i -> < -> _g_c_ind `i - * -> 32 `i -> _g_c_L_mult `i -> 1 `i `i -> 0 `i 579  ]
{
"203
[; ;main.c: 203:                 g_c_ind++;
[e ++ _g_c_ind -> -> 1 `i `uc ]
"204
[; ;main.c: 204:                 set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"205
[; ;main.c: 205:             } else if (!g_b_L & (g_c_cap < 32 * g_c_L_mult - 1)) {
}
[e $U 580  ]
[e :U 579 ]
[e $ ! & ! != -> _g_b_L `i -> 0 `i < -> _g_c_cap `i - * -> 32 `i -> _g_c_L_mult `i -> 1 `i 581  ]
{
"206
[; ;main.c: 206:                 g_c_cap++;
[e ++ _g_c_cap -> -> 1 `i `uc ]
"207
[; ;main.c: 207:                 set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"208
[; ;main.c: 208:             }
}
[e :U 581 ]
[e :U 580 ]
"209
[; ;main.c: 209:             lcd_ind();
[e ( _lcd_ind ..  ]
"210
[; ;main.c: 210:             lcd_pwr();
[e ( _lcd_pwr ..  ]
"211
[; ;main.c: 211:             Delay_ms(30);
[e ( _Delay_ms (1 -> -> 30 `i `ui ]
"212
[; ;main.c: 212:             __asm("clrwdt");
[; <" clrwdt ;# ">
"213
[; ;main.c: 213:         }
}
[e :U 576 ]
"201
[; ;main.c: 201:         while (in_dummy == 0) {
[e $ == -> _in_dummy `i -> 0 `i 577  ]
[e :U 578 ]
"214
[; ;main.c: 214:     }
}
[e :U 575 ]
"216
[; ;main.c: 216:     if (Button(&PORTB, 1, 50, 0) & (g_b_Bypas_mode == 0)) {
[e $ ! != & -> ( _Button (4 , , , &U _PORTB -> -> 1 `i `uc -> -> 50 `i `uc -> -> 0 `i `uc `i -> == -> _g_b_Bypas_mode `i -> 0 `i `i -> 0 `i 582  ]
{
"217
[; ;main.c: 217:         __asm("clrwdt");
[; <" clrwdt ;# ">
"218
[; ;main.c: 218:         while (in_dummy == 0) {
[e $U 583  ]
[e :U 584 ]
{
"219
[; ;main.c: 219:             if (g_b_L & (g_c_ind > 0)) {
[e $ ! != & -> _g_b_L `i -> > -> _g_c_ind `i -> 0 `i `i -> 0 `i 586  ]
{
"220
[; ;main.c: 220:                 g_c_ind--;
[e -- _g_c_ind -> -> 1 `i `uc ]
"221
[; ;main.c: 221:                 set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"222
[; ;main.c: 222:             } else if (!g_b_L & (g_c_cap > 0)) {
}
[e $U 587  ]
[e :U 586 ]
[e $ ! & ! != -> _g_b_L `i -> 0 `i > -> _g_c_cap `i -> 0 `i 588  ]
{
"223
[; ;main.c: 223:                 g_c_cap--;
[e -- _g_c_cap -> -> 1 `i `uc ]
"224
[; ;main.c: 224:                 set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"225
[; ;main.c: 225:             }
}
[e :U 588 ]
[e :U 587 ]
"226
[; ;main.c: 226:             lcd_ind();
[e ( _lcd_ind ..  ]
"227
[; ;main.c: 227:             lcd_pwr();
[e ( _lcd_pwr ..  ]
"228
[; ;main.c: 228:             Delay_ms(30);
[e ( _Delay_ms (1 -> -> 30 `i `ui ]
"229
[; ;main.c: 229:             __asm("clrwdt");
[; <" clrwdt ;# ">
"230
[; ;main.c: 230:         }
}
[e :U 583 ]
"218
[; ;main.c: 218:         while (in_dummy == 0) {
[e $ == -> _in_dummy `i -> 0 `i 584  ]
[e :U 585 ]
"231
[; ;main.c: 231:     }
}
[e :U 582 ]
"232
[; ;main.c: 232:     return;
[e $UE 556  ]
"233
[; ;main.c: 233: }
[e :UE 556 ]
}
"235
[; ;main.c: 235: void button_proc(void) {
[v _button_proc `(v ~T0 @X0 1 ef ]
{
[e :U _button_proc ]
[f ]
"236
[; ;main.c: 236:     char uartChar = uartGetChar();
[v _uartChar `uc ~T0 @X0 1 a ]
[e = _uartChar ( _uartGetChar ..  ]
"239
[; ;main.c: 239:     if (uartChar == 'r') {
[e $ ! == -> _uartChar `ui -> 114 `ui 590  ]
{
"240
[; ;main.c: 240:         Delay_ms(250);
[e ( _Delay_ms (1 -> -> 250 `i `ui ]
"241
[; ;main.c: 241:         __asm("clrwdt");
[; <" clrwdt ;# ">
"242
[; ;main.c: 242:         show_reset();
[e ( _show_reset ..  ]
"243
[; ;main.c: 243:         g_b_Bypas_mode = 0;
[e = _g_b_Bypas_mode -> -> 0 `i `uc ]
"244
[; ;main.c: 244:     }
}
[e :U 590 ]
"247
[; ;main.c: 247:     if (uartChar == 't' || g_b_Soft_tune) {
[e $ ! || == -> _uartChar `ui -> 116 `ui != -> _g_b_Soft_tune `i -> 0 `i 591  ]
{
"248
[; ;main.c: 248:         Delay_ms(250);
[e ( _Delay_ms (1 -> -> 250 `i `ui ]
"249
[; ;main.c: 249:         __asm("clrwdt");
[; <" clrwdt ;# ">
"250
[; ;main.c: 250:         out_dummy = 1;
[e = _out_dummy -> -> 1 `i `a ]
"251
[; ;main.c: 251:         out_dummy = 0;
[e = _out_dummy -> -> 0 `i `a ]
"252
[; ;main.c: 252:         Delay_ms(250);
[e ( _Delay_ms (1 -> -> 250 `i `ui ]
"253
[; ;main.c: 253:         tune_btn_push();
[e ( _tune_btn_push ..  ]
"254
[; ;main.c: 254:         g_b_Bypas_mode = 0;
[e = _g_b_Bypas_mode -> -> 0 `i `uc ]
"255
[; ;main.c: 255:         g_b_Soft_tune = 0;
[e = _g_b_Soft_tune -> -> 0 `i `uc ]
"256
[; ;main.c: 256:     }
}
[e :U 591 ]
"260
[; ;main.c: 260:     if (uartChar == 'b') {
[e $ ! == -> _uartChar `ui -> 98 `ui 592  ]
{
"261
[; ;main.c: 261:         __asm("clrwdt");
[; <" clrwdt ;# ">
"262
[; ;main.c: 262:         if (g_b_Bypas_mode == 0) {
[e $ ! == -> _g_b_Bypas_mode `i -> 0 `i 593  ]
{
"263
[; ;main.c: 263:             g_b_Bypas_mode = 1;
[e = _g_b_Bypas_mode -> -> 1 `i `uc ]
"264
[; ;main.c: 264:             g_c_cap_mem = g_c_cap;
[e = _g_c_cap_mem _g_c_cap ]
"265
[; ;main.c: 265:             g_c_ind_mem = g_c_ind;
[e = _g_c_ind_mem _g_c_ind ]
"266
[; ;main.c: 266:             g_c_SW_mem = g_c_SW;
[e = _g_c_SW_mem _g_c_SW ]
"267
[; ;main.c: 267:             g_c_cap = 0;
[e = _g_c_cap -> -> 0 `i `uc ]
"268
[; ;main.c: 268:             if (e_c_b_L_invert)
[e $ ! != -> _e_c_b_L_invert `i -> 0 `i 594  ]
"269
[; ;main.c: 269:                 g_c_ind = 255;
[e = _g_c_ind -> -> 255 `i `uc ]
[e $U 595  ]
"270
[; ;main.c: 270:             else
[e :U 594 ]
"271
[; ;main.c: 271:                 g_c_ind = 0;
[e = _g_c_ind -> -> 0 `i `uc ]
[e :U 595 ]
"272
[; ;main.c: 272:             g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
"273
[; ;main.c: 273:             set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"274
[; ;main.c: 274:             set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"275
[; ;main.c: 275:             set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"276
[; ;main.c: 276:             if (g_b_Loss_mode == 0)
[e $ ! == -> _g_b_Loss_mode `i -> 0 `i 596  ]
"277
[; ;main.c: 277:                 lcd_ind();
[e ( _lcd_ind ..  ]
[e :U 596 ]
"278
[; ;main.c: 278:             g_c_Auto_mem = g_b_Auto_mode;
[e = _g_c_Auto_mem _g_b_Auto_mode ]
"279
[; ;main.c: 279:             g_b_Auto_mode = 0;
[e = _g_b_Auto_mode -> -> 0 `i `uc ]
"280
[; ;main.c: 280:         } else {
}
[e $U 597  ]
[e :U 593 ]
{
"281
[; ;main.c: 281:             g_b_Bypas_mode = 0;
[e = _g_b_Bypas_mode -> -> 0 `i `uc ]
"282
[; ;main.c: 282:             g_c_cap = g_c_cap_mem;
[e = _g_c_cap _g_c_cap_mem ]
"283
[; ;main.c: 283:             g_c_ind = g_c_ind_mem;
[e = _g_c_ind _g_c_ind_mem ]
"284
[; ;main.c: 284:             g_c_SW = g_c_SW_mem;
[e = _g_c_SW _g_c_SW_mem ]
"285
[; ;main.c: 285:             set_cap(g_c_cap);
[e ( _set_cap (1 _g_c_cap ]
"286
[; ;main.c: 286:             set_ind(g_c_ind);
[e ( _set_ind (1 _g_c_ind ]
"287
[; ;main.c: 287:             set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"288
[; ;main.c: 288:             if (g_b_Loss_mode == 0)
[e $ ! == -> _g_b_Loss_mode `i -> 0 `i 598  ]
"289
[; ;main.c: 289:                 lcd_ind();
[e ( _lcd_ind ..  ]
[e :U 598 ]
"290
[; ;main.c: 290:             g_b_Auto_mode = g_c_Auto_mem;
[e = _g_b_Auto_mode _g_c_Auto_mem ]
"291
[; ;main.c: 291:         }
}
[e :U 597 ]
"292
[; ;main.c: 292:         if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 599  ]
{
"293
[; ;main.c: 293:             if (g_b_Auto_mode & !g_b_Bypas_mode)
[e $ ! != & -> _g_b_Auto_mode `i -> ! != -> _g_b_Bypas_mode `i -> 0 `i `i -> 0 `i 600  ]
"294
[; ;main.c: 294:                 uart_wr_str(0, 16 + 8 * 12, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 5C -> -> 1 `i `uc ]
[e $U 601  ]
"295
[; ;main.c: 295:             else if ((!g_b_Auto_mode) & g_b_Bypas_mode)
[e :U 600 ]
[e $ ! != & -> ! != -> _g_b_Auto_mode `i -> 0 `i `i -> _g_b_Bypas_mode `i -> 0 `i 602  ]
"296
[; ;main.c: 296:                 uart_wr_str(0, 16 + 8 * 12, "_", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 6C -> -> 1 `i `uc ]
[e $U 603  ]
"297
[; ;main.c: 297:             else
[e :U 602 ]
"298
[; ;main.c: 298:                 uart_wr_str(0, 16 + 8 * 12, " ", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 7C -> -> 1 `i `uc ]
[e :U 603 ]
[e :U 601 ]
"299
[; ;main.c: 299:         } else if (e_c_ledtype != 0) {
}
[e $U 604  ]
[e :U 599 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 605  ]
{
"300
[; ;main.c: 300:             if (g_b_Auto_mode & !g_b_Bypas_mode)
[e $ ! != & -> _g_b_Auto_mode `i -> ! != -> _g_b_Bypas_mode `i -> 0 `i `i -> 0 `i 606  ]
"301
[; ;main.c: 301:                 uart_wr_str(0, 8, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 8C -> -> 1 `i `uc ]
[e $U 607  ]
"302
[; ;main.c: 302:             else if ((!g_b_Auto_mode) & g_b_Bypas_mode)
[e :U 606 ]
[e $ ! != & -> ! != -> _g_b_Auto_mode `i -> 0 `i `i -> _g_b_Bypas_mode `i -> 0 `i 608  ]
"303
[; ;main.c: 303:                 uart_wr_str(0, 8, "_", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 9C -> -> 1 `i `uc ]
[e $U 609  ]
"304
[; ;main.c: 304:             else
[e :U 608 ]
"305
[; ;main.c: 305:                 uart_wr_str(0, 8, " ", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 10C -> -> 1 `i `uc ]
[e :U 609 ]
[e :U 607 ]
"306
[; ;main.c: 306:         }
}
[e :U 605 ]
[e :U 604 ]
"307
[; ;main.c: 307:         __asm("clrwdt");
[; <" clrwdt ;# ">
"308
[; ;main.c: 308:     }
}
[e :U 592 ]
"311
[; ;main.c: 311:     if (uartChar == 'a' && g_b_Bypas_mode == 0) {
[e $ ! && == -> _uartChar `ui -> 97 `ui == -> _g_b_Bypas_mode `i -> 0 `i 610  ]
{
"312
[; ;main.c: 312:         __asm("clrwdt");
[; <" clrwdt ;# ">
"313
[; ;main.c: 313:         if (g_b_Auto_mode == 0)
[e $ ! == -> _g_b_Auto_mode `i -> 0 `i 611  ]
"314
[; ;main.c: 314:             g_b_Auto_mode = 1;
[e = _g_b_Auto_mode -> -> 1 `i `uc ]
[e $U 612  ]
"315
[; ;main.c: 315:         else
[e :U 611 ]
"316
[; ;main.c: 316:             g_b_Auto_mode = 0;
[e = _g_b_Auto_mode -> -> 0 `i `uc ]
[e :U 612 ]
"317
[; ;main.c: 317:         eeprom_write(2, g_b_Auto_mode);
[e ( _eeprom_write (2 , -> -> 2 `i `uc -> _g_b_Auto_mode `uc ]
"318
[; ;main.c: 318:         if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 613  ]
{
"319
[; ;main.c: 319:             if (g_b_Auto_mode & !g_b_Bypas_mode)
[e $ ! != & -> _g_b_Auto_mode `i -> ! != -> _g_b_Bypas_mode `i -> 0 `i `i -> 0 `i 614  ]
"320
[; ;main.c: 320:                 uart_wr_str(0, 16 + 8 * 12, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 11C -> -> 1 `i `uc ]
[e $U 615  ]
"321
[; ;main.c: 321:             else if ((!g_b_Auto_mode) & g_b_Bypas_mode)
[e :U 614 ]
[e $ ! != & -> ! != -> _g_b_Auto_mode `i -> 0 `i `i -> _g_b_Bypas_mode `i -> 0 `i 616  ]
"322
[; ;main.c: 322:                 uart_wr_str(0, 16 + 8 * 12, "_", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 12C -> -> 1 `i `uc ]
[e $U 617  ]
"323
[; ;main.c: 323:             else
[e :U 616 ]
"324
[; ;main.c: 324:                 uart_wr_str(0, 16 + 8 * 12, " ", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 13C -> -> 1 `i `uc ]
[e :U 617 ]
[e :U 615 ]
"325
[; ;main.c: 325:         } else if (e_c_ledtype != 0) {
}
[e $U 618  ]
[e :U 613 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 619  ]
{
"326
[; ;main.c: 326:             if (g_b_Auto_mode & !g_b_Bypas_mode)
[e $ ! != & -> _g_b_Auto_mode `i -> ! != -> _g_b_Bypas_mode `i -> 0 `i `i -> 0 `i 620  ]
"327
[; ;main.c: 327:                 uart_wr_str(0, 8, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 14C -> -> 1 `i `uc ]
[e $U 621  ]
"328
[; ;main.c: 328:             else if ((!g_b_Auto_mode) & g_b_Bypas_mode)
[e :U 620 ]
[e $ ! != & -> ! != -> _g_b_Auto_mode `i -> 0 `i `i -> _g_b_Bypas_mode `i -> 0 `i 622  ]
"329
[; ;main.c: 329:                 uart_wr_str(0, 8, "_", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 15C -> -> 1 `i `uc ]
[e $U 623  ]
"330
[; ;main.c: 330:             else
[e :U 622 ]
"331
[; ;main.c: 331:                 uart_wr_str(0, 8, " ", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 16C -> -> 1 `i `uc ]
[e :U 623 ]
[e :U 621 ]
"332
[; ;main.c: 332:         }
}
[e :U 619 ]
[e :U 618 ]
"333
[; ;main.c: 333:         __asm("clrwdt");
[; <" clrwdt ;# ">
"334
[; ;main.c: 334:     }
}
[e :U 610 ]
"335
[; ;main.c: 335:     return;
[e $UE 589  ]
"336
[; ;main.c: 336: }
[e :UE 589 ]
}
"338
[; ;main.c: 338: void show_reset() {
[v _show_reset `(v ~T0 @X0 1 ef ]
{
[e :U _show_reset ]
[f ]
"339
[; ;main.c: 339:     atu_reset();
[e ( _atu_reset ..  ]
"340
[; ;main.c: 340:     g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
"341
[; ;main.c: 341:     set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"342
[; ;main.c: 342:     eeprom_write(255, 0);
[e ( _eeprom_write (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"343
[; ;main.c: 343:     eeprom_write(254, 0);
[e ( _eeprom_write (2 , -> -> 254 `i `uc -> -> 0 `i `uc ]
"344
[; ;main.c: 344:     eeprom_write(253, 1);
[e ( _eeprom_write (2 , -> -> 253 `i `uc -> -> 1 `i `uc ]
"345
[; ;main.c: 345:     eeprom_write(252, 0);
[e ( _eeprom_write (2 , -> -> 252 `i `uc -> -> 0 `i `uc ]
"346
[; ;main.c: 346:     eeprom_write(251, 0);
[e ( _eeprom_write (2 , -> -> 251 `i `uc -> -> 0 `i `uc ]
"347
[; ;main.c: 347:     lcd_ind();
[e ( _lcd_ind ..  ]
"348
[; ;main.c: 348:     g_b_Loss_mode = 0;
[e = _g_b_Loss_mode -> -> 0 `i `uc ]
"349
[; ;main.c: 349:     out_dummy = 0;
[e = _out_dummy -> -> 0 `i `a ]
"350
[; ;main.c: 350:     out_dummy = 1;
[e = _out_dummy -> -> 1 `i `a ]
"351
[; ;main.c: 351:     g_i_SWR = 0;
[e = _g_i_SWR -> 0 `i ]
"352
[; ;main.c: 352:     g_i_PWR = 0;
[e = _g_i_PWR -> 0 `i ]
"353
[; ;main.c: 353:     g_i_SWR_fixed_old = 0;
[e = _g_i_SWR_fixed_old -> 0 `i ]
"354
[; ;main.c: 354:     if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 625  ]
{
"355
[; ;main.c: 355:         uart_wr_str(2, 16, "RESET   ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 17C -> -> 8 `i `uc ]
"356
[; ;main.c: 356:         __asm("clrwdt");
[; <" clrwdt ;# ">
"357
[; ;main.c: 357:         Delay_ms(600);
[e ( _Delay_ms (1 -> -> 600 `i `ui ]
"358
[; ;main.c: 358:         uart_wr_str(2, 16, "SWR=0.00", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 18C -> -> 8 `i `uc ]
"359
[; ;main.c: 359:         __asm("clrwdt");
[; <" clrwdt ;# ">
"360
[; ;main.c: 360:     } else if (e_c_ledtype != 0) {
}
[e $U 626  ]
[e :U 625 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 627  ]
{
"361
[; ;main.c: 361:         uart_wr_str(1, 0, "RESET   ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 19C -> -> 8 `i `uc ]
"362
[; ;main.c: 362:         __asm("clrwdt");
[; <" clrwdt ;# ">
"363
[; ;main.c: 363:         Delay_ms(600);
[e ( _Delay_ms (1 -> -> 600 `i `ui ]
"364
[; ;main.c: 364:         uart_wr_str(1, 0, "SWR=0.00", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 20C -> -> 8 `i `uc ]
"365
[; ;main.c: 365:         __asm("clrwdt");
[; <" clrwdt ;# ">
"366
[; ;main.c: 366:     } else {
}
[e $U 628  ]
[e :U 627 ]
{
"367
[; ;main.c: 367:         LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"368
[; ;main.c: 368:         LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"369
[; ;main.c: 369:     }
}
[e :U 628 ]
[e :U 626 ]
"370
[; ;main.c: 370:     g_i_SWR_old = 10000;
[e = _g_i_SWR_old -> 10000 `i ]
"371
[; ;main.c: 371:     g_i_Power_old = 10000;
[e = _g_i_Power_old -> 10000 `i ]
"372
[; ;main.c: 372:     lcd_pwr();
[e ( _lcd_pwr ..  ]
"373
[; ;main.c: 373:     return;
[e $UE 624  ]
"374
[; ;main.c: 374: }
[e :UE 624 ]
}
"376
[; ;main.c: 376: void tune_btn_push() {
[v _tune_btn_push `(v ~T0 @X0 1 ef ]
{
[e :U _tune_btn_push ]
[f ]
"377
[; ;main.c: 377:     __asm("clrwdt");
[; <" clrwdt ;# ">
"378
[; ;main.c: 378:     if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 630  ]
{
"379
[; ;main.c: 379:         uart_wr_str(2, 16 + 12 * 4, "TUNE", 4);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> + -> 16 `i * -> 12 `i -> 4 `i `uc :s 21C -> -> 4 `i `uc ]
"380
[; ;main.c: 380:     } else if (e_c_ledtype != 0) {
}
[e $U 631  ]
[e :U 630 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 632  ]
{
"381
[; ;main.c: 381:         uart_wr_str(1, 4, "TUNE", 4);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 4 `i `uc :s 22C -> -> 4 `i `uc ]
"382
[; ;main.c: 382:     } else {
}
[e $U 633  ]
[e :U 632 ]
{
"383
[; ;main.c: 383:         LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"384
[; ;main.c: 384:         LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"385
[; ;main.c: 385:     }
}
[e :U 633 ]
[e :U 631 ]
"386
[; ;main.c: 386:     tune();
[e ( _tune ..  ]
"387
[; ;main.c: 387:     if (e_c_ledtype == 0) {
[e $ ! == -> _e_c_ledtype `i -> 0 `i 634  ]
{
"388
[; ;main.c: 388:         if (g_i_SWR <= 150) {
[e $ ! <= _g_i_SWR -> 150 `i 635  ]
{
"389
[; ;main.c: 389:             LATBbits.LATB6 = 0;
[e = . . _LATBbits 0 6 -> -> 0 `i `uc ]
"390
[; ;main.c: 390:             LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"391
[; ;main.c: 391:         }
}
[e $U 636  ]
"392
[; ;main.c: 392:         else if (g_i_SWR <= 250) {
[e :U 635 ]
[e $ ! <= _g_i_SWR -> 250 `i 637  ]
{
"393
[; ;main.c: 393:             LATBbits.LATB6 = 0;
[e = . . _LATBbits 0 6 -> -> 0 `i `uc ]
"394
[; ;main.c: 394:             LATBbits.LATB7 = 0;
[e = . . _LATBbits 0 7 -> -> 0 `i `uc ]
"395
[; ;main.c: 395:         }
}
[e $U 638  ]
"396
[; ;main.c: 396:         else {
[e :U 637 ]
{
"397
[; ;main.c: 397:             LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"398
[; ;main.c: 398:             LATBbits.LATB7 = 0;
[e = . . _LATBbits 0 7 -> -> 0 `i `uc ]
"399
[; ;main.c: 399:         }
}
[e :U 638 ]
[e :U 636 ]
"400
[; ;main.c: 400:     } else if (g_b_Loss_mode == 0 | e_c_b_Loss_ind == 0)
}
[e $U 639  ]
[e :U 634 ]
[e $ ! | == -> _g_b_Loss_mode `i -> 0 `i == -> _e_c_b_Loss_ind `i -> 0 `i 640  ]
"401
[; ;main.c: 401:         lcd_ind();
[e ( _lcd_ind ..  ]
[e :U 640 ]
[e :U 639 ]
"402
[; ;main.c: 402:     eeprom_write(255, g_c_cap);
[e ( _eeprom_write (2 , -> -> 255 `i `uc -> _g_c_cap `uc ]
"403
[; ;main.c: 403:     eeprom_write(254, g_c_ind);
[e ( _eeprom_write (2 , -> -> 254 `i `uc -> _g_c_ind `uc ]
"404
[; ;main.c: 404:     eeprom_write(253, g_c_SW);
[e ( _eeprom_write (2 , -> -> 253 `i `uc -> _g_c_SW `uc ]
"405
[; ;main.c: 405:     eeprom_write(252, (char) (g_i_swr_a / 256));
[e ( _eeprom_write (2 , -> -> 252 `i `uc -> -> / _g_i_swr_a -> 256 `i `uc `uc ]
"406
[; ;main.c: 406:     eeprom_write(251, (char) (g_i_swr_a % 256));
[e ( _eeprom_write (2 , -> -> 251 `i `uc -> -> % _g_i_swr_a -> 256 `i `uc `uc ]
"407
[; ;main.c: 407:     g_i_SWR_old = 10000;
[e = _g_i_SWR_old -> 10000 `i ]
"408
[; ;main.c: 408:     g_i_Power_old = 10000;
[e = _g_i_Power_old -> 10000 `i ]
"409
[; ;main.c: 409:     lcd_pwr();
[e ( _lcd_pwr ..  ]
"410
[; ;main.c: 410:     g_i_SWR_fixed_old = g_i_SWR;
[e = _g_i_SWR_fixed_old _g_i_SWR ]
"411
[; ;main.c: 411:     out_dummy = 0;
[e = _out_dummy -> -> 0 `i `a ]
"412
[; ;main.c: 412:     out_dummy = 1;
[e = _out_dummy -> -> 1 `i `a ]
"413
[; ;main.c: 413:     __asm("clrwdt");
[; <" clrwdt ;# ">
"414
[; ;main.c: 414:     return;
[e $UE 629  ]
"415
[; ;main.c: 415: }
[e :UE 629 ]
}
"417
[; ;main.c: 417: void lcd_prep() {
[v _lcd_prep `(v ~T0 @X0 1 ef ]
{
[e :U _lcd_prep ]
[f ]
"418
[; ;main.c: 418:     __asm("clrwdt");
[; <" clrwdt ;# ">
"419
[; ;main.c: 419:     if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 642  ]
{
"420
[; ;main.c: 420:         if (g_b_lcd_prep_short == 0) {
[e $ ! == -> _g_b_lcd_prep_short `i -> 0 `i 643  ]
{
"421
[; ;main.c: 421:             uart_wr_str(0, 22, "ATU-100", 7);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 22 `i `uc :s 23C -> -> 7 `i `uc ]
"422
[; ;main.c: 422:             uart_wr_str(2, 6, "EXT board", 9);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 6 `i `uc :s 24C -> -> 9 `i `uc ]
"423
[; ;main.c: 423:             uart_wr_str(4, 16, "by N7DDC", 8);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> -> 16 `i `uc :s 25C -> -> 8 `i `uc ]
"424
[; ;main.c: 424:             uart_wr_str(6, 4, "FW ver 3.2", 10);
[e ( _uart_wr_str (4 , , , -> -> 6 `i `uc -> -> 4 `i `uc :s 26C -> -> 10 `i `uc ]
"425
[; ;main.c: 425:             __asm("clrwdt");
[; <" clrwdt ;# ">
"426
[; ;main.c: 426:             Delay_ms(600);
[e ( _Delay_ms (1 -> -> 600 `i `ui ]
"427
[; ;main.c: 427:             __asm("clrwdt");
[; <" clrwdt ;# ">
"428
[; ;main.c: 428:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"429
[; ;main.c: 429:             __asm("clrwdt");
[; <" clrwdt ;# ">
"430
[; ;main.c: 430:             uart_wr_str(0, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 16 `i `uc :s 27C -> -> 8 `i `uc ]
"431
[; ;main.c: 431:             uart_wr_str(2, 4, "          ", 10);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 4 `i `uc :s 28C -> -> 10 `i `uc ]
"432
[; ;main.c: 432:             uart_wr_str(4, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> -> 16 `i `uc :s 29C -> -> 8 `i `uc ]
"433
[; ;main.c: 433:             uart_wr_str(6, 4, "          ", 10);
[e ( _uart_wr_str (4 , , , -> -> 6 `i `uc -> -> 4 `i `uc :s 30C -> -> 10 `i `uc ]
"434
[; ;main.c: 434:         }
}
[e :U 643 ]
"435
[; ;main.c: 435:         Delay_ms(150);
[e ( _Delay_ms (1 -> -> 150 `i `ui ]
"436
[; ;main.c: 436:         if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 644  ]
"437
[; ;main.c: 437:             uart_wr_str(0, 16, "PWR=  0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 16 `i `uc :s 31C -> -> 8 `i `uc ]
[e $U 645  ]
"438
[; ;main.c: 438:         else
[e :U 644 ]
"439
[; ;main.c: 439:             uart_wr_str(0, 16, "PWR=0.0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 16 `i `uc :s 32C -> -> 8 `i `uc ]
[e :U 645 ]
"440
[; ;main.c: 440:         uart_wr_str(2, 16, "SWR=0.00", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 33C -> -> 8 `i `uc ]
"441
[; ;main.c: 441:         if (g_b_Auto_mode)
[e $ ! != -> _g_b_Auto_mode `i -> 0 `i 646  ]
"442
[; ;main.c: 442:             uart_wr_str(0, 16 + 8 * 12, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 8 `i -> 12 `i `uc :s 34C -> -> 1 `i `uc ]
[e :U 646 ]
"443
[; ;main.c: 443:     } else if (e_c_ledtype != 0) {
}
[e $U 647  ]
[e :U 642 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 648  ]
{
"444
[; ;main.c: 444:         if (g_b_lcd_prep_short == 0) {
[e $ ! == -> _g_b_lcd_prep_short `i -> 0 `i 649  ]
{
"445
[; ;main.c: 445:             uart_wr_str(0, 4, "ATU-100", 7);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 4 `i `uc :s 35C -> -> 7 `i `uc ]
"446
[; ;main.c: 446:             uart_wr_str(1, 3, "EXT board", 9);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 3 `i `uc :s 36C -> -> 9 `i `uc ]
"447
[; ;main.c: 447:             __asm("clrwdt");
[; <" clrwdt ;# ">
"448
[; ;main.c: 448:             Delay_ms(700);
[e ( _Delay_ms (1 -> -> 700 `i `ui ]
"449
[; ;main.c: 449:             __asm("clrwdt");
[; <" clrwdt ;# ">
"450
[; ;main.c: 450:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"451
[; ;main.c: 451:             __asm("clrwdt");
[; <" clrwdt ;# ">
"452
[; ;main.c: 452:             uart_wr_str(0, 4, "by N7DDC", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 4 `i `uc :s 37C -> -> 8 `i `uc ]
"453
[; ;main.c: 453:             uart_wr_str(1, 3, "FW ver 3.2", 10);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 3 `i `uc :s 38C -> -> 10 `i `uc ]
"454
[; ;main.c: 454:             __asm("clrwdt");
[; <" clrwdt ;# ">
"455
[; ;main.c: 455:             Delay_ms(600);
[e ( _Delay_ms (1 -> -> 600 `i `ui ]
"456
[; ;main.c: 456:             __asm("clrwdt");
[; <" clrwdt ;# ">
"457
[; ;main.c: 457:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"458
[; ;main.c: 458:             __asm("clrwdt");
[; <" clrwdt ;# ">
"459
[; ;main.c: 459:             uart_wr_str(0, 4, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 4 `i `uc :s 39C -> -> 8 `i `uc ]
"460
[; ;main.c: 460:             uart_wr_str(1, 3, "          ", 10);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 3 `i `uc :s 40C -> -> 10 `i `uc ]
"461
[; ;main.c: 461:         }
}
[e :U 649 ]
"462
[; ;main.c: 462:         Delay_ms(150);
[e ( _Delay_ms (1 -> -> 150 `i `ui ]
"463
[; ;main.c: 463:         if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 650  ]
"464
[; ;main.c: 464:             uart_wr_str(0, 0, "PWR=  0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 0 `i `uc :s 41C -> -> 8 `i `uc ]
[e $U 651  ]
"465
[; ;main.c: 465:         else
[e :U 650 ]
"466
[; ;main.c: 466:             uart_wr_str(0, 0, "PWR=0.0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 0 `i `uc :s 42C -> -> 8 `i `uc ]
[e :U 651 ]
"467
[; ;main.c: 467:         uart_wr_str(1, 0, "SWR=0.00", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 43C -> -> 8 `i `uc ]
"468
[; ;main.c: 468:         if (g_b_Auto_mode)
[e $ ! != -> _g_b_Auto_mode `i -> 0 `i 652  ]
"469
[; ;main.c: 469:             uart_wr_str(0, 8, ".", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 44C -> -> 1 `i `uc ]
[e :U 652 ]
"470
[; ;main.c: 470:     }
}
[e :U 648 ]
[e :U 647 ]
"471
[; ;main.c: 471:     __asm("clrwdt");
[; <" clrwdt ;# ">
"472
[; ;main.c: 472:     lcd_ind();
[e ( _lcd_ind ..  ]
"473
[; ;main.c: 473:     return;
[e $UE 641  ]
"474
[; ;main.c: 474: }
[e :UE 641 ]
}
"476
[; ;main.c: 476: void lcd_swr(int swr) {
[v _lcd_swr `(v ~T0 @X0 1 ef1`i ]
{
[e :U _lcd_swr ]
[v _swr `i ~T0 @X0 1 r1 ]
[f ]
"477
[; ;main.c: 477:     __asm("clrwdt");
[; <" clrwdt ;# ">
"478
[; ;main.c: 478:     if (swr != g_i_SWR_old) {
[e $ ! != _swr _g_i_SWR_old 654  ]
{
"479
[; ;main.c: 479:         g_i_SWR_old = swr;
[e = _g_i_SWR_old _swr ]
"480
[; ;main.c: 480:         if (swr == 0) {
[e $ ! == _swr -> 0 `i 655  ]
{
"481
[; ;main.c: 481:             if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 656  ]
"482
[; ;main.c: 482:                 uart_wr_str(2, 16 + 4 * 12, "0.00", 4);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> + -> 16 `i * -> 4 `i -> 12 `i `uc :s 45C -> -> 4 `i `uc ]
[e $U 657  ]
"483
[; ;main.c: 483:             else if (e_c_ledtype != 0)
[e :U 656 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 658  ]
"484
[; ;main.c: 484:                 uart_wr_str(1, 4, "0.00", 4);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 4 `i `uc :s 46C -> -> 4 `i `uc ]
[e $U 659  ]
"485
[; ;main.c: 485:             else if (e_c_ledtype == 0) {
[e :U 658 ]
[e $ ! == -> _e_c_ledtype `i -> 0 `i 660  ]
{
"486
[; ;main.c: 486:                 LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"487
[; ;main.c: 487:                 LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"488
[; ;main.c: 488:             }
}
[e :U 660 ]
[e :U 659 ]
[e :U 657 ]
"489
[; ;main.c: 489:             g_i_SWR_old = 0;
[e = _g_i_SWR_old -> 0 `i ]
"490
[; ;main.c: 490:         } else {
}
[e $U 661  ]
[e :U 655 ]
{
"491
[; ;main.c: 491:             IntToStr(swr, g_work_str);
[e ( _IntToStr (2 , _swr &U _g_work_str ]
"492
[; ;main.c: 492:             g_work_str_2[0] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"493
[; ;main.c: 493:             g_work_str_2[1] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"494
[; ;main.c: 494:             g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"495
[; ;main.c: 495:             g_work_str_2[3] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"496
[; ;main.c: 496:             if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 662  ]
"497
[; ;main.c: 497:                 uart_wr_str(2, 16 + 4 * 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> + -> 16 `i * -> 4 `i -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e $U 663  ]
"498
[; ;main.c: 498:             else if (e_c_ledtype != 0)
[e :U 662 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 664  ]
"499
[; ;main.c: 499:                 uart_wr_str(1, 4, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 4 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e $U 665  ]
"500
[; ;main.c: 500:             else if (e_c_ledtype == 0) {
[e :U 664 ]
[e $ ! == -> _e_c_ledtype `i -> 0 `i 666  ]
{
"501
[; ;main.c: 501:                 if (swr <= 150) {
[e $ ! <= _swr -> 150 `i 667  ]
{
"502
[; ;main.c: 502:                     LATBbits.LATB6 = 0;
[e = . . _LATBbits 0 6 -> -> 0 `i `uc ]
"503
[; ;main.c: 503:                     LATBbits.LATB7 = 1;
[e = . . _LATBbits 0 7 -> -> 1 `i `uc ]
"504
[; ;main.c: 504:                 }
}
[e $U 668  ]
"505
[; ;main.c: 505:                 else if (swr <= 250) {
[e :U 667 ]
[e $ ! <= _swr -> 250 `i 669  ]
{
"506
[; ;main.c: 506:                     LATBbits.LATB6 = 0;
[e = . . _LATBbits 0 6 -> -> 0 `i `uc ]
"507
[; ;main.c: 507:                     LATBbits.LATB7 = 0;
[e = . . _LATBbits 0 7 -> -> 0 `i `uc ]
"508
[; ;main.c: 508:                 }
}
[e $U 670  ]
"509
[; ;main.c: 509:                 else {
[e :U 669 ]
{
"510
[; ;main.c: 510:                     LATBbits.LATB6 = 1;
[e = . . _LATBbits 0 6 -> -> 1 `i `uc ]
"511
[; ;main.c: 511:                     LATBbits.LATB7 = 0;
[e = . . _LATBbits 0 7 -> -> 0 `i `uc ]
"512
[; ;main.c: 512:                 }
}
[e :U 670 ]
[e :U 668 ]
"513
[; ;main.c: 513:             }
}
[e :U 666 ]
[e :U 665 ]
[e :U 663 ]
"514
[; ;main.c: 514:         }
}
[e :U 661 ]
"515
[; ;main.c: 515:     }
}
[e :U 654 ]
"516
[; ;main.c: 516:     __asm("clrwdt");
[; <" clrwdt ;# ">
"517
[; ;main.c: 517:     return;
[e $UE 653  ]
"518
[; ;main.c: 518: }
[e :UE 653 ]
}
"520
[; ;main.c: 520: void show_pwr(int parm_Power, int parm_SWR) {
[v _show_pwr `(v ~T0 @X0 1 ef2`i`i ]
{
[e :U _show_pwr ]
[v _parm_Power `i ~T0 @X0 1 r1 ]
[v _parm_SWR `i ~T0 @X0 1 r2 ]
[f ]
"521
[; ;main.c: 521:     int p_ant, eff;
[v _p_ant `i ~T0 @X0 1 a ]
[v _eff `i ~T0 @X0 1 a ]
"522
[; ;main.c: 522:     double a, b;
[v _a `d ~T0 @X0 1 a ]
[v _b `d ~T0 @X0 1 a ]
"523
[; ;main.c: 523:     a = 100;
[e = _a -> -> 100 `i `d ]
"524
[; ;main.c: 524:     __asm("clrwdt");
[; <" clrwdt ;# ">
"526
[; ;main.c: 526:     if (g_b_Test_mode == 0 & e_c_b_Loss_ind == 1 & parm_Power >= 10) {
[e $ ! & & == -> _g_b_Test_mode `i -> 0 `i == -> _e_c_b_Loss_ind `i -> 1 `i >= _parm_Power -> 10 `i 672  ]
{
"527
[; ;main.c: 527:         if (g_b_Loss_mode == 0) {
[e $ ! == -> _g_b_Loss_mode `i -> 0 `i 673  ]
{
"528
[; ;main.c: 528:             if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 674  ]
{
"529
[; ;main.c: 529:                 if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 675  ]
"530
[; ;main.c: 530:                     uart_wr_str(4, 16, "ANT=  0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> -> 16 `i `uc :s 47C -> -> 8 `i `uc ]
[e $U 676  ]
"531
[; ;main.c: 531:                 else
[e :U 675 ]
"532
[; ;main.c: 532:                     uart_wr_str(4, 16, "ANT=0.0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> -> 16 `i `uc :s 48C -> -> 8 `i `uc ]
[e :U 676 ]
"533
[; ;main.c: 533:                 uart_wr_str(6, 16, "EFF=  0%", 8);
[e ( _uart_wr_str (4 , , , -> -> 6 `i `uc -> -> 16 `i `uc :s 49C -> -> 8 `i `uc ]
"534
[; ;main.c: 534:             } else if (e_c_ledtype == 2 | e_c_ledtype == 3) {
}
[e $U 677  ]
[e :U 674 ]
[e $ ! | == -> _e_c_ledtype `i -> 2 `i == -> _e_c_ledtype `i -> 3 `i 678  ]
{
"535
[; ;main.c: 535:                 if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 679  ]
"536
[; ;main.c: 536:                     uart_wr_str(0, 9, "ANT=  0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 9 `i `uc :s 50C -> -> 8 `i `uc ]
[e $U 680  ]
"537
[; ;main.c: 537:                 else
[e :U 679 ]
"538
[; ;main.c: 538:                     uart_wr_str(0, 9, "ANT=0.0W", 8);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 9 `i `uc :s 51C -> -> 8 `i `uc ]
[e :U 680 ]
"539
[; ;main.c: 539:                 uart_wr_str(1, 9, "EFF=  0%", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 9 `i `uc :s 52C -> -> 8 `i `uc ]
"540
[; ;main.c: 540:             } else if (e_c_ledtype == 1) {
}
[e $U 681  ]
[e :U 678 ]
[e $ ! == -> _e_c_ledtype `i -> 1 `i 682  ]
{
"541
[; ;main.c: 541:                 if (e_c_b_P_High == 1)
[e $ ! == -> _e_c_b_P_High `i -> 1 `i 683  ]
"542
[; ;main.c: 542:                     uart_wr_str(0, 9, "AN=  0W", 7);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 9 `i `uc :s 53C -> -> 7 `i `uc ]
[e $U 684  ]
"543
[; ;main.c: 543:                 else
[e :U 683 ]
"544
[; ;main.c: 544:                     uart_wr_str(0, 9, "AN=0.0W", 7);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 9 `i `uc :s 54C -> -> 7 `i `uc ]
[e :U 684 ]
"545
[; ;main.c: 545:                 uart_wr_str(1, 9, "EFF= 0%", 7);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 9 `i `uc :s 55C -> -> 7 `i `uc ]
"546
[; ;main.c: 546:             }
}
[e :U 682 ]
[e :U 681 ]
[e :U 677 ]
"547
[; ;main.c: 547:         }
}
[e :U 673 ]
"548
[; ;main.c: 548:         g_b_Loss_mode = 1;
[e = _g_b_Loss_mode -> -> 1 `i `uc ]
"549
[; ;main.c: 549:     } else {
}
[e $U 685  ]
[e :U 672 ]
{
"550
[; ;main.c: 550:         if (g_b_Loss_mode == 1)
[e $ ! == -> _g_b_Loss_mode `i -> 1 `i 686  ]
"551
[; ;main.c: 551:             lcd_ind();
[e ( _lcd_ind ..  ]
[e :U 686 ]
"552
[; ;main.c: 552:         g_b_Loss_mode = 0;
[e = _g_b_Loss_mode -> -> 0 `i `uc ]
"553
[; ;main.c: 553:     }
}
[e :U 685 ]
"554
[; ;main.c: 554:     __asm("clrwdt");
[; <" clrwdt ;# ">
"555
[; ;main.c: 555:     if (parm_Power != g_i_Power_old) {
[e $ ! != _parm_Power _g_i_Power_old 687  ]
{
"556
[; ;main.c: 556:         g_i_Power_old = parm_Power;
[e = _g_i_Power_old _parm_Power ]
"558
[; ;main.c: 558:         if (e_c_b_P_High == 0) {
[e $ ! == -> _e_c_b_P_High `i -> 0 `i 688  ]
{
"559
[; ;main.c: 559:             if (parm_Power >= 100) {
[e $ ! >= _parm_Power -> 100 `i 689  ]
{
"560
[; ;main.c: 560:                 parm_Power += 5;
[e =+ _parm_Power -> 5 `i ]
"561
[; ;main.c: 561:                 IntToStr(parm_Power, g_work_str);
[e ( _IntToStr (2 , _parm_Power &U _g_work_str ]
"562
[; ;main.c: 562:                 g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"563
[; ;main.c: 563:                 g_work_str_2[1] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"564
[; ;main.c: 564:                 g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"565
[; ;main.c: 565:                 g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"566
[; ;main.c: 566:             } else {
}
[e $U 690  ]
[e :U 689 ]
{
"567
[; ;main.c: 567:                 IntToStr(parm_Power, g_work_str);
[e ( _IntToStr (2 , _parm_Power &U _g_work_str ]
"568
[; ;main.c: 568:                 if (g_work_str[4] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 691  ]
"569
[; ;main.c: 569:                     g_work_str_2[0] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 692  ]
"570
[; ;main.c: 570:                 else
[e :U 691 ]
"571
[; ;main.c: 571:                     g_work_str_2[0] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 692 ]
"572
[; ;main.c: 572:                 g_work_str_2[1] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"573
[; ;main.c: 573:                 if (g_work_str[5] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 693  ]
"574
[; ;main.c: 574:                     g_work_str_2[2] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 694  ]
"575
[; ;main.c: 575:                 else
[e :U 693 ]
"576
[; ;main.c: 576:                     g_work_str_2[2] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 694 ]
"577
[; ;main.c: 577:                 g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"578
[; ;main.c: 578:             }
}
[e :U 690 ]
"579
[; ;main.c: 579:         } else {
}
[e $U 695  ]
[e :U 688 ]
{
"580
[; ;main.c: 580:             if (parm_Power < 999) {
[e $ ! < _parm_Power -> 999 `i 696  ]
{
"581
[; ;main.c: 581:                 IntToStr(parm_Power, g_work_str);
[e ( _IntToStr (2 , _parm_Power &U _g_work_str ]
"582
[; ;main.c: 582:                 g_work_str_2[0] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"583
[; ;main.c: 583:                 g_work_str_2[1] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"584
[; ;main.c: 584:                 g_work_str_2[2] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"585
[; ;main.c: 585:                 g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"586
[; ;main.c: 586:             } else {
}
[e $U 697  ]
[e :U 696 ]
{
"587
[; ;main.c: 587:                 IntToStr(parm_Power, g_work_str);
[e ( _IntToStr (2 , _parm_Power &U _g_work_str ]
"588
[; ;main.c: 588:                 g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"589
[; ;main.c: 589:                 g_work_str_2[1] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"590
[; ;main.c: 590:                 g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"591
[; ;main.c: 591:                 g_work_str_2[3] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"592
[; ;main.c: 592:             }
}
[e :U 697 ]
"593
[; ;main.c: 593:         }
}
[e :U 695 ]
"594
[; ;main.c: 594:         if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 698  ]
"595
[; ;main.c: 595:             uart_wr_str(0, 16 + 4 * 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 4 `i -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e $U 699  ]
"596
[; ;main.c: 596:         else if (e_c_ledtype != 0)
[e :U 698 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 700  ]
"597
[; ;main.c: 597:             uart_wr_str(0, 4, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 4 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e :U 700 ]
[e :U 699 ]
"599
[; ;main.c: 599:         __asm("clrwdt");
[; <" clrwdt ;# ">
"601
[; ;main.c: 601:         if (g_b_Loss_mode == 1) {
[e $ ! == -> _g_b_Loss_mode `i -> 1 `i 701  ]
{
"602
[; ;main.c: 602:             if (g_c_ind == 0 & g_c_cap == 0)
[e $ ! & == -> _g_c_ind `i -> 0 `i == -> _g_c_cap `i -> 0 `i 702  ]
"603
[; ;main.c: 603:                 g_i_swr_a = parm_SWR;
[e = _g_i_swr_a _parm_SWR ]
[e :U 702 ]
"604
[; ;main.c: 604:             a = 1.0 / ((g_i_swr_a / 100.0 + 100.0 / g_i_swr_a) * e_c_tenths_Fid_loss / 10.0 * 0.115 + 1.0);
[e = _a / .1.0 + * / * + / -> _g_i_swr_a `d .100.0 / .100.0 -> _g_i_swr_a `d -> -> _e_c_tenths_Fid_loss `i `d .10.0 .0.115 .1.0 ]
"605
[; ;main.c: 605:             b = 4.0 / (2.0 + parm_SWR / 100.0 + 100.0 / parm_SWR);
[e = _b / .4.0 + + .2.0 / -> _parm_SWR `d .100.0 / .100.0 -> _parm_SWR `d ]
"606
[; ;main.c: 606:             if (a >= 1.0)
[e $ ! >= _a .1.0 703  ]
"607
[; ;main.c: 607:                 a = 1.0;
[e = _a .1.0 ]
[e :U 703 ]
"608
[; ;main.c: 608:             if (b >= 1.0)
[e $ ! >= _b .1.0 704  ]
"609
[; ;main.c: 609:                 b = 1.0;
[e = _b .1.0 ]
[e :U 704 ]
"610
[; ;main.c: 610:             p_ant = (int) (parm_Power * a * b);
[e = _p_ant -> * * -> _parm_Power `d _a _b `i ]
"611
[; ;main.c: 611:             eff = (int) (a * b * 100);
[e = _eff -> * * _a _b -> -> 100 `i `d `i ]
"612
[; ;main.c: 612:             if (eff >= 100)
[e $ ! >= _eff -> 100 `i 705  ]
"613
[; ;main.c: 613:                 eff = 99;
[e = _eff -> 99 `i ]
[e :U 705 ]
"615
[; ;main.c: 615:             if (e_c_b_P_High == 0) {
[e $ ! == -> _e_c_b_P_High `i -> 0 `i 706  ]
{
"616
[; ;main.c: 616:                 if (p_ant >= 100) {
[e $ ! >= _p_ant -> 100 `i 707  ]
{
"617
[; ;main.c: 617:                     p_ant += 5;
[e =+ _p_ant -> 5 `i ]
"618
[; ;main.c: 618:                     IntToStr(p_ant, g_work_str);
[e ( _IntToStr (2 , _p_ant &U _g_work_str ]
"619
[; ;main.c: 619:                     g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"620
[; ;main.c: 620:                     g_work_str_2[1] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"621
[; ;main.c: 621:                     g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"622
[; ;main.c: 622:                     g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"623
[; ;main.c: 623:                 } else {
}
[e $U 708  ]
[e :U 707 ]
{
"624
[; ;main.c: 624:                     IntToStr(p_ant, g_work_str);
[e ( _IntToStr (2 , _p_ant &U _g_work_str ]
"625
[; ;main.c: 625:                     if (g_work_str[4] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 709  ]
"626
[; ;main.c: 626:                         g_work_str_2[0] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 710  ]
"627
[; ;main.c: 627:                     else
[e :U 709 ]
"628
[; ;main.c: 628:                         g_work_str_2[0] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 710 ]
"629
[; ;main.c: 629:                     g_work_str_2[1] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"630
[; ;main.c: 630:                     if (g_work_str[5] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 711  ]
"631
[; ;main.c: 631:                         g_work_str_2[2] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 712  ]
"632
[; ;main.c: 632:                     else
[e :U 711 ]
"633
[; ;main.c: 633:                         g_work_str_2[2] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 712 ]
"634
[; ;main.c: 634:                     g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"635
[; ;main.c: 635:                 }
}
[e :U 708 ]
"636
[; ;main.c: 636:             } else {
}
[e $U 713  ]
[e :U 706 ]
{
"637
[; ;main.c: 637:                 if (p_ant < 999) {
[e $ ! < _p_ant -> 999 `i 714  ]
{
"638
[; ;main.c: 638:                     IntToStr(p_ant, g_work_str);
[e ( _IntToStr (2 , _p_ant &U _g_work_str ]
"639
[; ;main.c: 639:                     g_work_str_2[0] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"640
[; ;main.c: 640:                     g_work_str_2[1] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"641
[; ;main.c: 641:                     g_work_str_2[2] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"642
[; ;main.c: 642:                     g_work_str_2[3] = 'W';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 87 `ui `uc ]
"643
[; ;main.c: 643:                 } else {
}
[e $U 715  ]
[e :U 714 ]
{
"644
[; ;main.c: 644:                     IntToStr(p_ant, g_work_str);
[e ( _IntToStr (2 , _p_ant &U _g_work_str ]
"645
[; ;main.c: 645:                     g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"646
[; ;main.c: 646:                     g_work_str_2[1] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"647
[; ;main.c: 647:                     g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"648
[; ;main.c: 648:                     g_work_str_2[3] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"649
[; ;main.c: 649:                 }
}
[e :U 715 ]
"650
[; ;main.c: 650:             }
}
[e :U 713 ]
"651
[; ;main.c: 651:             if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 716  ]
"652
[; ;main.c: 652:                 uart_wr_str(4, 16 + 4 * 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> + -> 16 `i * -> 4 `i -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e $U 717  ]
"653
[; ;main.c: 653:             else if (e_c_ledtype == 2 | e_c_ledtype == 3)
[e :U 716 ]
[e $ ! | == -> _e_c_ledtype `i -> 2 `i == -> _e_c_ledtype `i -> 3 `i 718  ]
"654
[; ;main.c: 654:                 uart_wr_str(0, 13, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 13 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e $U 719  ]
"655
[; ;main.c: 655:             else if (e_c_ledtype != 0)
[e :U 718 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 720  ]
"656
[; ;main.c: 656:                 uart_wr_str(0, 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
[e :U 720 ]
[e :U 719 ]
[e :U 717 ]
"658
[; ;main.c: 658:             IntToStr(eff, g_work_str);
[e ( _IntToStr (2 , _eff &U _g_work_str ]
"659
[; ;main.c: 659:             g_work_str_2[0] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"660
[; ;main.c: 660:             g_work_str_2[1] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"661
[; ;main.c: 661:             if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 721  ]
"662
[; ;main.c: 662:                 uart_wr_str(6, 16 + 5 * 12, g_work_str_2, 2);
[e ( _uart_wr_str (4 , , , -> -> 6 `i `uc -> + -> 16 `i * -> 5 `i -> 12 `i `uc &U _g_work_str_2 -> -> 2 `i `uc ]
[e $U 722  ]
"663
[; ;main.c: 663:             else if (e_c_ledtype == 2 | e_c_ledtype == 3)
[e :U 721 ]
[e $ ! | == -> _e_c_ledtype `i -> 2 `i == -> _e_c_ledtype `i -> 3 `i 723  ]
"664
[; ;main.c: 664:                 uart_wr_str(1, 14, g_work_str_2, 2);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 14 `i `uc &U _g_work_str_2 -> -> 2 `i `uc ]
[e $U 724  ]
"665
[; ;main.c: 665:             else if (e_c_ledtype == 1)
[e :U 723 ]
[e $ ! == -> _e_c_ledtype `i -> 1 `i 725  ]
"666
[; ;main.c: 666:                 uart_wr_str(1, 13, g_work_str_2, 2);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 13 `i `uc &U _g_work_str_2 -> -> 2 `i `uc ]
[e :U 725 ]
[e :U 724 ]
[e :U 722 ]
"667
[; ;main.c: 667:         }
}
[e :U 701 ]
"668
[; ;main.c: 668:     }
}
[e :U 687 ]
"669
[; ;main.c: 669:     __asm("clrwdt");
[; <" clrwdt ;# ">
"670
[; ;main.c: 670:     return;
[e $UE 671  ]
"671
[; ;main.c: 671: }
[e :UE 671 ]
}
"673
[; ;main.c: 673: void lcd_pwr() {
[v _lcd_pwr `(v ~T0 @X0 1 ef ]
{
[e :U _lcd_pwr ]
[f ]
"674
[; ;main.c: 674:     int p = 0;
[v _p `i ~T0 @X0 1 a ]
[e = _p -> 0 `i ]
"675
[; ;main.c: 675:     char peak_cnt;
[v _peak_cnt `uc ~T0 @X0 1 a ]
"676
[; ;main.c: 676:     int delta = e_i_tenths_SWR_Auto_delta - 100;
[v _delta `i ~T0 @X0 1 a ]
[e = _delta - _e_i_tenths_SWR_Auto_delta -> 100 `i ]
"677
[; ;main.c: 677:     char cnt;
[v _cnt `uc ~T0 @X0 1 a ]
"678
[; ;main.c: 678:     int SWR_fixed;
[v _SWR_fixed `i ~T0 @X0 1 a ]
"679
[; ;main.c: 679:     g_i_PWR = 0;
[e = _g_i_PWR -> 0 `i ]
"680
[; ;main.c: 680:     __asm("clrwdt");
[; <" clrwdt ;# ">
"683
[; ;main.c: 683:     cnt = 120;
[e = _cnt -> -> 120 `i `uc ]
"684
[; ;main.c: 684:     for (peak_cnt = 0; peak_cnt < cnt; peak_cnt++) {
{
[e = _peak_cnt -> -> 0 `i `uc ]
[e $U 730  ]
[e :U 727 ]
{
"685
[; ;main.c: 685:         get_pwr();
[e ( _get_pwr ..  ]
"686
[; ;main.c: 686:         if (g_i_PWR > p) {
[e $ ! > _g_i_PWR _p 731  ]
{
"687
[; ;main.c: 687:             p = g_i_PWR;
[e = _p _g_i_PWR ]
"688
[; ;main.c: 688:             SWR_fixed = g_i_SWR;
[e = _SWR_fixed _g_i_SWR ]
"689
[; ;main.c: 689:         }
}
[e :U 731 ]
"690
[; ;main.c: 690:         Delay_ms(3);
[e ( _Delay_ms (1 -> -> 3 `i `ui ]
"691
[; ;main.c: 691:     }
}
[e ++ _peak_cnt -> -> 1 `i `uc ]
[e :U 730 ]
[e $ < -> _peak_cnt `i -> _cnt `i 727  ]
[e :U 728 ]
}
"692
[; ;main.c: 692:     __asm("clrwdt");
[; <" clrwdt ;# ">
"693
[; ;main.c: 693:     if (p >= 100) {
[e $ ! >= _p -> 100 `i 732  ]
{
"694
[; ;main.c: 694:         p = (p + 5) / 10;
[e = _p / + _p -> 5 `i -> 10 `i ]
"695
[; ;main.c: 695:         p *= 10;
[e =* _p -> 10 `i ]
"696
[; ;main.c: 696:     }
}
[e :U 732 ]
"697
[; ;main.c: 697:     g_i_Power = p;
[e = _g_i_Power _p ]
"698
[; ;main.c: 698:     if (g_i_Power < 10)
[e $ ! < _g_i_Power -> 10 `i 733  ]
"699
[; ;main.c: 699:         SWR_fixed = 0;
[e = _SWR_fixed -> 0 `i ]
[e :U 733 ]
"700
[; ;main.c: 700:     lcd_swr(SWR_fixed);
[e ( _lcd_swr (1 _SWR_fixed ]
"702
[; ;main.c: 702:     if (g_b_Auto_mode & (SWR_fixed >= e_i_tenths_SWR_Auto_delta) & ((SWR_fixed > g_i_SWR_fixed_old & (SWR_fixed - g_i_SWR_fixed_old) > delta) | (SWR_fixed < g_i_SWR_fixed_old & (g_i_SWR_fixed_old - SWR_fixed) > delta) | g_i_SWR_fixed_old == 999))
[e $ ! != & & -> _g_b_Auto_mode `i -> >= _SWR_fixed _e_i_tenths_SWR_Auto_delta `i -> | | & > _SWR_fixed _g_i_SWR_fixed_old > - _SWR_fixed _g_i_SWR_fixed_old _delta & < _SWR_fixed _g_i_SWR_fixed_old > - _g_i_SWR_fixed_old _SWR_fixed _delta == _g_i_SWR_fixed_old -> 999 `i `i -> 0 `i 734  ]
"703
[; ;main.c: 703:         g_b_Soft_tune = 1;
[e = _g_b_Soft_tune -> -> 1 `i `uc ]
[e :U 734 ]
"705
[; ;main.c: 705:     show_pwr(g_i_Power, SWR_fixed);
[e ( _show_pwr (2 , _g_i_Power _SWR_fixed ]
"707
[; ;main.c: 707:     __asm("clrwdt");
[; <" clrwdt ;# ">
"708
[; ;main.c: 708:     if (g_b_Overload == 1) {
[e $ ! == -> _g_b_Overload `i -> 1 `i 735  ]
{
"709
[; ;main.c: 709:         if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 736  ]
{
"710
[; ;main.c: 710:             uart_wr_str(2, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 56C -> -> 8 `i `uc ]
"711
[; ;main.c: 711:             Delay_ms(100);
[e ( _Delay_ms (1 -> -> 100 `i `ui ]
"712
[; ;main.c: 712:             uart_wr_str(2, 16, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 57C -> -> 8 `i `uc ]
"713
[; ;main.c: 713:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"714
[; ;main.c: 714:             __asm("clrwdt");
[; <" clrwdt ;# ">
"715
[; ;main.c: 715:             uart_wr_str(2, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 58C -> -> 8 `i `uc ]
"716
[; ;main.c: 716:             Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"717
[; ;main.c: 717:             __asm("clrwdt");
[; <" clrwdt ;# ">
"718
[; ;main.c: 718:             uart_wr_str(2, 16, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 59C -> -> 8 `i `uc ]
"719
[; ;main.c: 719:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"720
[; ;main.c: 720:             __asm("clrwdt");
[; <" clrwdt ;# ">
"721
[; ;main.c: 721:             uart_wr_str(2, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 60C -> -> 8 `i `uc ]
"722
[; ;main.c: 722:             Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"723
[; ;main.c: 723:             __asm("clrwdt");
[; <" clrwdt ;# ">
"724
[; ;main.c: 724:             uart_wr_str(2, 16, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 61C -> -> 8 `i `uc ]
"725
[; ;main.c: 725:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"726
[; ;main.c: 726:             __asm("clrwdt");
[; <" clrwdt ;# ">
"727
[; ;main.c: 727:             uart_wr_str(2, 16, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 62C -> -> 8 `i `uc ]
"728
[; ;main.c: 728:             Delay_ms(100);
[e ( _Delay_ms (1 -> -> 100 `i `ui ]
"729
[; ;main.c: 729:             uart_wr_str(2, 16, "SWR=    ", 8);
[e ( _uart_wr_str (4 , , , -> -> 2 `i `uc -> -> 16 `i `uc :s 63C -> -> 8 `i `uc ]
"730
[; ;main.c: 730:         } else if (e_c_ledtype != 0) {
}
[e $U 737  ]
[e :U 736 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 738  ]
{
"731
[; ;main.c: 731:             uart_wr_str(1, 0, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 64C -> -> 8 `i `uc ]
"732
[; ;main.c: 732:             Delay_ms(100);
[e ( _Delay_ms (1 -> -> 100 `i `ui ]
"733
[; ;main.c: 733:             uart_wr_str(1, 0, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 65C -> -> 8 `i `uc ]
"734
[; ;main.c: 734:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"735
[; ;main.c: 735:             __asm("clrwdt");
[; <" clrwdt ;# ">
"736
[; ;main.c: 736:             uart_wr_str(1, 0, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 66C -> -> 8 `i `uc ]
"737
[; ;main.c: 737:             Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"738
[; ;main.c: 738:             __asm("clrwdt");
[; <" clrwdt ;# ">
"739
[; ;main.c: 739:             uart_wr_str(1, 0, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 67C -> -> 8 `i `uc ]
"740
[; ;main.c: 740:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"741
[; ;main.c: 741:             __asm("clrwdt");
[; <" clrwdt ;# ">
"742
[; ;main.c: 742:             uart_wr_str(1, 0, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 68C -> -> 8 `i `uc ]
"743
[; ;main.c: 743:             Delay_ms(300);
[e ( _Delay_ms (1 -> -> 300 `i `ui ]
"744
[; ;main.c: 744:             __asm("clrwdt");
[; <" clrwdt ;# ">
"745
[; ;main.c: 745:             uart_wr_str(1, 0, "OVERLOAD", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 69C -> -> 8 `i `uc ]
"746
[; ;main.c: 746:             Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"747
[; ;main.c: 747:             __asm("clrwdt");
[; <" clrwdt ;# ">
"748
[; ;main.c: 748:             uart_wr_str(1, 0, "        ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 70C -> -> 8 `i `uc ]
"749
[; ;main.c: 749:             Delay_ms(100);
[e ( _Delay_ms (1 -> -> 100 `i `ui ]
"750
[; ;main.c: 750:             uart_wr_str(1, 0, "SW=     ", 8);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc :s 71C -> -> 8 `i `uc ]
"751
[; ;main.c: 751:         }
}
[e :U 738 ]
[e :U 737 ]
"752
[; ;main.c: 752:         __asm("clrwdt");
[; <" clrwdt ;# ">
"753
[; ;main.c: 753:         g_i_SWR_old = 10000;
[e = _g_i_SWR_old -> 10000 `i ]
"754
[; ;main.c: 754:         lcd_swr(SWR_fixed);
[e ( _lcd_swr (1 _SWR_fixed ]
"755
[; ;main.c: 755:     }
}
[e :U 735 ]
"756
[; ;main.c: 756:     return;
[e $UE 726  ]
"757
[; ;main.c: 757: }
[e :UE 726 ]
}
"759
[; ;main.c: 759: void lcd_ind() {
[v _lcd_ind `(v ~T0 @X0 1 ef ]
{
[e :U _lcd_ind ]
[f ]
"760
[; ;main.c: 760:     char l_line;
[v _l_line `uc ~T0 @X0 1 a ]
"761
[; ;main.c: 761:     int l_work_int;
[v _l_work_int `i ~T0 @X0 1 a ]
"762
[; ;main.c: 762:     __asm("clrwdt");
[; <" clrwdt ;# ">
"765
[; ;main.c: 765:     charbits indbits;
[v _indbits `S1 ~T0 @X0 1 a ]
"766
[; ;main.c: 766:     indbits.bytes = g_c_ind;
[e = . _indbits 0 -> _g_c_ind `uc ]
"767
[; ;main.c: 767:     l_work_int = 0;
[e = _l_work_int -> 0 `i ]
"768
[; ;main.c: 768:     if (indbits.bits.B0)
[e $ ! != -> . . _indbits 1 0 `i -> 0 `i 740  ]
"769
[; ;main.c: 769:         l_work_int += e_i_Ind1;
[e =+ _l_work_int _e_i_Ind1 ]
[e :U 740 ]
"770
[; ;main.c: 770:     if (indbits.bits.B1)
[e $ ! != -> . . _indbits 1 1 `i -> 0 `i 741  ]
"771
[; ;main.c: 771:         l_work_int += e_i_Ind2;
[e =+ _l_work_int _e_i_Ind2 ]
[e :U 741 ]
"772
[; ;main.c: 772:     if (indbits.bits.B2)
[e $ ! != -> . . _indbits 1 2 `i -> 0 `i 742  ]
"773
[; ;main.c: 773:         l_work_int += e_i_Ind3;
[e =+ _l_work_int _e_i_Ind3 ]
[e :U 742 ]
"774
[; ;main.c: 774:     if (indbits.bits.B3)
[e $ ! != -> . . _indbits 1 3 `i -> 0 `i 743  ]
"775
[; ;main.c: 775:         l_work_int += e_i_Ind4;
[e =+ _l_work_int _e_i_Ind4 ]
[e :U 743 ]
"776
[; ;main.c: 776:     if (indbits.bits.B4)
[e $ ! != -> . . _indbits 1 4 `i -> 0 `i 744  ]
"777
[; ;main.c: 777:         l_work_int += e_i_Ind5;
[e =+ _l_work_int _e_i_Ind5 ]
[e :U 744 ]
"778
[; ;main.c: 778:     if (indbits.bits.B5)
[e $ ! != -> . . _indbits 1 5 `i -> 0 `i 745  ]
"779
[; ;main.c: 779:         l_work_int += e_i_Ind6;
[e =+ _l_work_int _e_i_Ind6 ]
[e :U 745 ]
"780
[; ;main.c: 780:     if (indbits.bits.B6)
[e $ ! != -> . . _indbits 1 6 `i -> 0 `i 746  ]
"781
[; ;main.c: 781:         l_work_int += e_i_Ind7;
[e =+ _l_work_int _e_i_Ind7 ]
[e :U 746 ]
"782
[; ;main.c: 782:     if (l_work_int > 9999) {
[e $ ! > _l_work_int -> 9999 `i 747  ]
{
"783
[; ;main.c: 783:         l_work_int += 50;
[e =+ _l_work_int -> 50 `i ]
"784
[; ;main.c: 784:         IntToStr(l_work_int, g_work_str);
[e ( _IntToStr (2 , _l_work_int &U _g_work_str ]
"785
[; ;main.c: 785:         g_work_str_2[0] = g_work_str[1];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"786
[; ;main.c: 786:         g_work_str_2[1] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"787
[; ;main.c: 787:         g_work_str_2[2] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"788
[; ;main.c: 788:         g_work_str_2[3] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"789
[; ;main.c: 789:     } else {
}
[e $U 748  ]
[e :U 747 ]
{
"790
[; ;main.c: 790:         IntToStr(l_work_int, g_work_str);
[e ( _IntToStr (2 , _l_work_int &U _g_work_str ]
"791
[; ;main.c: 791:         if (g_work_str[2] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 749  ]
"792
[; ;main.c: 792:             g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 750  ]
"793
[; ;main.c: 793:         else
[e :U 749 ]
"794
[; ;main.c: 794:             g_work_str_2[0] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 750 ]
"795
[; ;main.c: 795:         g_work_str_2[1] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"796
[; ;main.c: 796:         if (g_work_str[3] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 751  ]
"797
[; ;main.c: 797:             g_work_str_2[2] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 752  ]
"798
[; ;main.c: 798:         else
[e :U 751 ]
"799
[; ;main.c: 799:             g_work_str_2[2] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 752 ]
"800
[; ;main.c: 800:         if (g_work_str[4] != ' ')
[e $ ! != -> *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux `ui -> 32 `ui 753  ]
"801
[; ;main.c: 801:             g_work_str_2[3] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 754  ]
"802
[; ;main.c: 802:         else
[e :U 753 ]
"803
[; ;main.c: 803:             g_work_str_2[3] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 754 ]
"804
[; ;main.c: 804:     }
}
[e :U 748 ]
"805
[; ;main.c: 805:     if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 755  ]
{
"806
[; ;main.c: 806:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 756  ]
"807
[; ;main.c: 807:             l_line = 4;
[e = _l_line -> -> 4 `i `uc ]
[e $U 757  ]
"808
[; ;main.c: 808:         else
[e :U 756 ]
"809
[; ;main.c: 809:             l_line = 6;
[e = _l_line -> -> 6 `i `uc ]
[e :U 757 ]
"810
[; ;main.c: 810:         uart_wr_str(l_line, 16, "L=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 16 `i `uc :s 72C -> -> 2 `i `uc ]
"811
[; ;main.c: 811:         uart_wr_str(l_line, 16 + 6 * 12, "uH", 2);
[e ( _uart_wr_str (4 , , , _l_line -> + -> 16 `i * -> 6 `i -> 12 `i `uc :s 73C -> -> 2 `i `uc ]
"812
[; ;main.c: 812:         uart_wr_str(l_line, 16 + 2 * 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> + -> 16 `i * -> 2 `i -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"813
[; ;main.c: 813:     } else if (e_c_ledtype == 2 | e_c_ledtype == 3) {
}
[e $U 758  ]
[e :U 755 ]
[e $ ! | == -> _e_c_ledtype `i -> 2 `i == -> _e_c_ledtype `i -> 3 `i 759  ]
{
"814
[; ;main.c: 814:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 760  ]
"815
[; ;main.c: 815:             l_line = 0;
[e = _l_line -> -> 0 `i `uc ]
[e $U 761  ]
"816
[; ;main.c: 816:         else
[e :U 760 ]
"817
[; ;main.c: 817:             l_line = 1;
[e = _l_line -> -> 1 `i `uc ]
[e :U 761 ]
"818
[; ;main.c: 818:         uart_wr_str(l_line, 9, "L=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 9 `i `uc :s 74C -> -> 2 `i `uc ]
"819
[; ;main.c: 819:         uart_wr_str(l_line, 15, "uH", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 15 `i `uc :s 75C -> -> 2 `i `uc ]
"820
[; ;main.c: 820:         uart_wr_str(l_line, 11, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> -> 11 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"821
[; ;main.c: 821:     } else if (e_c_ledtype == 1) {
}
[e $U 762  ]
[e :U 759 ]
[e $ ! == -> _e_c_ledtype `i -> 1 `i 763  ]
{
"822
[; ;main.c: 822:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 764  ]
"823
[; ;main.c: 823:             l_line = 0;
[e = _l_line -> -> 0 `i `uc ]
[e $U 765  ]
"824
[; ;main.c: 824:         else
[e :U 764 ]
"825
[; ;main.c: 825:             l_line = 1;
[e = _l_line -> -> 1 `i `uc ]
[e :U 765 ]
"826
[; ;main.c: 826:         uart_wr_str(l_line, 9, "L=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 9 `i `uc :s 76C -> -> 2 `i `uc ]
"827
[; ;main.c: 827:         uart_wr_str(l_line, 15, "u", 1);
[e ( _uart_wr_str (4 , , , _l_line -> -> 15 `i `uc :s 77C -> -> 1 `i `uc ]
"828
[; ;main.c: 828:         uart_wr_str(l_line, 11, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> -> 11 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"829
[; ;main.c: 829:     }
}
[e :U 763 ]
[e :U 762 ]
[e :U 758 ]
"831
[; ;main.c: 831:     __asm("clrwdt");
[; <" clrwdt ;# ">
"834
[; ;main.c: 834:     l_work_int = 0;
[e = _l_work_int -> 0 `i ]
"835
[; ;main.c: 835:     charbits capbits;
[v _capbits `S1 ~T0 @X0 1 a ]
"836
[; ;main.c: 836:     capbits.bytes = g_c_cap;
[e = . _capbits 0 -> _g_c_cap `uc ]
"837
[; ;main.c: 837:     if (capbits.bits.B0)
[e $ ! != -> . . _capbits 1 0 `i -> 0 `i 766  ]
"838
[; ;main.c: 838:         l_work_int += e_i_Cap1;
[e =+ _l_work_int _e_i_Cap1 ]
[e :U 766 ]
"839
[; ;main.c: 839:     if (capbits.bits.B1)
[e $ ! != -> . . _capbits 1 1 `i -> 0 `i 767  ]
"840
[; ;main.c: 840:         l_work_int += e_i_Cap2;
[e =+ _l_work_int _e_i_Cap2 ]
[e :U 767 ]
"841
[; ;main.c: 841:     if (capbits.bits.B2)
[e $ ! != -> . . _capbits 1 2 `i -> 0 `i 768  ]
"842
[; ;main.c: 842:         l_work_int += e_i_Cap3;
[e =+ _l_work_int _e_i_Cap3 ]
[e :U 768 ]
"843
[; ;main.c: 843:     if (capbits.bits.B3)
[e $ ! != -> . . _capbits 1 3 `i -> 0 `i 769  ]
"844
[; ;main.c: 844:         l_work_int += e_i_Cap4;
[e =+ _l_work_int _e_i_Cap4 ]
[e :U 769 ]
"845
[; ;main.c: 845:     if (capbits.bits.B4)
[e $ ! != -> . . _capbits 1 4 `i -> 0 `i 770  ]
"846
[; ;main.c: 846:         l_work_int += e_i_Cap5;
[e =+ _l_work_int _e_i_Cap5 ]
[e :U 770 ]
"847
[; ;main.c: 847:     if (capbits.bits.B5)
[e $ ! != -> . . _capbits 1 5 `i -> 0 `i 771  ]
"848
[; ;main.c: 848:         l_work_int += e_i_Cap6;
[e =+ _l_work_int _e_i_Cap6 ]
[e :U 771 ]
"849
[; ;main.c: 849:     if (capbits.bits.B6)
[e $ ! != -> . . _capbits 1 6 `i -> 0 `i 772  ]
"850
[; ;main.c: 850:         l_work_int += e_i_Cap7;
[e =+ _l_work_int _e_i_Cap7 ]
[e :U 772 ]
"851
[; ;main.c: 851:     IntToStr(l_work_int, g_work_str);
[e ( _IntToStr (2 , _l_work_int &U _g_work_str ]
"852
[; ;main.c: 852:     g_work_str_2[0] = g_work_str[2];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"853
[; ;main.c: 853:     g_work_str_2[1] = g_work_str[3];
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"854
[; ;main.c: 854:     g_work_str_2[2] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"855
[; ;main.c: 855:     g_work_str_2[3] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 3 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"857
[; ;main.c: 857:     if (e_c_ledtype == 4 | e_c_ledtype == 5) {
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 773  ]
{
"858
[; ;main.c: 858:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 774  ]
"859
[; ;main.c: 859:             l_line = 6;
[e = _l_line -> -> 6 `i `uc ]
[e $U 775  ]
"860
[; ;main.c: 860:         else
[e :U 774 ]
"861
[; ;main.c: 861:             l_line = 4;
[e = _l_line -> -> 4 `i `uc ]
[e :U 775 ]
"862
[; ;main.c: 862:         uart_wr_str(l_line, 16, "C=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 16 `i `uc :s 78C -> -> 2 `i `uc ]
"863
[; ;main.c: 863:         uart_wr_str(l_line, 16 + 6 * 12, "pF", 2);
[e ( _uart_wr_str (4 , , , _l_line -> + -> 16 `i * -> 6 `i -> 12 `i `uc :s 79C -> -> 2 `i `uc ]
"864
[; ;main.c: 864:         uart_wr_str(l_line, 16 + 2 * 12, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> + -> 16 `i * -> 2 `i -> 12 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"865
[; ;main.c: 865:     } else if (e_c_ledtype == 2 | e_c_ledtype == 3) {
}
[e $U 776  ]
[e :U 773 ]
[e $ ! | == -> _e_c_ledtype `i -> 2 `i == -> _e_c_ledtype `i -> 3 `i 777  ]
{
"866
[; ;main.c: 866:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 778  ]
"867
[; ;main.c: 867:             l_line = 1;
[e = _l_line -> -> 1 `i `uc ]
[e $U 779  ]
"868
[; ;main.c: 868:         else
[e :U 778 ]
"869
[; ;main.c: 869:             l_line = 0;
[e = _l_line -> -> 0 `i `uc ]
[e :U 779 ]
"870
[; ;main.c: 870:         uart_wr_str(l_line, 9, "C=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 9 `i `uc :s 80C -> -> 2 `i `uc ]
"871
[; ;main.c: 871:         uart_wr_str(l_line, 15, "pF", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 15 `i `uc :s 81C -> -> 2 `i `uc ]
"872
[; ;main.c: 872:         uart_wr_str(l_line, 11, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> -> 11 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"873
[; ;main.c: 873:     } else if (e_c_ledtype == 1) {
}
[e $U 780  ]
[e :U 777 ]
[e $ ! == -> _e_c_ledtype `i -> 1 `i 781  ]
{
"874
[; ;main.c: 874:         if (g_c_SW == 1)
[e $ ! == -> _g_c_SW `i -> 1 `i 782  ]
"875
[; ;main.c: 875:             l_line = 1;
[e = _l_line -> -> 1 `i `uc ]
[e $U 783  ]
"876
[; ;main.c: 876:         else
[e :U 782 ]
"877
[; ;main.c: 877:             l_line = 0;
[e = _l_line -> -> 0 `i `uc ]
[e :U 783 ]
"878
[; ;main.c: 878:         uart_wr_str(l_line, 9, "C=", 2);
[e ( _uart_wr_str (4 , , , _l_line -> -> 9 `i `uc :s 82C -> -> 2 `i `uc ]
"879
[; ;main.c: 879:         uart_wr_str(l_line, 15, "p", 1);
[e ( _uart_wr_str (4 , , , _l_line -> -> 15 `i `uc :s 83C -> -> 1 `i `uc ]
"880
[; ;main.c: 880:         uart_wr_str(l_line, 11, g_work_str_2, 4);
[e ( _uart_wr_str (4 , , , _l_line -> -> 11 `i `uc &U _g_work_str_2 -> -> 4 `i `uc ]
"881
[; ;main.c: 881:     }
}
[e :U 781 ]
[e :U 780 ]
[e :U 776 ]
"883
[; ;main.c: 883:     __asm("clrwdt");
[; <" clrwdt ;# ">
"884
[; ;main.c: 884:     return;
[e $UE 739  ]
"885
[; ;main.c: 885: }
[e :UE 739 ]
}
"887
[; ;main.c: 887: void Test_init(void) {
[v _Test_init `(v ~T0 @X0 1 ef ]
{
[e :U _Test_init ]
[f ]
"888
[; ;main.c: 888:     if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 785  ]
"889
[; ;main.c: 889:         uart_wr_str(0, 10, "TEST MODE", 9);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 10 `i `uc :s 84C -> -> 9 `i `uc ]
[e $U 786  ]
"890
[; ;main.c: 890:     else if (e_c_ledtype != 0)
[e :U 785 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 787  ]
"891
[; ;main.c: 891:         uart_wr_str(0, 3, "TEST MODE", 9);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 3 `i `uc :s 85C -> -> 9 `i `uc ]
[e :U 787 ]
[e :U 786 ]
"892
[; ;main.c: 892:     __asm("clrwdt");
[; <" clrwdt ;# ">
"893
[; ;main.c: 893:     Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"894
[; ;main.c: 894:     __asm("clrwdt");
[; <" clrwdt ;# ">
"895
[; ;main.c: 895:     Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"896
[; ;main.c: 896:     __asm("clrwdt");
[; <" clrwdt ;# ">
"897
[; ;main.c: 897:     Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"898
[; ;main.c: 898:     __asm("clrwdt");
[; <" clrwdt ;# ">
"899
[; ;main.c: 899:     Delay_ms(500);
[e ( _Delay_ms (1 -> -> 500 `i `ui ]
"900
[; ;main.c: 900:     __asm("clrwdt");
[; <" clrwdt ;# ">
"901
[; ;main.c: 901:     if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 788  ]
"902
[; ;main.c: 902:         uart_wr_str(0, 10, "         ", 9);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 10 `i `uc :s 86C -> -> 9 `i `uc ]
[e $U 789  ]
"903
[; ;main.c: 903:     else if (e_c_ledtype != 0)
[e :U 788 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 790  ]
"904
[; ;main.c: 904:         uart_wr_str(0, 3, "         ", 9);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 3 `i `uc :s 87C -> -> 9 `i `uc ]
[e :U 790 ]
[e :U 789 ]
"905
[; ;main.c: 905:     atu_reset();
[e ( _atu_reset ..  ]
"906
[; ;main.c: 906:     g_c_SW = 1;
[e = _g_c_SW -> -> 1 `i `uc ]
"907
[; ;main.c: 907:     set_sw(g_c_SW);
[e ( _set_sw (1 _g_c_SW ]
"908
[; ;main.c: 908:     eeprom_write(255, g_c_cap);
[e ( _eeprom_write (2 , -> -> 255 `i `uc -> _g_c_cap `uc ]
"909
[; ;main.c: 909:     eeprom_write(254, g_c_ind);
[e ( _eeprom_write (2 , -> -> 254 `i `uc -> _g_c_ind `uc ]
"910
[; ;main.c: 910:     eeprom_write(253, g_c_SW);
[e ( _eeprom_write (2 , -> -> 253 `i `uc -> _g_c_SW `uc ]
"912
[; ;main.c: 912:     if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 791  ]
"913
[; ;main.c: 913:         uart_wr_str(0, 16 + 12 * 8, "l", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> + -> 16 `i * -> 12 `i -> 8 `i `uc :s 88C -> -> 1 `i `uc ]
[e $U 792  ]
"914
[; ;main.c: 914:     else if (e_c_ledtype != 0)
[e :U 791 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 793  ]
"915
[; ;main.c: 915:         uart_wr_str(0, 8, "l", 1);
[e ( _uart_wr_str (4 , , , -> -> 0 `i `uc -> -> 8 `i `uc :s 89C -> -> 1 `i `uc ]
[e :U 793 ]
[e :U 792 ]
"917
[; ;main.c: 917:     g_b_lcd_prep_short = 1;
[e = _g_b_lcd_prep_short -> -> 1 `i `uc ]
"918
[; ;main.c: 918:     lcd_prep();
[e ( _lcd_prep ..  ]
"919
[; ;main.c: 919:     return;
[e $UE 784  ]
"920
[; ;main.c: 920: }
[e :UE 784 ]
}
"922
[; ;main.c: 922: void cells_init(void) {
[v _cells_init `(v ~T0 @X0 1 ef ]
{
[e :U _cells_init ]
[f ]
"924
[; ;main.c: 924:     __asm("clrwdt");
[; <" clrwdt ;# ">
"926
[; ;main.c: 926:     e_c_ledtype = eeprom_read(1);
[e = _e_c_ledtype -> ( _eeprom_read (1 -> -> 1 `i `uc `uc ]
"927
[; ;main.c: 927:     if (eeprom_read(2) == 1)
[e $ ! == -> ( _eeprom_read (1 -> -> 2 `i `uc `i -> 1 `i 795  ]
"928
[; ;main.c: 928:         g_b_Auto_mode = 1;
[e = _g_b_Auto_mode -> -> 1 `i `uc ]
[e :U 795 ]
"929
[; ;main.c: 929:     e_i_ms_Rel_Del = Bcd2Dec(eeprom_read(3));
[e = _e_i_ms_Rel_Del -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 3 `i `uc `i ]
"930
[; ;main.c: 930:     e_i_tenths_SWR_Auto_delta = Bcd2Dec(eeprom_read(4)) * 10;
[e = _e_i_tenths_SWR_Auto_delta * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 4 `i `uc `i -> 10 `i ]
"931
[; ;main.c: 931:     e_i_watts_min_for_start = Bcd2Dec(eeprom_read(5)) * 10;
[e = _e_i_watts_min_for_start * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 5 `i `uc `i -> 10 `i ]
"932
[; ;main.c: 932:     e_i_watts_max_for_start = Bcd2Dec(eeprom_read(6)) * 10;
[e = _e_i_watts_max_for_start * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 6 `i `uc `i -> 10 `i ]
"935
[; ;main.c: 935:     e_i_tenths_init_max_swr = Bcd2Dec(eeprom_read(9)) * 10;
[e = _e_i_tenths_init_max_swr * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 9 `i `uc `i -> 10 `i ]
"936
[; ;main.c: 936:     e_c_num_L_q = eeprom_read(10);
[e = _e_c_num_L_q -> ( _eeprom_read (1 -> -> 10 `i `uc `uc ]
"937
[; ;main.c: 937:     e_c_b_L_linear = eeprom_read(11);
[e = _e_c_b_L_linear -> ( _eeprom_read (1 -> -> 11 `i `uc `uc ]
"938
[; ;main.c: 938:     e_c_num_C_q = eeprom_read(12);
[e = _e_c_num_C_q -> ( _eeprom_read (1 -> -> 12 `i `uc `uc ]
"939
[; ;main.c: 939:     e_c_b_C_linear = eeprom_read(13);
[e = _e_c_b_C_linear -> ( _eeprom_read (1 -> -> 13 `i `uc `uc ]
"940
[; ;main.c: 940:     e_c_b_D_correction = eeprom_read(14);
[e = _e_c_b_D_correction -> ( _eeprom_read (1 -> -> 14 `i `uc `uc ]
"941
[; ;main.c: 941:     e_c_b_L_invert = eeprom_read(15);
[e = _e_c_b_L_invert -> ( _eeprom_read (1 -> -> 15 `i `uc `uc ]
"943
[; ;main.c: 943:     __asm("clrwdt");
[; <" clrwdt ;# ">
"944
[; ;main.c: 944:     e_i_Ind1 = Bcd2Dec(eeprom_read(16)) * 100 + Bcd2Dec(eeprom_read(17));
[e = _e_i_Ind1 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 16 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 17 `i `uc `i ]
"945
[; ;main.c: 945:     e_i_Ind2 = Bcd2Dec(eeprom_read(18)) * 100 + Bcd2Dec(eeprom_read(19));
[e = _e_i_Ind2 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 18 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 19 `i `uc `i ]
"946
[; ;main.c: 946:     e_i_Ind3 = Bcd2Dec(eeprom_read(20)) * 100 + Bcd2Dec(eeprom_read(21));
[e = _e_i_Ind3 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 20 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 21 `i `uc `i ]
"947
[; ;main.c: 947:     e_i_Ind4 = Bcd2Dec(eeprom_read(22)) * 100 + Bcd2Dec(eeprom_read(23));
[e = _e_i_Ind4 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 22 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 23 `i `uc `i ]
"948
[; ;main.c: 948:     e_i_Ind5 = Bcd2Dec(eeprom_read(24)) * 100 + Bcd2Dec(eeprom_read(25));
[e = _e_i_Ind5 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 24 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 25 `i `uc `i ]
"949
[; ;main.c: 949:     e_i_Ind6 = Bcd2Dec(eeprom_read(26)) * 100 + Bcd2Dec(eeprom_read(27));
[e = _e_i_Ind6 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 26 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 27 `i `uc `i ]
"950
[; ;main.c: 950:     e_i_Ind7 = Bcd2Dec(eeprom_read(28)) * 100 + Bcd2Dec(eeprom_read(29));
[e = _e_i_Ind7 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 28 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 29 `i `uc `i ]
"952
[; ;main.c: 952:     e_i_Cap1 = Bcd2Dec(eeprom_read(32)) * 100 + Bcd2Dec(eeprom_read(33));
[e = _e_i_Cap1 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 32 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 33 `i `uc `i ]
"953
[; ;main.c: 953:     e_i_Cap2 = Bcd2Dec(eeprom_read(34)) * 100 + Bcd2Dec(eeprom_read(35));
[e = _e_i_Cap2 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 34 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 35 `i `uc `i ]
"954
[; ;main.c: 954:     e_i_Cap3 = Bcd2Dec(eeprom_read(36)) * 100 + Bcd2Dec(eeprom_read(37));
[e = _e_i_Cap3 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 36 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 37 `i `uc `i ]
"955
[; ;main.c: 955:     e_i_Cap4 = Bcd2Dec(eeprom_read(38)) * 100 + Bcd2Dec(eeprom_read(39));
[e = _e_i_Cap4 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 38 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 39 `i `uc `i ]
"956
[; ;main.c: 956:     e_i_Cap5 = Bcd2Dec(eeprom_read(40)) * 100 + Bcd2Dec(eeprom_read(41));
[e = _e_i_Cap5 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 40 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 41 `i `uc `i ]
"957
[; ;main.c: 957:     e_i_Cap6 = Bcd2Dec(eeprom_read(42)) * 100 + Bcd2Dec(eeprom_read(43));
[e = _e_i_Cap6 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 42 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 43 `i `uc `i ]
"958
[; ;main.c: 958:     e_i_Cap7 = Bcd2Dec(eeprom_read(44)) * 100 + Bcd2Dec(eeprom_read(45));
[e = _e_i_Cap7 + * -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 44 `i `uc `i -> 100 `i -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 45 `i `uc `i ]
"960
[; ;main.c: 960:     e_c_b_P_High = eeprom_read(0x30);
[e = _e_c_b_P_High -> ( _eeprom_read (1 -> -> 48 `i `uc `uc ]
"961
[; ;main.c: 961:     e_c_K_Mult = Bcd2Dec(eeprom_read(0x31));
[e = _e_c_K_Mult -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 49 `i `uc `uc ]
"963
[; ;main.c: 963:     e_c_b_Loss_ind = eeprom_read(0x33);
[e = _e_c_b_Loss_ind -> ( _eeprom_read (1 -> -> 51 `i `uc `uc ]
"964
[; ;main.c: 964:     e_c_tenths_Fid_loss = Bcd2Dec(eeprom_read(0x34));
[e = _e_c_tenths_Fid_loss -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 52 `i `uc `uc ]
"965
[; ;main.c: 965:     e_c_b_Relay_off = Bcd2Dec(eeprom_read(0x35));
[e = _e_c_b_Relay_off -> ( _Bcd2Dec (1 ( _eeprom_read (1 -> -> 53 `i `uc `uc ]
"966
[; ;main.c: 966:     __asm("clrwdt");
[; <" clrwdt ;# ">
"967
[; ;main.c: 967:     return;
[e $UE 794  ]
"968
[; ;main.c: 968: }
[e :UE 794 ]
}
"970
[; ;main.c: 970: void show_loss(void) {
[v _show_loss `(v ~T0 @X0 1 ef ]
{
[e :U _show_loss ]
[f ]
"971
[; ;main.c: 971:     IntToStr(e_c_tenths_Fid_loss, g_work_str);
[e ( _IntToStr (2 , -> _e_c_tenths_Fid_loss `i &U _g_work_str ]
"972
[; ;main.c: 972:     if (e_c_tenths_Fid_loss >= 10)
[e $ ! >= -> _e_c_tenths_Fid_loss `i -> 10 `i 797  ]
"973
[; ;main.c: 973:         g_work_str_2[0] = g_work_str[4];
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 4 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
[e $U 798  ]
"974
[; ;main.c: 974:     else
[e :U 797 ]
"975
[; ;main.c: 975:         g_work_str_2[0] = '0';
[e = *U + &U _g_work_str_2 * -> -> -> 0 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 48 `ui `uc ]
[e :U 798 ]
"976
[; ;main.c: 976:     g_work_str_2[1] = '.';
[e = *U + &U _g_work_str_2 * -> -> -> 1 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux -> -> 46 `ui `uc ]
"977
[; ;main.c: 977:     g_work_str_2[2] = g_work_str[5];
[e = *U + &U _g_work_str_2 * -> -> -> 2 `i `ui `ux -> -> # *U &U _g_work_str_2 `ui `ux *U + &U _g_work_str * -> -> -> 5 `i `ui `ux -> -> # *U &U _g_work_str `ui `ux ]
"978
[; ;main.c: 978:     if (e_c_ledtype == 4 | e_c_ledtype == 5)
[e $ ! | == -> _e_c_ledtype `i -> 4 `i == -> _e_c_ledtype `i -> 5 `i 799  ]
"979
[; ;main.c: 979:         uart_wr_str(4, 6, g_work_str_2, 3);
[e ( _uart_wr_str (4 , , , -> -> 4 `i `uc -> -> 6 `i `uc &U _g_work_str_2 -> -> 3 `i `uc ]
[e $U 800  ]
"980
[; ;main.c: 980:     else if (e_c_ledtype != 0)
[e :U 799 ]
[e $ ! != -> _e_c_ledtype `i -> 0 `i 801  ]
"981
[; ;main.c: 981:         uart_wr_str(1, 0, g_work_str_2, 3);
[e ( _uart_wr_str (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc &U _g_work_str_2 -> -> 3 `i `uc ]
[e :U 801 ]
[e :U 800 ]
"982
[; ;main.c: 982:     return;
[e $UE 796  ]
"983
[; ;main.c: 983: }
[e :UE 796 ]
}
[a 77C 117 0 ]
[a 83C 112 0 ]
[a 1C 108 0 ]
[a 2C 108 0 ]
[a 88C 108 0 ]
[a 89C 108 0 ]
[a 24C 69 88 84 32 98 111 97 114 100 0 ]
[a 36C 69 88 84 32 98 111 97 114 100 0 ]
[a 3C 99 0 ]
[a 4C 99 0 ]
[a 6C 95 0 ]
[a 9C 95 0 ]
[a 12C 95 0 ]
[a 15C 95 0 ]
[a 48C 65 78 84 61 48 46 48 87 0 ]
[a 51C 65 78 84 61 48 46 48 87 0 ]
[a 32C 80 87 82 61 48 46 48 87 0 ]
[a 42C 80 87 82 61 48 46 48 87 0 ]
[a 54C 65 78 61 48 46 48 87 0 ]
[a 47C 65 78 84 61 32 32 48 87 0 ]
[a 50C 65 78 84 61 32 32 48 87 0 ]
[a 31C 80 87 82 61 32 32 48 87 0 ]
[a 41C 80 87 82 61 32 32 48 87 0 ]
[a 53C 65 78 61 32 32 48 87 0 ]
[a 73C 117 72 0 ]
[a 75C 117 72 0 ]
[a 79C 112 70 0 ]
[a 81C 112 70 0 ]
[a 21C 84 85 78 69 0 ]
[a 22C 84 85 78 69 0 ]
[a 84C 84 69 83 84 32 77 79 68 69 0 ]
[a 85C 84 69 83 84 32 77 79 68 69 0 ]
[a 57C 79 86 69 82 76 79 65 68 0 ]
[a 59C 79 86 69 82 76 79 65 68 0 ]
[a 61C 79 86 69 82 76 79 65 68 0 ]
[a 65C 79 86 69 82 76 79 65 68 0 ]
[a 67C 79 86 69 82 76 79 65 68 0 ]
[a 69C 79 86 69 82 76 79 65 68 0 ]
[a 25C 98 121 32 78 55 68 68 67 0 ]
[a 37C 98 121 32 78 55 68 68 67 0 ]
[a 72C 76 61 0 ]
[a 74C 76 61 0 ]
[a 76C 76 61 0 ]
[a 78C 67 61 0 ]
[a 80C 67 61 0 ]
[a 82C 67 61 0 ]
[a 26C 70 87 32 118 101 114 32 51 46 50 0 ]
[a 38C 70 87 32 118 101 114 32 51 46 50 0 ]
[a 23C 65 84 85 45 49 48 48 0 ]
[a 35C 65 84 85 45 49 48 48 0 ]
[a 18C 83 87 82 61 48 46 48 48 0 ]
[a 20C 83 87 82 61 48 46 48 48 0 ]
[a 33C 83 87 82 61 48 46 48 48 0 ]
[a 43C 83 87 82 61 48 46 48 48 0 ]
[a 45C 48 46 48 48 0 ]
[a 46C 48 46 48 48 0 ]
[a 5C 46 0 ]
[a 8C 46 0 ]
[a 11C 46 0 ]
[a 14C 46 0 ]
[a 34C 46 0 ]
[a 44C 46 0 ]
[a 55C 69 70 70 61 32 48 37 0 ]
[a 49C 69 70 70 61 32 32 48 37 0 ]
[a 52C 69 70 70 61 32 32 48 37 0 ]
[a 17C 82 69 83 69 84 32 32 32 0 ]
[a 19C 82 69 83 69 84 32 32 32 0 ]
[a 63C 83 87 82 61 32 32 32 32 0 ]
[a 71C 83 87 61 32 32 32 32 32 0 ]
[a 28C 32 32 32 32 32 32 32 32 32 32 0 ]
[a 30C 32 32 32 32 32 32 32 32 32 32 0 ]
[a 40C 32 32 32 32 32 32 32 32 32 32 0 ]
[a 86C 32 32 32 32 32 32 32 32 32 0 ]
[a 87C 32 32 32 32 32 32 32 32 32 0 ]
[a 27C 32 32 32 32 32 32 32 32 0 ]
[a 29C 32 32 32 32 32 32 32 32 0 ]
[a 39C 32 32 32 32 32 32 32 32 0 ]
[a 56C 32 32 32 32 32 32 32 32 0 ]
[a 58C 32 32 32 32 32 32 32 32 0 ]
[a 60C 32 32 32 32 32 32 32 32 0 ]
[a 62C 32 32 32 32 32 32 32 32 0 ]
[a 64C 32 32 32 32 32 32 32 32 0 ]
[a 66C 32 32 32 32 32 32 32 32 0 ]
[a 68C 32 32 32 32 32 32 32 32 0 ]
[a 70C 32 32 32 32 32 32 32 32 0 ]
[a 7C 32 0 ]
[a 10C 32 0 ]
[a 13C 32 0 ]
[a 16C 32 0 ]
